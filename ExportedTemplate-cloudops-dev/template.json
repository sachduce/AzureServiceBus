{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "databaseAccounts_bc_audit_management_name": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "databaseAccounts_bc_master_cdb_name": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "databaseAccounts_bc_sap_transaction_cdb_name": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "databaseAccounts_bc_sf_transaction_cdb_name": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "databaseAccounts_bc_snow_transaction_cdb_name": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "sites_TOSCAAPI_name": {
            "defaultValue": "TOSCAAPI",
            "type": "String"
        },
        "connections_sql_name": {
            "defaultValue": "sql",
            "type": "String"
        },
        "sites_ToscaApis_name": {
            "defaultValue": "ToscaApis",
            "type": "String"
        },
        "connections_slack_name": {
            "defaultValue": "slack",
            "type": "String"
        },
        "connections_sql_1_name": {
            "defaultValue": "sql-1",
            "type": "String"
        },
        "connections_sql_2_name": {
            "defaultValue": "sql-2",
            "type": "String"
        },
        "sites_bc_CommonApp_name": {
            "defaultValue": "bc-CommonApp",
            "type": "String"
        },
        "connections_slack_1_name": {
            "defaultValue": "slack-1",
            "type": "String"
        },
        "connections_slack_2_name": {
            "defaultValue": "slack-2",
            "type": "String"
        },
        "connections_office365_name": {
            "defaultValue": "office365",
            "type": "String"
        },
        "sites_test_appservice_name": {
            "defaultValue": "test-appservice",
            "type": "String"
        },
        "connections_documentdb_name": {
            "defaultValue": "documentdb",
            "type": "String"
        },
        "connections_salesforce_name": {
            "defaultValue": "salesforce",
            "type": "String"
        },
        "workflows_test_parser_name": {
            "defaultValue": "test-parser",
            "type": "String"
        },
        "connections_office365_1_name": {
            "defaultValue": "office365-1",
            "type": "String"
        },
        "connections_office365_2_name": {
            "defaultValue": "office365-2",
            "type": "String"
        },
        "connections_salesforce2_name": {
            "defaultValue": "salesforce2",
            "type": "String"
        },
        "connections_salesforce1_name": {
            "defaultValue": "salesforce1",
            "type": "String"
        },
        "connections_service_now_name": {
            "defaultValue": "service-now",
            "type": "String"
        },
        "sites_bconnectaudit_dev_name": {
            "defaultValue": "bconnectaudit-dev",
            "type": "String"
        },
        "sites_SAPBConnectAPIApp_name": {
            "defaultValue": "SAPBConnectAPIApp",
            "type": "String"
        },
        "connections_documentdb_2_name": {
            "defaultValue": "documentdb-2",
            "type": "String"
        },
        "connections_documentdb_1_name": {
            "defaultValue": "documentdb-1",
            "type": "String"
        },
        "connections_documentdb_4_name": {
            "defaultValue": "documentdb-4",
            "type": "String"
        },
        "connections_documentdb_3_name": {
            "defaultValue": "documentdb-3",
            "type": "String"
        },
        "connections_salesforce_3_name": {
            "defaultValue": "salesforce-3",
            "type": "String"
        },
        "connections_servicebus_9_name": {
            "defaultValue": "servicebus-9",
            "type": "String"
        },
        "connections_servicebus_8_name": {
            "defaultValue": "servicebus-8",
            "type": "String"
        },
        "connections_service_now_1_name": {
            "defaultValue": "service-now-1",
            "type": "String"
        },
        "serverfarms_CentralUSPlan_name": {
            "defaultValue": "CentralUSPlan",
            "type": "String"
        },
        "config_web_name": {
            "defaultValue": "web",
            "type": "String"
        },
        "sites_webSite6qpalerame3h4_name": {
            "defaultValue": "webSite6qpalerame3h4",
            "type": "String"
        },
        "config_web_name_1": {
            "defaultValue": "web",
            "type": "String"
        },
        "workflows_bc_sf_Router_la_name": {
            "defaultValue": "bc-sf-Router-la",
            "type": "String"
        },
        "serverfarms_CloudopsHosting_name": {
            "defaultValue": "CloudopsHosting",
            "type": "String"
        },
        "namespaces_bconnectsb_name": {
            "defaultValue": "bconnectsb",
            "type": "String"
        },
        "servers_atlas_testing_server_name": {
            "defaultValue": "atlas-testing-server",
            "type": "String"
        },
        "sites_dw_OpportunityDumper_af_name": {
            "defaultValue": "dw-OpportunityDumper-af",
            "type": "String"
        },
        "sites_bc_audit_management_api_name": {
            "defaultValue": "bc-audit-management-api",
            "type": "String"
        },
        "sites_bc_OpportunityParser_fa_name": {
            "defaultValue": "bc-OpportunityParser-fa",
            "type": "String"
        },
        "config_web_name_2": {
            "defaultValue": "web",
            "type": "String"
        },
        "workflows_Slack_Connector_la_name": {
            "defaultValue": "Slack-Connector-la",
            "type": "String"
        },
        "workflows_test_logging_audit_name": {
            "defaultValue": "test-logging-audit",
            "type": "String"
        },
        "servers_sqlserver6qpalerame3h4_name": {
            "defaultValue": "sqlserver6qpalerame3h4",
            "type": "String"
        },
        "sites_tmdm_ContactPersister_fa_name": {
            "defaultValue": "tmdm-ContactPersister-fa",
            "type": "String"
        },
        "sites_bc_audit_management_api1_name": {
            "defaultValue": "bc-audit-management-api1",
            "type": "String"
        },
        "workflows_bc_sf_GetDetails_la_name": {
            "defaultValue": "bc-sf-GetDetails-la",
            "type": "String"
        },
        "workflows_sf_LeadConnector_la_name": {
            "defaultValue": "sf-LeadConnector-la",
            "type": "String"
        },
        "workflows_Slack_Connector_la1_name": {
            "defaultValue": "Slack-Connector-la1",
            "type": "String"
        },
        "servers_bc_audit_dw_servcer_poc_name": {
            "defaultValue": "bc-audit-dw-servcer-poc",
            "type": "String"
        },
        "storageAccounts_toscaapib645_name": {
            "defaultValue": "toscaapib645",
            "type": "String"
        },
        "config_web_name_3": {
            "defaultValue": "web",
            "type": "String"
        },
        "workflows_tmdm_snow_userflow_la_name": {
            "defaultValue": "tmdm-snow-userflow-la",
            "type": "String"
        },
        "workflows_Tosca_TestingHelper_la_name": {
            "defaultValue": "Tosca-TestingHelper-la",
            "type": "String"
        },
        "sites_bconnectprocessopportunities_name": {
            "defaultValue": "bconnectprocessopportunities",
            "type": "String"
        },
        "config_web_name_4": {
            "defaultValue": "web",
            "type": "String"
        },
        "config_web_name_5": {
            "defaultValue": "web",
            "type": "String"
        },
        "workflows_bc_snow_UserWorkflow_la_name": {
            "defaultValue": "bc-snow-UserWorkflow-la",
            "type": "String"
        },
        "workflows_test_TestingIncident_la_name": {
            "defaultValue": "test-TestingIncident-la",
            "type": "String"
        },
        "components_webSite6qpalerame3h4_name": {
            "defaultValue": "webSite6qpalerame3h4",
            "type": "String"
        },
        "workflows_bc_sf_AccountWorkflow_la_name": {
            "defaultValue": "bc-sf-AccountWorkflow-la",
            "type": "String"
        },
        "workflows_bc_sf_ContactWorkflow_la_name": {
            "defaultValue": "bc-sf-ContactWorkflow-la",
            "type": "String"
        },
        "workflows_mdm_SFContactWorkflow_la_name": {
            "defaultValue": "mdm-SFContactWorkflow-la",
            "type": "String"
        },
        "workflows_test_deleteSFContacts_la_name": {
            "defaultValue": "test-deleteSFContacts-la",
            "type": "String"
        },
        "serverfarms_ServicePlan4456d05f_b8ed_name": {
            "defaultValue": "ServicePlan4456d05f-b8ed",
            "type": "String"
        },
        "serverfarms_ServicePlan9f2174e8_8584_name": {
            "defaultValue": "ServicePlan9f2174e8-8584",
            "type": "String"
        },
        "sites_test_FunctionApp20180402044309_name": {
            "defaultValue": "test-FunctionApp20180402044309",
            "type": "String"
        },
        "databaseAccounts_bc_master_cdb_name_1": {
            "defaultValue": "bc-master-cdb",
            "type": "String"
        },
        "workflows_tmdm_SFContactWorkflow_la_name": {
            "defaultValue": "tmdm-SFContactWorkflow-la",
            "type": "String"
        },
        "workflows_bc_SAP_AccountWorkflow_la_name": {
            "defaultValue": "bc-SAP-AccountWorkflow-la",
            "type": "String"
        },
        "storageAccounts_leadpersister869d_name": {
            "defaultValue": "leadpersister869d",
            "type": "String"
        },
        "storageAccounts_testtemplate1b4ee_name": {
            "defaultValue": "testtemplate1b4ee",
            "type": "String"
        },
        "config_web_name_6": {
            "defaultValue": "web",
            "type": "String"
        },
        "workflows_bc_dw_PushOpportunities_la_name": {
            "defaultValue": "bc-dw-PushOpportunities-la",
            "type": "String"
        },
        "workflows_sf_OpportunityConnector_la_name": {
            "defaultValue": "sf-OpportunityConnector-la",
            "type": "String"
        },
        "sites_bc_SF_OpportunityIntegrator_func_name": {
            "defaultValue": "bc-SF-OpportunityIntegrator-func",
            "type": "String"
        },
        "alertrules_CPUHigh_CloudopsHosting_name": {
            "defaultValue": "CPUHigh CloudopsHosting",
            "type": "String"
        },
        "workflows_bc_snow_IncidentWorkflow_la_name": {
            "defaultValue": "bc-snow-IncidentWorkflow-la",
            "type": "String"
        },
        "workflows_sf_OpportunityConnector_la1_name": {
            "defaultValue": "sf-OpportunityConnector-la1",
            "type": "String"
        },
        "storageAccounts_getsfleadfromco9ba3_name": {
            "defaultValue": "getsfleadfromco9ba3",
            "type": "String"
        },
        "storageAccounts_dwopportunitydu969e_name": {
            "defaultValue": "dwopportunitydu969e",
            "type": "String"
        },
        "storageAccounts_testinghelperco82e3_name": {
            "defaultValue": "testinghelperco82e3",
            "type": "String"
        },
        "storageAccounts_bcsfopportunity8b04_name": {
            "defaultValue": "bcsfopportunity8b04",
            "type": "String"
        },
        "storageAccounts_bcdwopportunity9cfd_name": {
            "defaultValue": "bcdwopportunity9cfd",
            "type": "String"
        },
        "storageAccounts_bcopportunitypa8f7d_name": {
            "defaultValue": "bcopportunitypa8f7d",
            "type": "String"
        },
        "storageAccounts_bcauditmanageme9560_name": {
            "defaultValue": "bcauditmanageme9560",
            "type": "String"
        },
        "storageAccounts_bconnectprocess8771_name": {
            "defaultValue": "bconnectprocess8771",
            "type": "String"
        },
        "storageAccounts_tmdmcontactpersa455_name": {
            "defaultValue": "tmdmcontactpersa455",
            "type": "String"
        },
        "storageAccounts_bconnectsalesfob77c_name": {
            "defaultValue": "bconnectsalesfob77c",
            "type": "String"
        },
        "workflows_bc_sf_AccountSyncWorkflow_LA_name": {
            "defaultValue": "bc-sf-AccountSyncWorkflow-LA",
            "type": "String"
        },
        "workflows_bc_sf_OpportunityWorkflow_la_name": {
            "defaultValue": "bc-sf-OpportunityWorkflow-la",
            "type": "String"
        },
        "workflows_bc_slack_IncidentWorkflow_la_name": {
            "defaultValue": "bc-slack-IncidentWorkflow-la",
            "type": "String"
        },
        "workflows_bc_snow_IncidentConnector_la_name": {
            "defaultValue": "bc-snow-IncidentConnector-la",
            "type": "String"
        },
        "storageAccounts_storage6qpalerame3h4_name": {
            "defaultValue": "storage6qpalerame3h4",
            "type": "String"
        },
        "topics_lead_name": {
            "defaultValue": "lead",
            "type": "String"
        },
        "topics_user_name": {
            "defaultValue": "user",
            "type": "String"
        },
        "config_web_name_7": {
            "defaultValue": "web",
            "type": "String"
        },
        "config_web_name_8": {
            "defaultValue": "web",
            "type": "String"
        },
        "config_web_name_9": {
            "defaultValue": "web",
            "type": "String"
        },
        "workflows_bc_sap_OpportunityWorkflow_la_name": {
            "defaultValue": "bc-sap-OpportunityWorkflow-la",
            "type": "String"
        },
        "topics_slack_name": {
            "defaultValue": "slack",
            "type": "String"
        },
        "config_web_name_10": {
            "defaultValue": "web",
            "type": "String"
        },
        "config_web_name_11": {
            "defaultValue": "web",
            "type": "String"
        },
        "databaseAccounts_bc_audit_management_name_1": {
            "defaultValue": "bc-audit-management",
            "type": "String"
        },
        "workflows_TestingHelperContactWorkFlow_la_name": {
            "defaultValue": "TestingHelperContactWorkFlow-la",
            "type": "String"
        },
        "workflows_bc_sf_ContactWorkflowListner_la_name": {
            "defaultValue": "bc-sf-ContactWorkflowListner-la",
            "type": "String"
        },
        "sites_bc_sf_Contact_BulkContactPersister_fa_name": {
            "defaultValue": "bc-sf-Contact-BulkContactPersister-fa",
            "type": "String"
        },
        "topics_account_name": {
            "defaultValue": "account",
            "type": "String"
        },
        "topics_contact_name": {
            "defaultValue": "contact",
            "type": "String"
        },
        "workflows_bc_sf_AccountWorkflowListener_la_name": {
            "defaultValue": "bc-sf-AccountWorkflowListener-la",
            "type": "String"
        },
        "workflows_bc_sf_AcknowledgementWorkflow_la_name": {
            "defaultValue": "bc-sf-AcknowledgementWorkflow-la",
            "type": "String"
        },
        "storageAccounts_aa372bf50004e46009ec6a4f_name": {
            "defaultValue": "aa372bf50004e46009ec6a4f",
            "type": "String"
        },
        "storageAccounts_a3d79812512454d4f997ab9a_name": {
            "defaultValue": "a3d79812512454d4f997ab9a",
            "type": "String"
        },
        "storageAccounts_a3d474e840a6842d2a0803f1_name": {
            "defaultValue": "a3d474e840a6842d2a0803f1",
            "type": "String"
        },
        "storageAccounts_a8e0198faebda42bf983b3a4_name": {
            "defaultValue": "a8e0198faebda42bf983b3a4",
            "type": "String"
        },
        "storageAccounts_aeb6c4785e3ad4642a23dd89_name": {
            "defaultValue": "aeb6c4785e3ad4642a23dd89",
            "type": "String"
        },
        "storageAccounts_a6dd28abaa670429a8ed943e_name": {
            "defaultValue": "a6dd28abaa670429a8ed943e",
            "type": "String"
        },
        "storageAccounts_a67a46bc2c2cf4970aaa656a_name": {
            "defaultValue": "a67a46bc2c2cf4970aaa656a",
            "type": "String"
        },
        "storageAccounts_ab61e789bb26b4c4587e1bd2_name": {
            "defaultValue": "ab61e789bb26b4c4587e1bd2",
            "type": "String"
        },
        "topics_incident_name": {
            "defaultValue": "incident",
            "type": "String"
        },
        "topics_outtopic_name": {
            "defaultValue": "outtopic",
            "type": "String"
        },
        "databaseAccounts_bc_sf_transaction_cdb_name_1": {
            "defaultValue": "bc-sf-transaction-cdb",
            "type": "String"
        },
        "alertrules_LongHttpQueue_CloudopsHosting_name": {
            "defaultValue": "LongHttpQueue CloudopsHosting",
            "type": "String"
        },
        "workflows_test_TestigHelperLeadConnector_la_name": {
            "defaultValue": "test-TestigHelperLeadConnector-la",
            "type": "String"
        },
        "config_web_name_12": {
            "defaultValue": "web",
            "type": "String"
        },
        "databaseAccounts_bc_sap_transaction_cdb_name_1": {
            "defaultValue": "bc-sap-transaction-cdb",
            "type": "String"
        },
        "workflows_bc_userConsistencyCheckWorkflow_la_name": {
            "defaultValue": "bc-userConsistencyCheckWorkflow-la",
            "type": "String"
        },
        "databaseAccounts_bc_snow_transaction_cdb_name_1": {
            "defaultValue": "bc-snow-transaction-cdb",
            "type": "String"
        },
        "workflows_test_TestingHelperSlackConnector_la_name": {
            "defaultValue": "test-TestingHelperSlackConnector-la",
            "type": "String"
        },
        "topics_opportunity_name": {
            "defaultValue": "opportunity",
            "type": "String"
        },
        "firewallRules_MyIP_name": {
            "defaultValue": "MyIP",
            "type": "String"
        },
        "config_web_name_13": {
            "defaultValue": "web",
            "type": "String"
        },
        "keys_ServiceManaged_name": {
            "defaultValue": "ServiceManaged",
            "type": "String"
        },
        "alertrules_ServerErrors_webSite6qpalerame3h4_name": {
            "defaultValue": "ServerErrors webSite6qpalerame3h4",
            "type": "String"
        },
        "topics_bconnecttopic_name": {
            "defaultValue": "bconnecttopic",
            "type": "String"
        },
        "firewallRules_HomeIp_name": {
            "defaultValue": "HomeIp",
            "type": "String"
        },
        "firewallRules_MahiIP_name": {
            "defaultValue": "MahiIP",
            "type": "String"
        },
        "config_web_name_14": {
            "defaultValue": "web",
            "type": "String"
        },
        "databases_bc_audit_dw_name": {
            "defaultValue": "bc-audit-dw",
            "type": "String"
        },
        "keys_ServiceManaged_name_1": {
            "defaultValue": "ServiceManaged",
            "type": "String"
        },
        "autoscalesettings_CloudopsHosting_cloudops_dev_name": {
            "defaultValue": "CloudopsHosting-cloudops-dev",
            "type": "String"
        },
        "topics_acknowledgement_name": {
            "defaultValue": "acknowledgement",
            "type": "String"
        },
        "keys_ServiceManaged_name_2": {
            "defaultValue": "ServiceManaged",
            "type": "String"
        },
        "workflows_test_TestigHelperOpportunityConnector_la_name": {
            "defaultValue": "test-TestigHelperOpportunityConnector-la",
            "type": "String"
        },
        "auditingPolicies_Default_name": {
            "defaultValue": "Default",
            "type": "String"
        },
        "alertrules_ForbiddenRequests_webSite6qpalerame3h4_name": {
            "defaultValue": "ForbiddenRequests webSite6qpalerame3h4",
            "type": "String"
        },
        "databases_bc_audit_dw_dev_name": {
            "defaultValue": "bc-audit-dw-dev",
            "type": "String"
        },
        "config_web_name_15": {
            "defaultValue": "web",
            "type": "String"
        },
        "firewallRules_103.56.173.1_name": {
            "defaultValue": "103.56.173.1",
            "type": "String"
        },
        "auditingPolicies_Default_name_1": {
            "defaultValue": "Default",
            "type": "String"
        },
        "encryptionProtector_current_name": {
            "defaultValue": "current",
            "type": "String"
        },
        "auditingPolicies_Default_name_2": {
            "defaultValue": "Default",
            "type": "String"
        },
        "databases_tmdm_snow_temp_sql_name": {
            "defaultValue": "tmdm-snow-temp-sql",
            "type": "String"
        },
        "databases_bc_audit_dw_poc_name": {
            "defaultValue": "bc-audit-dw-poc",
            "type": "String"
        },
        "databases_atlas_testingdb_sql_name": {
            "defaultValue": "atlas_testingdb_sql",
            "type": "String"
        },
        "encryptionProtector_current_name_1": {
            "defaultValue": "current",
            "type": "String"
        },
        "hostNameBindings_toscaapi.azurewebsites.net_name": {
            "defaultValue": "toscaapi.azurewebsites.net",
            "type": "String"
        },
        "encryptionProtector_current_name_2": {
            "defaultValue": "current",
            "type": "String"
        },
        "hostNameBindings_toscaapis.azurewebsites.net_name": {
            "defaultValue": "toscaapis.azurewebsites.net",
            "type": "String"
        },
        "firewallRules_AllowAllWindowsAzureIps_name": {
            "defaultValue": "AllowAllWindowsAzureIps",
            "type": "String"
        },
        "hostNameBindings_bc_commonapp.azurewebsites.net_name": {
            "defaultValue": "bc-commonapp.azurewebsites.net",
            "type": "String"
        },
        "firewallRules_AllowAllWindowsAzureIps_name_1": {
            "defaultValue": "AllowAllWindowsAzureIps",
            "type": "String"
        },
        "firewallRules_AllowAllWindowsAzureIps_name_2": {
            "defaultValue": "AllowAllWindowsAzureIps",
            "type": "String"
        },
        "auditingPolicies_Default_name_3": {
            "defaultValue": "Default",
            "type": "String"
        },
        "databases_master_name": {
            "defaultValue": "master",
            "type": "String"
        },
        "geoBackupPolicies_Default_name": {
            "defaultValue": "Default",
            "type": "String"
        },
        "hostNameBindings_test_appservice.azurewebsites.net_name": {
            "defaultValue": "test-appservice.azurewebsites.net",
            "type": "String"
        },
        "AuthorizationRules_RootManageSharedAccessKey_name": {
            "defaultValue": "RootManageSharedAccessKey",
            "type": "String"
        },
        "subscriptions_mysubscription_name": {
            "defaultValue": "mysubscription",
            "type": "String"
        },
        "auditingPolicies_Default_name_4": {
            "defaultValue": "Default",
            "type": "String"
        },
        "databases_master_name_1": {
            "defaultValue": "master",
            "type": "String"
        },
        "backupLongTermRetentionVaults_RegisteredVault_name": {
            "defaultValue": "RegisteredVault",
            "type": "String"
        },
        "geoBackupPolicies_Default_name_1": {
            "defaultValue": "Default",
            "type": "String"
        },
        "subscriptions_connector_subscriber_name": {
            "defaultValue": "connector-subscriber",
            "type": "String"
        },
        "subscriptions_snow_user_subscriber_name": {
            "defaultValue": "snow-user-subscriber",
            "type": "String"
        },
        "auditingPolicies_Default_name_5": {
            "defaultValue": "Default",
            "type": "String"
        },
        "subscriptions_connector_subscriber_name_1": {
            "defaultValue": "connector-subscriber",
            "type": "String"
        },
        "geoBackupPolicies_Default_name_2": {
            "defaultValue": "Default",
            "type": "String"
        },
        "advisors_DropIndex_name": {
            "defaultValue": "DropIndex",
            "type": "String"
        },
        "backupLongTermRetentionVaults_RegisteredVault_name_1": {
            "defaultValue": "RegisteredVault",
            "type": "String"
        },
        "hostNameBindings_bconnectaudit_dev.azurewebsites.net_name": {
            "defaultValue": "bconnectaudit-dev.azurewebsites.net",
            "type": "String"
        },
        "hostNameBindings_sapbconnectapiapp.azurewebsites.net_name": {
            "defaultValue": "sapbconnectapiapp.azurewebsites.net",
            "type": "String"
        },
        "firewallRules_ClientIPAddress_2018_3_12_12_28_55_name": {
            "defaultValue": "ClientIPAddress_2018-3-12_12-28-55",
            "type": "String"
        },
        "advisors_DropIndex_name_1": {
            "defaultValue": "DropIndex",
            "type": "String"
        },
        "backupLongTermRetentionVaults_RegisteredVault_name_2": {
            "defaultValue": "RegisteredVault",
            "type": "String"
        },
        "advisors_CreateIndex_name": {
            "defaultValue": "CreateIndex",
            "type": "String"
        },
        "subscriptions_sf_account_subscriber_name": {
            "defaultValue": "sf-account-subscriber",
            "type": "String"
        },
        "subscriptions_sf_contact_subscriber_name": {
            "defaultValue": "sf-contact-subscriber",
            "type": "String"
        },
        "advisors_CreateIndex_name_1": {
            "defaultValue": "CreateIndex",
            "type": "String"
        },
        "auditingPolicies_Default_name_6": {
            "defaultValue": "Default",
            "type": "String"
        },
        "transparentDataEncryption_current_name": {
            "defaultValue": "current",
            "type": "String"
        },
        "subscriptions_sap_account_subscriber_name": {
            "defaultValue": "sap-account-subscriber",
            "type": "String"
        },
        "geoBackupPolicies_Default_name_3": {
            "defaultValue": "Default",
            "type": "String"
        },
        "firewallRules_ClientIPAddress_2018_02_19_10:24:06_name": {
            "defaultValue": "ClientIPAddress_2018-02-19_10:24:06",
            "type": "String"
        },
        "subscriptions_connector_subscriber_name_2": {
            "defaultValue": "connector-subscriber",
            "type": "String"
        },
        "auditingPolicies_Default_name_7": {
            "defaultValue": "Default",
            "type": "String"
        },
        "auditingPolicies_Default_name_8": {
            "defaultValue": "Default",
            "type": "String"
        },
        "transparentDataEncryption_current_name_1": {
            "defaultValue": "current",
            "type": "String"
        },
        "hostNameBindings_website6qpalerame3h4.azurewebsites.net_name": {
            "defaultValue": "website6qpalerame3h4.azurewebsites.net",
            "type": "String"
        },
        "subscriptions_snow_incident_subscriber_name": {
            "defaultValue": "snow-incident-subscriber",
            "type": "String"
        },
        "auditingPolicies_Default_name_9": {
            "defaultValue": "Default",
            "type": "String"
        },
        "geoBackupPolicies_Default_name_4": {
            "defaultValue": "Default",
            "type": "String"
        },
        "geoBackupPolicies_Default_name_5": {
            "defaultValue": "Default",
            "type": "String"
        },
        "subscriptions_bconnectsubscription_name": {
            "defaultValue": "bconnectsubscription",
            "type": "String"
        },
        "geoBackupPolicies_Default_name_6": {
            "defaultValue": "Default",
            "type": "String"
        },
        "transparentDataEncryption_current_name_2": {
            "defaultValue": "current",
            "type": "String"
        },
        "advisors_ForceLastGoodPlan_name": {
            "defaultValue": "ForceLastGoodPlan",
            "type": "String"
        },
        "advisors_ForceLastGoodPlan_name_1": {
            "defaultValue": "ForceLastGoodPlan",
            "type": "String"
        },
        "backupLongTermRetentionPolicies_Default_name": {
            "defaultValue": "Default",
            "type": "String"
        },
        "advisors_DbParameterization_name": {
            "defaultValue": "DbParameterization",
            "type": "String"
        },
        "advisors_DbParameterization_name_1": {
            "defaultValue": "DbParameterization",
            "type": "String"
        },
        "subscriptions_dw_opportunity_subscriber_name": {
            "defaultValue": "dw-opportunity-subscriber",
            "type": "String"
        },
        "subscriptions_sap_opportunity_subscriber_name": {
            "defaultValue": "sap-opportunity-subscriber",
            "type": "String"
        },
        "rules_$Default_name": {
            "defaultValue": "$Default",
            "type": "String"
        },
        "transparentDataEncryption_current_name_3": {
            "defaultValue": "current",
            "type": "String"
        },
        "backupLongTermRetentionPolicies_Default_name_1": {
            "defaultValue": "Default",
            "type": "String"
        },
        "hostNameBindings_dw_opportunitydumper_af.azurewebsites.net_name": {
            "defaultValue": "dw-opportunitydumper-af.azurewebsites.net",
            "type": "String"
        },
        "hostNameBindings_bc_audit_management_api.azurewebsites.net_name": {
            "defaultValue": "bc-audit-management-api.azurewebsites.net",
            "type": "String"
        },
        "hostNameBindings_bc_opportunityparser_fa.azurewebsites.net_name": {
            "defaultValue": "bc-opportunityparser-fa.azurewebsites.net",
            "type": "String"
        },
        "subscriptions_temp_opportunity_subscriber_name": {
            "defaultValue": "temp-opportunity-subscriber",
            "type": "String"
        },
        "rules_$Default_name_1": {
            "defaultValue": "$Default",
            "type": "String"
        },
        "rules_$Default_name_2": {
            "defaultValue": "$Default",
            "type": "String"
        },
        "backupLongTermRetentionPolicies_Default_name_2": {
            "defaultValue": "Default",
            "type": "String"
        },
        "hostNameBindings_tmdm_contactpersister_fa.azurewebsites.net_name": {
            "defaultValue": "tmdm-contactpersister-fa.azurewebsites.net",
            "type": "String"
        },
        "hostNameBindings_bc_audit_management_api1.azurewebsites.net_name": {
            "defaultValue": "bc-audit-management-api1.azurewebsites.net",
            "type": "String"
        },
        "rules_$Default_name_3": {
            "defaultValue": "$Default",
            "type": "String"
        },
        "transparentDataEncryption_current_name_4": {
            "defaultValue": "current",
            "type": "String"
        },
        "transparentDataEncryption_current_name_5": {
            "defaultValue": "current",
            "type": "String"
        },
        "transparentDataEncryption_current_name_6": {
            "defaultValue": "current",
            "type": "String"
        },
        "rules_$Default_name_4": {
            "defaultValue": "$Default",
            "type": "String"
        },
        "rules_$Default_name_5": {
            "defaultValue": "$Default",
            "type": "String"
        },
        "backupLongTermRetentionPolicies_Default_name_3": {
            "defaultValue": "Default",
            "type": "String"
        },
        "rules_$Default_name_6": {
            "defaultValue": "$Default",
            "type": "String"
        },
        "subscriptions_sf_acknowledgement_subscriber_name": {
            "defaultValue": "sf-acknowledgement-subscriber",
            "type": "String"
        },
        "rules_$Default_name_7": {
            "defaultValue": "$Default",
            "type": "String"
        },
        "backupLongTermRetentionPolicies_Default_name_4": {
            "defaultValue": "Default",
            "type": "String"
        },
        "backupLongTermRetentionPolicies_Default_name_5": {
            "defaultValue": "Default",
            "type": "String"
        },
        "rules_$Default_name_8": {
            "defaultValue": "$Default",
            "type": "String"
        },
        "backupLongTermRetentionPolicies_Default_name_6": {
            "defaultValue": "Default",
            "type": "String"
        },
        "hostNameBindings_bconnectprocessopportunities.azurewebsites.net_name": {
            "defaultValue": "bconnectprocessopportunities.azurewebsites.net",
            "type": "String"
        },
        "rules_$Default_name_9": {
            "defaultValue": "$Default",
            "type": "String"
        },
        "rules_$Default_name_10": {
            "defaultValue": "$Default",
            "type": "String"
        },
        "hostNameBindings_test_functionapp20180402044309.azurewebsites.net_name": {
            "defaultValue": "test-functionapp20180402044309.azurewebsites.net",
            "type": "String"
        },
        "rules_$Default_name_11": {
            "defaultValue": "$Default",
            "type": "String"
        },
        "rules_$Default_name_12": {
            "defaultValue": "$Default",
            "type": "String"
        },
        "hostNameBindings_bc_sf_opportunityintegrator_func.azurewebsites.net_name": {
            "defaultValue": "bc-sf-opportunityintegrator-func.azurewebsites.net",
            "type": "String"
        },
        "rules_$Default_name_13": {
            "defaultValue": "$Default",
            "type": "String"
        },
        "hostNameBindings_bc_sf_contact_bulkcontactpersister_fa.azurewebsites.net_name": {
            "defaultValue": "bc-sf-contact-bulkcontactpersister-fa.azurewebsites.net",
            "type": "String"
        },
        "workflows_bc_dw_PushOpportunities_la_id": {
            "defaultValue": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-dw-opportunityPersister-fa/functions/HttpTriggerCSharp1",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.DocumentDB/databaseAccounts/bc-audit-management'.",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "kind": "GlobalDocumentDB",
            "name": "[parameters('databaseAccounts_bc_audit_management_name_1')]",
            "apiVersion": "2015-04-08",
            "location": "West Europe",
            "tags": {
                "defaultExperience": "DocumentDB"
            },
            "scale": null,
            "properties": {
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "name": "[parameters('databaseAccounts_bc_audit_management_name')]"
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.DocumentDB/databaseAccounts/bc-master-cdb'.",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "kind": "GlobalDocumentDB",
            "name": "[parameters('databaseAccounts_bc_master_cdb_name_1')]",
            "apiVersion": "2015-04-08",
            "location": "West Europe",
            "tags": {
                "defaultExperience": "DocumentDB"
            },
            "scale": null,
            "properties": {
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "name": "[parameters('databaseAccounts_bc_master_cdb_name')]"
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.DocumentDB/databaseAccounts/bc-sap-transaction-cdb'.",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "kind": "GlobalDocumentDB",
            "name": "[parameters('databaseAccounts_bc_sap_transaction_cdb_name_1')]",
            "apiVersion": "2015-04-08",
            "location": "West Europe",
            "tags": {
                "defaultExperience": "DocumentDB"
            },
            "scale": null,
            "properties": {
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "name": "[parameters('databaseAccounts_bc_sap_transaction_cdb_name')]"
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.DocumentDB/databaseAccounts/bc-sf-transaction-cdb'.",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "kind": "GlobalDocumentDB",
            "name": "[parameters('databaseAccounts_bc_sf_transaction_cdb_name_1')]",
            "apiVersion": "2015-04-08",
            "location": "West Europe",
            "tags": {
                "defaultExperience": "DocumentDB"
            },
            "scale": null,
            "properties": {
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "name": "[parameters('databaseAccounts_bc_sf_transaction_cdb_name')]"
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.DocumentDB/databaseAccounts/bc-snow-transaction-cdb'.",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "kind": "GlobalDocumentDB",
            "name": "[parameters('databaseAccounts_bc_snow_transaction_cdb_name_1')]",
            "apiVersion": "2015-04-08",
            "location": "West Europe",
            "tags": {
                "defaultExperience": "DocumentDB"
            },
            "scale": null,
            "properties": {
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "name": "[parameters('databaseAccounts_bc_snow_transaction_cdb_name')]"
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/microsoft.insights/alertrules/CPUHigh CloudopsHosting'.",
            "type": "microsoft.insights/alertrules",
            "name": "[parameters('alertrules_CPUHigh_CloudopsHosting_name')]",
            "apiVersion": "2014-04-01",
            "location": "westeurope",
            "tags": {
                "displayName": "CPUHighAlertRule",
                "hidden-link:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CloudopsHosting": "Resource"
            },
            "scale": null,
            "properties": {
                "name": "[parameters('alertrules_CPUHigh_CloudopsHosting_name')]",
                "description": "The average CPU is high across all the instances of CloudopsHosting",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CloudopsHosting_name'))]",
                        "metricNamespace": null,
                        "metricName": "CpuPercentage"
                    },
                    "operator": "GreaterThan",
                    "threshold": 90,
                    "windowSize": "PT15M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CloudopsHosting_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/microsoft.insights/alertrules/ForbiddenRequests webSite6qpalerame3h4'.",
            "type": "microsoft.insights/alertrules",
            "name": "[parameters('alertrules_ForbiddenRequests_webSite6qpalerame3h4_name')]",
            "apiVersion": "2014-04-01",
            "location": "westeurope",
            "tags": {
                "displayName": "ForbiddenRequestsAlertRule",
                "hidden-link:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/webSite6qpalerame3h4": "Resource"
            },
            "scale": null,
            "properties": {
                "name": "[parameters('alertrules_ForbiddenRequests_webSite6qpalerame3h4_name')]",
                "description": "webSite6qpalerame3h4 has some requests that are forbidden, status code 403.",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[resourceId('Microsoft.Web/sites', parameters('sites_webSite6qpalerame3h4_name'))]",
                        "metricNamespace": null,
                        "metricName": "Http403"
                    },
                    "operator": "GreaterThan",
                    "threshold": 0,
                    "windowSize": "PT5M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webSite6qpalerame3h4_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/microsoft.insights/alertrules/LongHttpQueue CloudopsHosting'.",
            "type": "microsoft.insights/alertrules",
            "name": "[parameters('alertrules_LongHttpQueue_CloudopsHosting_name')]",
            "apiVersion": "2014-04-01",
            "location": "westeurope",
            "tags": {
                "displayName": "AutoScaleSettings",
                "hidden-link:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CloudopsHosting": "Resource"
            },
            "scale": null,
            "properties": {
                "name": "[parameters('alertrules_LongHttpQueue_CloudopsHosting_name')]",
                "description": "The HTTP queue for the instances of CloudopsHosting has a large number of pending requests.",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CloudopsHosting_name'))]",
                        "metricNamespace": null,
                        "metricName": "HttpQueueLength"
                    },
                    "operator": "GreaterThan",
                    "threshold": 100,
                    "windowSize": "PT5M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CloudopsHosting_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/microsoft.insights/alertrules/ServerErrors webSite6qpalerame3h4'.",
            "type": "microsoft.insights/alertrules",
            "name": "[parameters('alertrules_ServerErrors_webSite6qpalerame3h4_name')]",
            "apiVersion": "2014-04-01",
            "location": "westeurope",
            "tags": {
                "displayName": "ServerErrorsAlertRule",
                "hidden-link:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/webSite6qpalerame3h4": "Resource"
            },
            "scale": null,
            "properties": {
                "name": "[parameters('alertrules_ServerErrors_webSite6qpalerame3h4_name')]",
                "description": "webSite6qpalerame3h4 has some server errors, status code 5xx.",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[resourceId('Microsoft.Web/sites', parameters('sites_webSite6qpalerame3h4_name'))]",
                        "metricNamespace": null,
                        "metricName": "Http5xx"
                    },
                    "operator": "GreaterThan",
                    "threshold": 0,
                    "windowSize": "PT5M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webSite6qpalerame3h4_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/microsoft.insights/autoscalesettings/CloudopsHosting-cloudops-dev'.",
            "type": "microsoft.insights/autoscalesettings",
            "name": "[parameters('autoscalesettings_CloudopsHosting_cloudops_dev_name')]",
            "apiVersion": "2014-04-01",
            "location": "westeurope",
            "tags": {
                "displayName": "AutoScaleSettings",
                "hidden-link:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CloudopsHosting": "Resource"
            },
            "scale": null,
            "properties": {
                "profiles": [
                    {
                        "name": "Default",
                        "capacity": {
                            "minimum": "1",
                            "maximum": "2",
                            "default": "1"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CloudopsHosting_name'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 80
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT10M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CloudopsHosting_name'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT1H",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 60
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1H"
                                }
                            }
                        ]
                    }
                ],
                "enabled": false,
                "name": "[parameters('autoscalesettings_CloudopsHosting_cloudops_dev_name')]",
                "targetResourceUri": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CloudopsHosting_name'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CloudopsHosting_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/microsoft.insights/components/webSite6qpalerame3h4'.",
            "type": "microsoft.insights/components",
            "kind": "web",
            "name": "[parameters('components_webSite6qpalerame3h4_name')]",
            "apiVersion": "2015-05-01",
            "location": "eastus",
            "tags": {
                "displayName": "AppInsightsComponent",
                "hidden-link:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/webSite6qpalerame3h4": "Resource"
            },
            "scale": null,
            "properties": {
                "Application_Type": "web",
                "Flow_Type": null,
                "Request_Source": null,
                "HockeyAppId": null,
                "SamplingPercentage": null
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/TestingHelperContactWorkFlow-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_TestingHelperContactWorkFlow_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Compose_Payload": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "actionType": "@{body('Parse_JSON')?['actionType']}",
                                "body": "@body('Parse_JSON')?['body']",
                                "correlationId": "@body('Parse_JSON')?['correlationId']",
                                "dataType": "Contact",
                                "id": "@body('Parse_JSON')?['id']",
                                "objectId": "@body('Parse_JSON')?['objectId']",
                                "source": "ServiceNow",
                                "status": "Complete"
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()",
                                "schema": {
                                    "properties": {
                                        "actionType": {
                                            "type": "string"
                                        },
                                        "body": {
                                            "type": "object"
                                        },
                                        "correlationId": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "objectId": {
                                            "type": "string"
                                        },
                                        "recordId": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Send_message": {
                            "runAfter": {
                                "Compose_Payload": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "ContentData": "@{base64(outputs('Compose_Payload'))}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/@{encodeURIComponent(encodeURIComponent('contact'))}/messages",
                                "queries": {
                                    "systemProperties": "None"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/tmdm-SFContactWorkflow-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_tmdm_SFContactWorkflow_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Action_Payload": {
                            "runAfter": {},
                            "type": "Compose",
                            "inputs": {
                                "inputs": {
                                    "actionType": "migrateAll",
                                    "body": {},
                                    "correlationId": "15bc6874-d299-4643-b5f2-f97b4de4127c",
                                    "dataType": "Contact",
                                    "id": "sdfsdfsdf",
                                    "objectId": "044W88724925951",
                                    "source": "Salesforce",
                                    "status": "InProgress"
                                }
                            }
                        },
                        "Initialize_paging_counter_variable": {
                            "runAfter": {
                                "Action_Payload": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "counter",
                                        "type": "Integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Until": {
                            "actions": {
                                "Get_all_Contact_records": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Contact'))}/items",
                                        "queries": {
                                            "$orderby": "Id",
                                            "$top": 200,
                                            "$skip": "@mul(200, variables('counter'))"
                                        }
                                    }
                                },
                                "BulkContactPersister": {
                                    "runAfter": {
                                        "Get_all_Contact_records": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": "@body('Get_all_Contact_records')?['value']",
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_tmdm_ContactPersister_fa_name')), '/functions/BulkContactPersister')]"
                                        }
                                    }
                                },
                                "Increment_variable": {
                                    "runAfter": {
                                        "BulkContactPersister": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "IncrementVariable",
                                    "inputs": {
                                        "name": "counter",
                                        "value": 1
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_paging_counter_variable": [
                                    "Succeeded"
                                ]
                            },
                            "expression": "@equals(length(body('Get_all_Contact_records')?['value']), 0)",
                            "limit": {
                                "count": 60,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "salesforce": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                                "connectionName": "salesforce-3"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_tmdm_ContactPersister_fa_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/tmdm-snow-userflow-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_tmdm_snow_userflow_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_every_user": {
                            "foreach": "@body('Get_all_users')?['result']",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Insert_row": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "active": "@items('For_every_user')?['active']",
                                                    "building": "@items('For_every_user')?['building']",
                                                    "calendar_integration": "@items('For_every_user')?['calendar_integration']",
                                                    "city": "@items('For_every_user')?['city']",
                                                    "company": "@items('For_every_user')?['company']",
                                                    "cost_center": "@items('For_every_user')?['cost_center']",
                                                    "country": "@items('For_every_user')?['country']",
                                                    "date_format": "@items('For_every_user')?['date_format']",
                                                    "default_perspective": "@items('For_every_user')?['default_perspective']",
                                                    "department": "@items('For_every_user')?['department']",
                                                    "email": "@items('For_every_user')?['email']",
                                                    "employee_number": "@items('For_every_user')?['employee_number']",
                                                    "enable_multifactor_authn": "@items('For_every_user')?['enable_multifactor_authn']",
                                                    "failed_attempts": "@items('For_every_user')?['failed_attempts']",
                                                    "first_name": "@items('For_every_user')?['first_name']",
                                                    "gender": "@items('For_every_user')?['gender']",
                                                    "home_phone": "@items('For_every_user')?['home_phone']",
                                                    "internal_integration_user": "@items('For_every_user')?['internal_integration_user']",
                                                    "introduction": "@items('For_every_user')?['introduction']",
                                                    "last_login": "@items('For_every_user')?['last_login']",
                                                    "last_login_time": "@items('For_every_user')?['last_login_time']",
                                                    "last_name": "@items('For_every_user')?['last_name']",
                                                    "ldap_server": "@items('For_every_user')?['ldap_server']",
                                                    "location": "@items('For_every_user')?['location']",
                                                    "locked_out": "@items('For_every_user')?['locked_out']",
                                                    "manager": "@items('For_every_user')?['manager']",
                                                    "middle_name": "@items('For_every_user')?['middle_name']",
                                                    "mobile_phone": "@items('For_every_user')?['mobile_phone']",
                                                    "name": "@items('For_every_user')?['name']",
                                                    "notification": "@items('For_every_user')?['notification']",
                                                    "password_needs_reset": "@items('For_every_user')?['password_needs_reset']",
                                                    "phone": "@items('For_every_user')?['mobile_phone']",
                                                    "photo": "@items('For_every_user')?['photo']",
                                                    "preferred_language": "@items('For_every_user')?['preferred_language']",
                                                    "roles": "@items('For_every_user')?['roles']",
                                                    "schedule": "@items('For_every_user')?['schedule']",
                                                    "snow_user_name": "@items('For_every_user')?['user_name']",
                                                    "source": "@items('For_every_user')?['source']",
                                                    "state": "@items('For_every_user')?['state']",
                                                    "street": "@items('For_every_user')?['street']",
                                                    "sys_class_name": "@items('For_every_user')?['sys_class_name']",
                                                    "sys_created_by": "@items('For_every_user')?['sys_created_by']",
                                                    "sys_created_on": "@items('For_every_user')?['sys_created_on']",
                                                    "sys_domain": "@items('For_every_user')?['sys_domain']",
                                                    "sys_domain_path": "@items('For_every_user')?['sys_domain_path']",
                                                    "sys_id": "@items('For_every_user')?['sys_id']",
                                                    "sys_mod_count": "@items('For_every_user')?['sys_mod_count']",
                                                    "sys_tags": "@items('For_every_user')?['sys_tags']",
                                                    "sys_updated_by": "@items('For_every_user')?['sys_updated_by']",
                                                    "sys_updated_on": "@items('For_every_user')?['sys_updated_on']",
                                                    "time_format": "@items('For_every_user')?['time_format']",
                                                    "time_zone": "@items('For_every_user')?['time_zone']",
                                                    "title": "@items('For_every_user')?['title']",
                                                    "user_password": "@items('For_every_user')?['user_password']",
                                                    "vip": "@items('For_every_user')?['vip']",
                                                    "web_service_access_only": "@items('For_every_user')?['web_service_access_only']",
                                                    "zip": "@items('For_every_user')?['zip']"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[SNOW_USER_TABLE]'))}/items"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Get_row": [
                                            "Failed"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('Get_row')?['status']",
                                                    404
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Get_row": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[SNOW_USER_TABLE]'))}/items/@{encodeURIComponent(encodeURIComponent(items('For_every_user')?['sys_id']))}",
                                        "retryPolicy": {
                                            "type": "none"
                                        }
                                    }
                                },
                                "Update_row": {
                                    "runAfter": {
                                        "Get_row": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "active": "@items('For_every_user')?['active']",
                                            "building": "@items('For_every_user')?['building']",
                                            "calendar_integration": "@items('For_every_user')?['calendar_integration']",
                                            "city": "@items('For_every_user')?['city']",
                                            "company": "@items('For_every_user')?['company']",
                                            "cost_center": "@items('For_every_user')?['cost_center']",
                                            "country": "@items('For_every_user')?['country']",
                                            "date_format": "@items('For_every_user')?['date_format']",
                                            "default_perspective": "@items('For_every_user')?['default_perspective']",
                                            "department": "@items('For_every_user')?['department']",
                                            "email": "@items('For_every_user')?['email']",
                                            "employee_number": "@items('For_every_user')?['employee_number']",
                                            "enable_multifactor_authn": "@items('For_every_user')?['enable_multifactor_authn']",
                                            "failed_attempts": "@items('For_every_user')?['failed_attempts']",
                                            "first_name": "@items('For_every_user')?['first_name']",
                                            "gender": "@items('For_every_user')?['gender']",
                                            "home_phone": "@items('For_every_user')?['home_phone']",
                                            "internal_integration_user": "@items('For_every_user')?['internal_integration_user']",
                                            "introduction": "@items('For_every_user')?['introduction']",
                                            "last_login": "@items('For_every_user')?['last_login']",
                                            "last_login_time": "@items('For_every_user')?['last_login_time']",
                                            "last_name": "@items('For_every_user')?['last_name']",
                                            "ldap_server": "@items('For_every_user')?['ldap_server']",
                                            "location": "@items('For_every_user')?['location']",
                                            "locked_out": "@items('For_every_user')?['locked_out']",
                                            "manager": "@items('For_every_user')?['manager']",
                                            "middle_name": "@items('For_every_user')?['middle_name']",
                                            "mobile_phone": "@items('For_every_user')?['mobile_phone']",
                                            "name": "@items('For_every_user')?['name']",
                                            "notification": "@items('For_every_user')?['notification']",
                                            "password_needs_reset": "@items('For_every_user')?['password_needs_reset']",
                                            "phone": "@items('For_every_user')?['mobile_phone']",
                                            "photo": "@items('For_every_user')?['photo']",
                                            "preferred_language": "@items('For_every_user')?['preferred_language']",
                                            "roles": "@items('For_every_user')?['roles']",
                                            "schedule": "@items('For_every_user')?['schedule']",
                                            "snow_user_name": "@items('For_every_user')?['user_name']",
                                            "source": "@items('For_every_user')?['source']",
                                            "state": "@items('For_every_user')?['state']",
                                            "street": "@items('For_every_user')?['street']",
                                            "sys_class_name": "@items('For_every_user')?['sys_class_name']",
                                            "sys_created_by": "@items('For_every_user')?['sys_created_by']",
                                            "sys_created_on": "@items('For_every_user')?['sys_created_on']",
                                            "sys_domain": "@items('For_every_user')?['sys_domain']",
                                            "sys_domain_path": "@items('For_every_user')?['sys_domain_path']",
                                            "sys_id": "@items('For_every_user')?['sys_id']",
                                            "sys_mod_count": "@items('For_every_user')?['sys_mod_count']",
                                            "sys_tags": "@items('For_every_user')?['sys_tags']",
                                            "sys_updated_by": "@items('For_every_user')?['sys_updated_by']",
                                            "sys_updated_on": "@items('For_every_user')?['sys_updated_on']",
                                            "time_format": "@items('For_every_user')?['time_format']",
                                            "time_zone": "@items('For_every_user')?['time_zone']",
                                            "title": "@items('For_every_user')?['title']",
                                            "user_password": "@items('For_every_user')?['user_password']",
                                            "vip": "@items('For_every_user')?['vip']",
                                            "web_service_access_only": "@items('For_every_user')?['web_service_access_only']",
                                            "zip": "@items('For_every_user')?['zip']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "patch",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[SNOW_USER_TABLE]'))}/items/@{encodeURIComponent(encodeURIComponent(body('Get_row')['sys_id']))}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_all_users": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_all_users": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['service-now_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/api/now/v2/table/@{encodeURIComponent('sys_user')}",
                                "queries": {
                                    "sysparm_display_value": false,
                                    "sysparm_exclude_reference_link": true
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "service-now_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_service_now_1_name'))]",
                                "connectionName": "service-now-1",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/service-now"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]",
                                "connectionName": "sql-1",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_service_now_1_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/Tosca-TestingHelper-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_Tosca_TestingHelper_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Switch": {
                            "runAfter": {},
                            "cases": {
                                "Case": {
                                    "case": "slak",
                                    "actions": {
                                        "Send_message": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "body": {
                                                    "ContentData": "@{base64(triggerBody())}"
                                                },
                                                "path": "/@{encodeURIComponent(encodeURIComponent('slack'))}/messages",
                                                "queries": {
                                                    "systemProperties": "None"
                                                }
                                            }
                                        },
                                        "Response_2": {
                                            "runAfter": {
                                                "Send_message": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Response",
                                            "kind": "Http",
                                            "inputs": {
                                                "statusCode": 200,
                                                "body": {
                                                    "message": "The action request is pushed to Service bus successfully."
                                                }
                                            }
                                        }
                                    }
                                },
                                "Case_2": {
                                    "case": "opprunity",
                                    "actions": {
                                        "Send_message_to_Opportunity_topic": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/@{encodeURIComponent(encodeURIComponent('opportunity'))}/messages",
                                                "queries": {
                                                    "systemProperties": "None"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {}
                            },
                            "expression": "@triggerBody()?['topic']",
                            "type": "Switch"
                        },
                        "Response": {
                            "runAfter": {
                                "Switch": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200,
                                "body": {
                                    "message": "The action request is pushed to Service bus successfully."
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_9_name'))]",
                                "connectionName": "servicebus-9"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_9_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-dw-PushOpportunities-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_dw_PushOpportunities_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_topic_subscription_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('opportunity'))}/subscriptions/@{encodeURIComponent('dw-opportunity-subscriber')}/messages/head",
                                "queries": {
                                    "subscriptionType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "HttpTriggerCSharp1": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": "@body('Parse_JSON')",
                                "function": {
                                    "id": "[parameters('workflows_bc_dw_PushOpportunities_la_id')]"
                                }
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@{json(base64ToString(triggerBody()?['ContentData']))}",
                                "schema": {
                                    "properties": {
                                        "Status": {
                                            "type": "string"
                                        },
                                        "actionType": {
                                            "type": "string"
                                        },
                                        "body": {
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "sf:AccountId": {
                                                    "type": "string"
                                                },
                                                "sf:Age__c": {
                                                    "type": "string"
                                                },
                                                "sf:CloseDate": {
                                                    "type": "string"
                                                },
                                                "sf:Close_Quarter_Year__c": {
                                                    "type": "string"
                                                },
                                                "sf:Closed_Amount__c": {
                                                    "type": "string"
                                                },
                                                "sf:Closed_PSO_Amount__c": {
                                                    "type": "string"
                                                },
                                                "sf:Commit_Amount__c": {
                                                    "type": "string"
                                                },
                                                "sf:Commit_PSO_Amount__c": {
                                                    "type": "string"
                                                },
                                                "sf:CreatedById": {
                                                    "type": "string"
                                                },
                                                "sf:CreatedDate": {
                                                    "type": "string"
                                                },
                                                "sf:CurrencyIsoCode": {
                                                    "type": "string"
                                                },
                                                "sf:FiscalQuarter": {
                                                    "type": "string"
                                                },
                                                "sf:FiscalYear": {
                                                    "type": "string"
                                                },
                                                "sf:Fiscal_Quarter__c": {
                                                    "type": "string"
                                                },
                                                "sf:Fiscal_Week__c": {
                                                    "type": "string"
                                                },
                                                "sf:ForecastCategory": {
                                                    "type": "string"
                                                },
                                                "sf:ForecastCategoryName": {
                                                    "type": "string"
                                                },
                                                "sf:Geo__c": {
                                                    "type": "string"
                                                },
                                                "sf:HasOpenActivity": {
                                                    "type": "string"
                                                },
                                                "sf:HasOpportunityLineItem": {
                                                    "type": "string"
                                                },
                                                "sf:HasOverdueTask": {
                                                    "type": "string"
                                                },
                                                "sf:Has_Integrator__c": {
                                                    "type": "string"
                                                },
                                                "sf:Id": {
                                                    "type": "string"
                                                },
                                                "sf:IsClosed": {
                                                    "type": "string"
                                                },
                                                "sf:IsDeleted": {
                                                    "type": "string"
                                                },
                                                "sf:IsWon": {
                                                    "type": "string"
                                                },
                                                "sf:LastModifiedById": {
                                                    "type": "string"
                                                },
                                                "sf:LastModifiedDate": {
                                                    "type": "string"
                                                },
                                                "sf:LeadSource": {
                                                    "type": "string"
                                                },
                                                "sf:License_Type__c": {
                                                    "type": "string"
                                                },
                                                "sf:Name": {
                                                    "type": "string"
                                                },
                                                "sf:NextStep": {
                                                    "type": "string"
                                                },
                                                "sf:Normalized_ACVMgmtCommit__c": {
                                                    "type": "string"
                                                },
                                                "sf:Normalized_ACV__c": {
                                                    "type": "string"
                                                },
                                                "sf:Normalized_ACVinEuro__c": {
                                                    "type": "string"
                                                },
                                                "sf:Number_of_accepted_quotes__c": {
                                                    "type": "string"
                                                },
                                                "sf:Number_of_approved_quotes__c": {
                                                    "type": "string"
                                                },
                                                "sf:Opportunity_Age_Hours__c": {
                                                    "type": "string"
                                                },
                                                "sf:Opportunity_Created_Date_Time__c": {
                                                    "type": "string"
                                                },
                                                "sf:OwnerId": {
                                                    "type": "string"
                                                },
                                                "sf:Partner_registered__c": {
                                                    "type": "string"
                                                },
                                                "sf:Pipeline_Amount__c": {
                                                    "type": "string"
                                                },
                                                "sf:Pricebook2Id": {
                                                    "type": "string"
                                                },
                                                "sf:QTD_Current_and_Previous_FY__c": {
                                                    "type": "string"
                                                },
                                                "sf:Quarter_Target_Global_LIC_FYM__c": {
                                                    "type": "string"
                                                },
                                                "sf:Quarter_Target_Global_PSO__c": {
                                                    "type": "string"
                                                },
                                                "sf:Quarter_Target_Global__c": {
                                                    "type": "string"
                                                },
                                                "sf:Quarter_Target_LIC_FYM_PSO__c": {
                                                    "type": "string"
                                                },
                                                "sf:Quarter_Target_LIC_FYM__c": {
                                                    "type": "string"
                                                },
                                                "sf:Quarter_Target_PSO__c": {
                                                    "type": "string"
                                                },
                                                "sf:RecordTypeId": {
                                                    "type": "string"
                                                },
                                                "sf:Revenue_Type__c": {
                                                    "type": "string"
                                                },
                                                "sf:SBQQ__Contracted__c": {
                                                    "type": "string"
                                                },
                                                "sf:SBQQ__CreateContractedPrices__c": {
                                                    "type": "string"
                                                },
                                                "sf:SBQQ__Ordered__c": {
                                                    "type": "string"
                                                },
                                                "sf:SBQQ__Renewal__c": {
                                                    "type": "string"
                                                },
                                                "sf:StageName": {
                                                    "type": "string"
                                                },
                                                "sf:Subscription_Term__c": {
                                                    "type": "string"
                                                },
                                                "sf:SystemModstamp": {
                                                    "type": "string"
                                                },
                                                "sf:Total_Deal_mgmt_commit__c": {
                                                    "type": "string"
                                                },
                                                "sf:Total_contract_value__c": {
                                                    "type": "string"
                                                },
                                                "sf:Tri_Forecast__c": {
                                                    "type": "string"
                                                },
                                                "sf:Tri_Total_Deal_Amount__c": {
                                                    "type": "string"
                                                },
                                                "sf:Tri_Written_Cost_Benefit_Analysis__c": {
                                                    "type": "string"
                                                },
                                                "sf:Tri_Written_Sequence_of_Events__c": {
                                                    "type": "string"
                                                },
                                                "sf:Type": {
                                                    "type": "string"
                                                },
                                                "sf:Upside_Amount__c": {
                                                    "type": "string"
                                                },
                                                "sf:Upside_PSO_Amount__c": {
                                                    "type": "string"
                                                },
                                                "sf:Weightage__c": {
                                                    "type": "string"
                                                },
                                                "sf:Weighted_Normalized_ACV__c": {
                                                    "type": "string"
                                                },
                                                "sf:Weighted_Total_Deal_Amount__c": {
                                                    "type": "string"
                                                },
                                                "sf:Weigthed_Annual_contract_value__c": {
                                                    "type": "string"
                                                },
                                                "sf:YTD_Current_and_Previous_FY__c": {
                                                    "type": "string"
                                                },
                                                "sf:isclosed__c": {
                                                    "type": "string"
                                                },
                                                "sf:iseeit__Deal_Overview__c": {
                                                    "type": "string"
                                                },
                                                "sf:iseeit__Main_Qualifiers__c": {
                                                    "type": "string"
                                                },
                                                "sf:iseeit__Reference__c": {
                                                    "type": "string"
                                                },
                                                "sf:iseeit__Score__c": {
                                                    "type": "string"
                                                },
                                                "sf:mkto_si__MarketoAnalyzer__c": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "dataType": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-SAP-AccountWorkflow-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_SAP_AccountWorkflow_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_an_Account_is_received_at_service_bus": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 5
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('account'))}/subscriptions/@{encodeURIComponent('sap-account-subscriber')}/messages/head"
                            }
                        }
                    },
                    "actions": {
                        "SAP_Account_Workflow": {
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Save_Account_detail_to_SAP_transaction_DB": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "body": "@{json(base64ToString(triggerBody()?['ContentData']))}",
                                                "headers": {
                                                    "x-ms-documentdb-is-upsert": true
                                                },
                                                "path": "/dbs/@{encodeURIComponent('bc-sap-transaction-db')}/colls/@{encodeURIComponent('accounts')}/docs"
                                            }
                                        },
                                        "Check_the_source_of_the_message": {
                                            "actions": {
                                                "Acknowledge_the_request": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['servicebus']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "ContentData": "@{base64(concat('{\"id\": \"',body('Save_Account_detail_to_SAP_transaction_DB')?['id'],'\",\"debitorId\":\"',guid(),'\", \"dataType\" : \"Account\", \"actionType\": \"Event\", \"name\" : \"',body('Save_Account_detail_to_SAP_transaction_DB')?['body']['sf:Name'],'\"}'))}"
                                                        },
                                                        "path": "/@{encodeURIComponent(encodeURIComponent('acknowledgement'))}/messages"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Save_Account_detail_to_SAP_transaction_DB": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Trigger_Opportunities_Workflow": {
                                                        "runAfter": {},
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                                                                }
                                                            },
                                                            "method": "post",
                                                            "body": {
                                                                "ContentData": "@{base64(concat('{\"id\": \"',body('Save_Account_detail_to_SAP_transaction_DB')?['id'],'\",\"debitorId\":\"',guid(),'\", \"dataType\" : \"Account\", \"actionType\": \"Event\", \"name\" : \"\"}'))}"
                                                            },
                                                            "path": "/@{encodeURIComponent(encodeURIComponent('opportunity'))}/messages"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": "@equals(json(base64ToString(triggerBody()?['ContentData']))?['source'], 'SalesForce')",
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": "@equals(json(base64ToString(triggerBody()?['ContentData']))?['actionType'], 'Data')",
                                    "type": "If"
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        },
                        "For_Every_Action_in_Workflow": {
                            "foreach": "@result('SAP_Account_Workflow')",
                            "actions": {
                                "Create_Log_Entries": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": "@items('For_Every_Action_in_Workflow')",
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "SAP_Account_Workflow": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_2_name'))]",
                                "connectionName": "documentdb-2"
                            },
                            "servicebus": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_2_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-sap-OpportunityWorkflow-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_sap_OpportunityWorkflow_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_an_Opportunity_is_received_at_service_bus": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 5
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('opportunity'))}/subscriptions/@{encodeURIComponent('sap-opportunity-subscriber')}/messages/head"
                            }
                        }
                    },
                    "actions": {
                        "For_Every_Action_in_Workflow": {
                            "foreach": "@result('SAP_Opportunity_Workflow')",
                            "actions": {
                                "Create_Log_Entries": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "body": "@items('For_Every_Action_in_Workflow')",
                                            "correlationId": "@{body('Parse_Opportunity_as_JSON')?['correlationId']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "SAP_Opportunity_Workflow": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "ParseOpportunityFromBase64ToJSON": {
                            "runAfter": {},
                            "type": "Function",
                            "inputs": {
                                "body": "@triggerBody()?['ContentData']",
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_OpportunityParser_fa_name')), '/functions/ParseOpportunityFromBase64ToJSON')]"
                                }
                            }
                        },
                        "SAP_Opportunity_Workflow": {
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "For_each": {
                                            "foreach": "@body('Pulling_pending_Opportunities')?['Documents']",
                                            "actions": {
                                                "Compose_Opportunity_with_status_Updated": {
                                                    "runAfter": {
                                                        "Parse_pending_Opportunity_as_JSON": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": {
                                                        "actionType": "@{body('Parse_pending_Opportunity_as_JSON')?['actionType']}",
                                                        "body": "@body('Parse_pending_Opportunity_as_JSON')?['body']",
                                                        "correlationId": "@{body('Parse_pending_Opportunity_as_JSON')?['correlationId']}",
                                                        "dataType": "@{body('Parse_pending_Opportunity_as_JSON')?['dataType']}",
                                                        "id": "@{guid()}",
                                                        "objectId": "@{body('Parse_pending_Opportunity_as_JSON')?['id']}",
                                                        "source": "@{body('Parse_pending_Opportunity_as_JSON')?['source']}",
                                                        "status": "Updated"
                                                    }
                                                },
                                                "Parse_pending_Opportunity_as_JSON": {
                                                    "runAfter": {},
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@items('For_each')",
                                                        "schema": {
                                                            "properties": {
                                                                "actionType": {
                                                                    "type": "string"
                                                                },
                                                                "body": {
                                                                    "properties": {},
                                                                    "type": "object"
                                                                },
                                                                "correlationId": {
                                                                    "type": "string"
                                                                },
                                                                "dataType": {
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "type": "string"
                                                                },
                                                                "objecId": {
                                                                    "type": "string"
                                                                },
                                                                "source": {
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "Send_Opportunity_Completion_Acknowledgement": {
                                                    "runAfter": {
                                                        "Update_Opportunity_update_status": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "ContentData": "@{base64(concat('{\"id\":\"',guid(),'\",\"objectId\": \"',body('Parse_pending_Opportunity_as_JSON')?['id'],'\", \"correlationId\":\"',body('Parse_Opportunity_as_JSON')?['correlationId'],'\", \"dataType\": \"Opportunity\",\"source\":\"BConnect\", \"actionType\": \"Event\", \"body\": {}}'))}"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['servicebus']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/@{encodeURIComponent(encodeURIComponent('acknowledgement'))}/messages",
                                                        "queries": {
                                                            "systemProperties": "None"
                                                        }
                                                    }
                                                },
                                                "Update_Opportunity_update_status": {
                                                    "runAfter": {
                                                        "Compose_Opportunity_with_status_Updated": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": "@outputs('Compose_Opportunity_with_status_Updated')",
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sap-transaction-db')}/colls/@{encodeURIComponent('opportunities')}/docs"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Pulling_pending_Opportunities": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "Pulling_pending_Opportunities": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "query": "SELECT * FROM opportunities o where o[\"body\"][\"sf:AccountId\"] =\"@{body('Parse_Opportunity_as_JSON')?['id']}\" and o.status = \"PendingForAccountInfo\""
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/dbs/@{encodeURIComponent('bc-sap-transaction-db')}/colls/@{encodeURIComponent('opportunities')}/query"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_Opportunity_as_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Compose_Account_detail_request": {
                                                "runAfter": {
                                                    "Create_or_update_document": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Compose",
                                                "inputs": {
                                                    "actionType": "Event",
                                                    "body": {},
                                                    "correlationId": "@{body('Parse_Opportunity_as_JSON')?['correlationId']}",
                                                    "dataType": "Account",
                                                    "id": "@{guid()}",
                                                    "objectId": "@{body('Parse_Opportunity_as_JSON')?['body']?['sf:AccountId']}",
                                                    "source": "BConnect"
                                                }
                                            },
                                            "Create_or_update_document": {
                                                "runAfter": {
                                                    "Save_Opportunity_detail_to_SAP_Transaction_DB": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": {
                                                        "actionType": "@{body('Parse_Opportunity_as_JSON')?['actionType']}",
                                                        "body": "@body('Parse_Opportunity_as_JSON')?['body']",
                                                        "dataType": "@{body('Parse_Opportunity_as_JSON')?['dataType']}",
                                                        "id": "@{body('Parse_Opportunity_as_JSON')?['id']}",
                                                        "status": "PendingForAccountInfo"
                                                    },
                                                    "headers": {
                                                        "x-ms-documentdb-is-upsert": true
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['documentdb']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/dbs/@{encodeURIComponent('bc-sap-transaction-db')}/colls/@{encodeURIComponent('opportunities')}/docs"
                                                }
                                            },
                                            "Save_Opportunity_detail_to_SAP_Transaction_DB": {
                                                "runAfter": {},
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": "@body('Parse_Opportunity_as_JSON')",
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['documentdb']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/dbs/@{encodeURIComponent('bc-sap-transaction-db')}/colls/@{encodeURIComponent('opportunities')}/docs"
                                                }
                                            },
                                            "Send_message": {
                                                "runAfter": {
                                                    "Compose_Account_detail_request": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": {
                                                        "ContentData": "@{base64(outputs('Compose_Account_detail_request'))}"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['servicebus']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/@{encodeURIComponent(encodeURIComponent('account'))}/messages",
                                                    "queries": {
                                                        "systemProperties": "None"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": "@equals(body('Parse_Opportunity_as_JSON')?['actionType'], 'Event')",
                                    "type": "If"
                                },
                                "Parse_Opportunity_as_JSON": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@{json(base64ToString(triggerBody()?['ContentData']))}",
                                        "schema": {
                                            "properties": {
                                                "Status": {
                                                    "type": "string"
                                                },
                                                "actionType": {
                                                    "type": "string"
                                                },
                                                "body": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "sf:AccountId": {
                                                            "type": "string"
                                                        },
                                                        "sf:Age__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:CloseDate": {
                                                            "type": "string"
                                                        },
                                                        "sf:Close_Quarter_Year__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Closed_Amount__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Closed_PSO_Amount__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Commit_Amount__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Commit_PSO_Amount__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:CreatedById": {
                                                            "type": "string"
                                                        },
                                                        "sf:CreatedDate": {
                                                            "type": "string"
                                                        },
                                                        "sf:CurrencyIsoCode": {
                                                            "type": "string"
                                                        },
                                                        "sf:FiscalQuarter": {
                                                            "type": "string"
                                                        },
                                                        "sf:FiscalYear": {
                                                            "type": "string"
                                                        },
                                                        "sf:Fiscal_Quarter__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Fiscal_Week__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:ForecastCategory": {
                                                            "type": "string"
                                                        },
                                                        "sf:ForecastCategoryName": {
                                                            "type": "string"
                                                        },
                                                        "sf:Geo__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:HasOpenActivity": {
                                                            "type": "string"
                                                        },
                                                        "sf:HasOpportunityLineItem": {
                                                            "type": "string"
                                                        },
                                                        "sf:HasOverdueTask": {
                                                            "type": "string"
                                                        },
                                                        "sf:Has_Integrator__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Id": {
                                                            "type": "string"
                                                        },
                                                        "sf:IsClosed": {
                                                            "type": "string"
                                                        },
                                                        "sf:IsDeleted": {
                                                            "type": "string"
                                                        },
                                                        "sf:IsWon": {
                                                            "type": "string"
                                                        },
                                                        "sf:LastModifiedById": {
                                                            "type": "string"
                                                        },
                                                        "sf:LastModifiedDate": {
                                                            "type": "string"
                                                        },
                                                        "sf:LeadSource": {
                                                            "type": "string"
                                                        },
                                                        "sf:License_Type__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Name": {
                                                            "type": "string"
                                                        },
                                                        "sf:NextStep": {
                                                            "type": "string"
                                                        },
                                                        "sf:Normalized_ACVMgmtCommit__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Normalized_ACV__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Normalized_ACVinEuro__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Number_of_accepted_quotes__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Number_of_approved_quotes__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Opportunity_Age_Hours__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Opportunity_Created_Date_Time__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:OwnerId": {
                                                            "type": "string"
                                                        },
                                                        "sf:Partner_registered__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Pipeline_Amount__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Pricebook2Id": {
                                                            "type": "string"
                                                        },
                                                        "sf:QTD_Current_and_Previous_FY__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Quarter_Target_Global_LIC_FYM__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Quarter_Target_Global_PSO__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Quarter_Target_Global__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Quarter_Target_LIC_FYM_PSO__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Quarter_Target_LIC_FYM__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Quarter_Target_PSO__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:RecordTypeId": {
                                                            "type": "string"
                                                        },
                                                        "sf:Revenue_Type__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:SBQQ__Contracted__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:SBQQ__CreateContractedPrices__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:SBQQ__Ordered__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:SBQQ__Renewal__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:StageName": {
                                                            "type": "string"
                                                        },
                                                        "sf:Subscription_Term__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:SystemModstamp": {
                                                            "type": "string"
                                                        },
                                                        "sf:Total_Deal_mgmt_commit__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Total_contract_value__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Tri_Forecast__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Tri_Total_Deal_Amount__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Tri_Written_Cost_Benefit_Analysis__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Tri_Written_Sequence_of_Events__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Type": {
                                                            "type": "string"
                                                        },
                                                        "sf:Upside_Amount__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Upside_PSO_Amount__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Weightage__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Weighted_Normalized_ACV__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Weighted_Total_Deal_Amount__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:Weigthed_Annual_contract_value__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:YTD_Current_and_Previous_FY__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:isclosed__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:iseeit__Deal_Overview__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:iseeit__Main_Qualifiers__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:iseeit__Reference__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:iseeit__Score__c": {
                                                            "type": "string"
                                                        },
                                                        "sf:mkto_si__MarketoAnalyzer__c": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "correlationId": {
                                                    "type": "string"
                                                },
                                                "dataType": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string"
                                                },
                                                "objectId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_2_name'))]",
                                "connectionName": "documentdb-2",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb"
                            },
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_OpportunityParser_fa_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_2_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-sf-AccountSyncWorkflow-LA'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_sf_AccountSyncWorkflow_LA_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Switch": {
                            "runAfter": {},
                            "cases": {
                                "Case": {
                                    "case": "Get",
                                    "actions": {
                                        "Condition": {
                                            "actions": {
                                                "Create_or_update_document_3": {
                                                    "runAfter": {
                                                        "For_each": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Operation": "GetAll",
                                                            "body": "@body('Get_all_Accounts_info')?['value']",
                                                            "id": "@guid()"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_2']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('accountsTransaction')}/docs"
                                                    }
                                                },
                                                "For_each": {
                                                    "foreach": "@body('Get_all_Accounts_info')?['value']",
                                                    "actions": {
                                                        "Create_or_update_document": {
                                                            "runAfter": {},
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": {
                                                                    "body": "@items('For_each')",
                                                                    "id": "@items('For_each')?['Id']"
                                                                },
                                                                "headers": {
                                                                    "x-ms-documentdb-is-upsert": true
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['documentdb_2']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('accounts')}/docs"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Get_all_Accounts_info": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                },
                                                "Get_all_Accounts_info": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Account'))}/items"
                                                    }
                                                },
                                                "Response": {
                                                    "runAfter": {
                                                        "Create_or_update_document_3": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Response",
                                                    "inputs": {
                                                        "body": "@body('Get_all_Accounts_info')?['value']",
                                                        "statusCode": 200
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "else": {
                                                "actions": {
                                                    "Create_or_update_document_4": {
                                                        "runAfter": {
                                                            "Replace_a_document": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "body": {
                                                                "Operation": "Get",
                                                                "body": "@body('Get_record')",
                                                                "id": "@guid()"
                                                            },
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['documentdb_2']['connectionId']"
                                                                }
                                                            },
                                                            "method": "post",
                                                            "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('accountsTransaction')}/docs"
                                                        }
                                                    },
                                                    "Get_record": {
                                                        "runAfter": {},
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                                }
                                                            },
                                                            "method": "get",
                                                            "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Account'))}/items/@{encodeURIComponent(encodeURIComponent(json(triggerBody())['id']))}"
                                                        }
                                                    },
                                                    "Replace_a_document": {
                                                        "runAfter": {
                                                            "Get_record": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "body": {
                                                                "body": "@body('Get_record')",
                                                                "id": "@{body('Get_record')?['Id']}"
                                                            },
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['documentdb_2']['connectionId']"
                                                                }
                                                            },
                                                            "method": "put",
                                                            "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('accounts')}/docs/@{encodeURIComponent(body('Get_record')?['Id'])}"
                                                        }
                                                    },
                                                    "Response_2": {
                                                        "runAfter": {
                                                            "Create_or_update_document_4": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Response",
                                                        "inputs": {
                                                            "body": "@body('Get_record')",
                                                            "statusCode": 200
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@triggerBody()['id']",
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    }
                                },
                                "Case_2": {
                                    "case": "Create",
                                    "actions": {
                                        "Condition_2": {
                                            "actions": {
                                                "Create_or_update_document_2": {
                                                    "runAfter": {
                                                        "Create_record": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "body": "@body('Create_record')",
                                                            "id": "@body('Create_record')?['Id']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_2']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('accounts')}/docs"
                                                    }
                                                },
                                                "Create_or_update_document_5": {
                                                    "runAfter": {
                                                        "Create_or_update_document_2": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Operation": "Create",
                                                            "body": "@body('Create_record')",
                                                            "id": "@guid()"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_2']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('accountsTransaction')}/docs"
                                                    }
                                                },
                                                "Create_record": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "AccountNumber": "@triggerBody()['body']['AccountNumber']",
                                                            "AccountSource": "@triggerBody()['body']['AccountSource']",
                                                            "AnnualRevenue": "@triggerBody()['body']['AnnualRevenue']",
                                                            "BillingCity": "@triggerBody()['body']['BillingCity']",
                                                            "BillingCountry": "@triggerBody()['body']['BillingCountry']",
                                                            "BillingCountryCode": "@triggerBody()['body']['BillingCountryCode']",
                                                            "BillingLatitude": "@triggerBody()['body']['BillingLatitude']",
                                                            "BillingLongitude": "@triggerBody()['body']['BillingLongitude']",
                                                            "BillingPostalCode": "@triggerBody()['body']['BillingPostalCode']",
                                                            "BillingState": "@triggerBody()['body']['BillingState']",
                                                            "BillingStateCode": "@triggerBody()['body']['BillingStateCode']",
                                                            "BillingStreet": "@triggerBody()['body']['BillingStreet']",
                                                            "CS_Owner__c": "@triggerBody()['body']['CS_Owner__c']",
                                                            "CS_engaged__c": "@triggerBody()['body']['CS_engaged__c']",
                                                            "CurrencyIsoCode": "@triggerBody()['body']['CurrencyIsoCode']",
                                                            "Description": "@triggerBody()['body']['Description']",
                                                            "Email__c": "@triggerBody()['body']['Email__c']",
                                                            "Engagio_tracked__c": "@triggerBody()['body']['Engagio_tracked__c']",
                                                            "Fax": "@triggerBody()['body']['Fax']",
                                                            "Fortune_Ranking__c": "@triggerBody()['body']['Fortune_Ranking__c']",
                                                            "Industry": "@triggerBody()['body']['Industry']",
                                                            "Internal_group_name__c": "@triggerBody()['body']['Internal_group_name__c']",
                                                            "Jigsaw": "@triggerBody()['body']['Jigsaw']",
                                                            "Logo_Digital__c": "@triggerBody()['body']['Logo_Digital__c']",
                                                            "Logo_Print__c": "@triggerBody()['body']['Logo_Print__c']",
                                                            "Name": "@triggerBody()['body']['Name']",
                                                            "Name_Digital__c": "@triggerBody()['body']['Name_Digital__c']",
                                                            "Name_Print__c": "@triggerBody()['body']['Name_Print__c']",
                                                            "NumberOfEmployees": "@triggerBody()['body']['NumberOfEmployees']",
                                                            "OwnerId": "@triggerBody()['body']['OwnerId']",
                                                            "Ownership": "@triggerBody()['body']['Ownership']",
                                                            "ParentId": "@triggerBody()['body']['ParentId']",
                                                            "Partner_Type__c": "@triggerBody()['body']['Partner_Type__c']",
                                                            "Phone": "@triggerBody()['body']['Phone']",
                                                            "PowerOfOne__c": "@triggerBody()['body']['PowerOfOne__c']",
                                                            "Rating": "@triggerBody()['body']['Rating']",
                                                            "RecordTypeId": "@triggerBody()['body']['RecordTypeId']",
                                                            "SAM_Owner__c": "@triggerBody()['body']['SAM_Owner__c']",
                                                            "SBQQ__AssetQuantitiesCombined__c": "@triggerBody()['body']['SBQQ__AssetQuantitiesCombined__c']",
                                                            "SBQQ__CoTermedContractsCombined__c": "@triggerBody()['body']['SBQQ__CoTermedContractsCombined__c']",
                                                            "SBQQ__CoTerminationEvent__c": "@triggerBody()['body']['SBQQ__CoTerminationEvent__c']",
                                                            "SBQQ__ContractCoTermination__c": "@triggerBody()['body']['SBQQ__ContractCoTermination__c']",
                                                            "SBQQ__DefaultOpportunity__c": "@triggerBody()['body']['SBQQ__DefaultOpportunity__c']",
                                                            "SBQQ__IgnoreParentContractedPrices__c": "@triggerBody()['body']['SBQQ__IgnoreParentContractedPrices__c']",
                                                            "SBQQ__PreserveBundle__c": "@triggerBody()['body']['SBQQ__PreserveBundle__c']",
                                                            "SBQQ__PriceHoldEnd__c": "@triggerBody()['body']['SBQQ__PriceHoldEnd__c']",
                                                            "SBQQ__RenewalModel__c": "@triggerBody()['body']['SBQQ__RenewalModel__c']",
                                                            "SBQQ__RenewalPricingMethod__c": "@triggerBody()['body']['SBQQ__RenewalPricingMethod__c']",
                                                            "ShippingCity": "@triggerBody()['body']['ShippingCity']",
                                                            "ShippingCountry": "@triggerBody()['body']['ShippingCountry']",
                                                            "ShippingCountryCode": "@triggerBody()['body']['ShippingCountryCode']",
                                                            "ShippingLatitude": "@triggerBody()['body']['ShippingLatitude']",
                                                            "ShippingLongitude": "@triggerBody()['body']['ShippingLongitude']",
                                                            "ShippingPostalCode": "@triggerBody()['body']['ShippingPostalCode']",
                                                            "ShippingState": "@triggerBody()['body']['ShippingState']",
                                                            "ShippingStateCode": "@triggerBody()['body']['ShippingStateCode']",
                                                            "ShippingStreet": "@triggerBody()['body']['ShippingStreet']",
                                                            "Sic": "@triggerBody()['body']['Sic']",
                                                            "SicDesc": "@triggerBody()['body']['SicDesc']",
                                                            "Site": "@triggerBody()['body']['Site']",
                                                            "Special_remarks__c": "@triggerBody()['body']['Special_remarks__c']",
                                                            "Status__c": "@triggerBody()['body']['Status__c']",
                                                            "Targeted__c": "@triggerBody()['body']['Targeted__c']",
                                                            "Test__c": "@triggerBody()['body']['Test__c']",
                                                            "TickerSymbol": "@triggerBody()['body']['TickerSymbol']",
                                                            "Tier__c": "@triggerBody()['body']['Tier__c']",
                                                            "Type": "@triggerBody()['body']['Type']",
                                                            "Website": "@triggerBody()['body']['Website']",
                                                            "bz_partner_account_type_1__c": "@triggerBody()['body']['bz_partner_account_type_1__c']",
                                                            "bz_partner_account_type_2__c": "@triggerBody()['body']['bz_partner_account_type_2__c']",
                                                            "bz_partner_account_type_3__c": "@triggerBody()['body']['bz_partner_account_type_3__c']",
                                                            "bz_partner_comments_1__c": "@triggerBody()['body']['bz_partner_comments_1__c']",
                                                            "bz_partner_comments_2__c": "@triggerBody()['body']['bz_partner_comments_2__c']",
                                                            "bz_partner_comments_3__c": "@triggerBody()['body']['bz_partner_comments_3__c']",
                                                            "bz_partner_contact_Person_name_2__c": "@triggerBody()['body']['bz_partner_contact_Person_name_2__c']",
                                                            "bz_partner_contact_person_cellphone_1__c": "@triggerBody()['body']['bz_partner_contact_person_cellphone_1__c']",
                                                            "bz_partner_contact_person_cellphone_2__c": "@triggerBody()['body']['bz_partner_contact_person_cellphone_2__c']",
                                                            "bz_partner_contact_person_cellphone_3__c": "@triggerBody()['body']['bz_partner_contact_person_cellphone_3__c']",
                                                            "bz_partner_contact_person_email_1__c": "@triggerBody()['body']['bz_partner_contact_person_email_1__c']",
                                                            "bz_partner_contact_person_email_2__c": "@triggerBody()['body']['bz_partner_contact_person_email_2__c']",
                                                            "bz_partner_contact_person_email_3__c": "@triggerBody()['body']['bz_partner_contact_person_email_3__c']",
                                                            "bz_partner_contact_person_name_1__c": "@triggerBody()['body']['bz_partner_contact_person_name_1__c']",
                                                            "bz_partner_contact_person_name_3__c": "@triggerBody()['body']['bz_partner_contact_person_name_3__c']",
                                                            "bz_partner_geo_1__c": "@triggerBody()['body']['bz_partner_geo_1__c']",
                                                            "bz_partner_geo_2__c": "@triggerBody()['body']['bz_partner_geo_2__c']",
                                                            "bz_partner_geo_3__c": "@triggerBody()['body']['bz_partner_geo_3__c']",
                                                            "bz_partner_industry_1__c": "@triggerBody()['body']['bz_partner_industry_1__c']",
                                                            "bz_partner_industry_2__c": "@triggerBody()['body']['bz_partner_industry_2__c']",
                                                            "bz_partner_industry_3__c": "@triggerBody()['body']['bz_partner_industry_3__c']",
                                                            "bz_services_partner_1__c": "@triggerBody()['body']['bz_services_partner_1__c']",
                                                            "bz_services_partner_2__c": "@triggerBody()['body']['bz_services_partner_2__c']",
                                                            "bz_services_partner_3__c": "@triggerBody()['body']['bz_services_partner_3__c']",
                                                            "dr_duns__c": "@triggerBody()['body']['dr_duns__c']",
                                                            "dr_it_budget__c": "@triggerBody()['body']['dr_it_budget__c']",
                                                            "dr_it_employees__c": "@triggerBody()['body']['dr_it_employees__c']",
                                                            "dr_it_managers__c": "@triggerBody()['body']['dr_it_managers__c']",
                                                            "dr_rainking_uniqueid__c": "@triggerBody()['body']['dr_rainking_uniqueid__c']",
                                                            "dr_website_domain__c": "@triggerBody()['body']['dr_website_domain__c']",
                                                            "engagio__EngagedPeople__c": "@triggerBody()['body']['engagio__EngagedPeople__c']",
                                                            "engagio__EngagementMinutesLast3Months__c": "@triggerBody()['body']['engagio__EngagementMinutesLast3Months__c']",
                                                            "engagio__EngagementMinutesLast7Days__c": "@triggerBody()['body']['engagio__EngagementMinutesLast7Days__c']",
                                                            "engagio__FirstEngagementDate__c": "@triggerBody()['body']['engagio__FirstEngagementDate__c']",
                                                            "engagio__MQADate__c": "@triggerBody()['body']['engagio__MQADate__c']",
                                                            "engagio__Status__c": "@triggerBody()['body']['engagio__Status__c']",
                                                            "engagio__WebVisitsLast3Months__c": "@triggerBody()['body']['engagio__WebVisitsLast3Months__c']",
                                                            "geo__c": "@triggerBody()['body']['geo__c']",
                                                            "iSell__OSKeyID__c": "@triggerBody()['body']['iSell__OSKeyID__c']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Account'))}/items"
                                                    }
                                                },
                                                "Response_3": {
                                                    "runAfter": {
                                                        "Create_or_update_document_5": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Response",
                                                    "inputs": {
                                                        "body": "@body('Create_record')",
                                                        "statusCode": 200
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "else": {
                                                "actions": {
                                                    "Create_or_update_document_6": {
                                                        "runAfter": {
                                                            "Replace_a_document_2": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "body": {
                                                                "Operation": "Update",
                                                                "body": "@body('Update_record')",
                                                                "id": "@guid()"
                                                            },
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['documentdb_2']['connectionId']"
                                                                }
                                                            },
                                                            "method": "post",
                                                            "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('accountsTransaction')}/docs"
                                                        }
                                                    },
                                                    "Replace_a_document_2": {
                                                        "runAfter": {
                                                            "Update_record": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "body": {
                                                                "body": "@body('Update_record')",
                                                                "id": "@body('Update_record')?['Id']"
                                                            },
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['documentdb_2']['connectionId']"
                                                                }
                                                            },
                                                            "method": "put",
                                                            "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('accounts')}/docs/@{encodeURIComponent(body('Update_record')?['Id'])}"
                                                        }
                                                    },
                                                    "Response_4": {
                                                        "runAfter": {
                                                            "Create_or_update_document_6": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Response",
                                                        "inputs": {
                                                            "body": "@body('Update_record')",
                                                            "statusCode": 200
                                                        }
                                                    },
                                                    "Update_record": {
                                                        "runAfter": {},
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "body": {
                                                                "AccountNumber": "@triggerBody()['body']['AccountNumber']",
                                                                "AccountSource": "@triggerBody()['body']['AccountSource']",
                                                                "AnnualRevenue": "@triggerBody()['body']['AnnualRevenue']",
                                                                "BillingCity": "@triggerBody()['body']['BillingCity']",
                                                                "BillingCountry": "@triggerBody()['body']['BillingCountry']",
                                                                "BillingCountryCode": "@triggerBody()['body']['BillingCountryCode']",
                                                                "BillingLatitude": "@triggerBody()['body']['BillingLatitude']",
                                                                "BillingLongitude": "@triggerBody()['body']['BillingLongitude']",
                                                                "BillingPostalCode": "@triggerBody()['body']['BillingPostalCode']",
                                                                "BillingState": "@triggerBody()['body']['BillingState']",
                                                                "BillingStateCode": "@triggerBody()['body']['BillingStateCode']",
                                                                "BillingStreet": "@triggerBody()['body']['BillingStreet']",
                                                                "CS_Owner__c": "@triggerBody()['body']['CS_Owner__c']",
                                                                "CS_engaged__c": "@triggerBody()['body']['CS_engaged__c']",
                                                                "CurrencyIsoCode": "@triggerBody()['body']['CurrencyIsoCode']",
                                                                "Description": "@triggerBody()['body']['Description']",
                                                                "Email__c": "@triggerBody()['body']['Email__c']",
                                                                "Engagio_tracked__c": "@triggerBody()['body']['Engagio_tracked__c']",
                                                                "Fax": "@triggerBody()['body']['Fax']",
                                                                "Fortune_Ranking__c": "@triggerBody()['body']['Fortune_Ranking__c']",
                                                                "Industry": "@triggerBody()['body']['Industry']",
                                                                "Internal_group_name__c": "@triggerBody()['body']['Internal_group_name__c']",
                                                                "Jigsaw": "@triggerBody()['body']['Jigsaw']",
                                                                "Logo_Digital__c": "@triggerBody()['body']['Logo_Digital__c']",
                                                                "Logo_Print__c": "@triggerBody()['body']['Logo_Print__c']",
                                                                "Name": "@triggerBody()['body']['Name']",
                                                                "Name_Digital__c": "@triggerBody()['body']['Name_Digital__c']",
                                                                "Name_Print__c": "@triggerBody()['body']['Name_Print__c']",
                                                                "NumberOfEmployees": "@triggerBody()['body']['NumberOfEmployees']",
                                                                "OwnerId": "@triggerBody()['body']['OwnerId']",
                                                                "Ownership": "@triggerBody()['body']['Ownership']",
                                                                "ParentId": "@triggerBody()['body']['ParentId']",
                                                                "Partner_Type__c": "@triggerBody()['body']['Partner_Type__c']",
                                                                "Phone": "@triggerBody()['body']['Phone']",
                                                                "PowerOfOne__c": "@triggerBody()['body']['PowerOfOne__c']",
                                                                "Rating": "@triggerBody()['body']['Rating']",
                                                                "RecordTypeId": "@triggerBody()['body']['RecordTypeId']",
                                                                "SAM_Owner__c": "@triggerBody()['body']['SAM_Owner__c']",
                                                                "SBQQ__AssetQuantitiesCombined__c": "@triggerBody()['body']['SBQQ__AssetQuantitiesCombined__c']",
                                                                "SBQQ__CoTermedContractsCombined__c": "@triggerBody()['body']['SBQQ__CoTermedContractsCombined__c']",
                                                                "SBQQ__CoTerminationEvent__c": "@triggerBody()['body']['SBQQ__CoTerminationEvent__c']",
                                                                "SBQQ__ContractCoTermination__c": "@triggerBody()['body']['SBQQ__ContractCoTermination__c']",
                                                                "SBQQ__DefaultOpportunity__c": "@triggerBody()['body']['SBQQ__DefaultOpportunity__c']",
                                                                "SBQQ__IgnoreParentContractedPrices__c": "@triggerBody()['body']['SBQQ__IgnoreParentContractedPrices__c']",
                                                                "SBQQ__PreserveBundle__c": "@triggerBody()['body']['SBQQ__PreserveBundle__c']",
                                                                "SBQQ__PriceHoldEnd__c": "@triggerBody()['body']['SBQQ__PriceHoldEnd__c']",
                                                                "SBQQ__RenewalModel__c": "@triggerBody()['body']['SBQQ__RenewalModel__c']",
                                                                "SBQQ__RenewalPricingMethod__c": "@triggerBody()['body']['SBQQ__RenewalPricingMethod__c']",
                                                                "ShippingCity": "@triggerBody()['body']['ShippingCity']",
                                                                "ShippingCountry": "@triggerBody()['body']['ShippingCountry']",
                                                                "ShippingCountryCode": "@triggerBody()['body']['ShippingCountryCode']",
                                                                "ShippingLatitude": "@triggerBody()['body']['ShippingLatitude']",
                                                                "ShippingLongitude": "@triggerBody()['body']['ShippingLongitude']",
                                                                "ShippingPostalCode": "@triggerBody()['body']['ShippingPostalCode']",
                                                                "ShippingState": "@triggerBody()['body']['ShippingState']",
                                                                "ShippingStateCode": "@triggerBody()['body']['ShippingStateCode']",
                                                                "ShippingStreet": "@triggerBody()['body']['ShippingStreet']",
                                                                "Sic": "@triggerBody()['body']['Sic']",
                                                                "SicDesc": "@triggerBody()['body']['SicDesc']",
                                                                "Site": "@triggerBody()['body']['Site']",
                                                                "Special_remarks__c": "@triggerBody()['body']['Special_remarks__c']",
                                                                "Status__c": "@triggerBody()['body']['Status__c']",
                                                                "Targeted__c": "@triggerBody()['body']['Targeted__c']",
                                                                "Test__c": "@triggerBody()['body']['Test__c']",
                                                                "TickerSymbol": "@triggerBody()['body']['TickerSymbol']",
                                                                "Tier__c": "@triggerBody()['body']['Tier__c']",
                                                                "Type": "@triggerBody()['body']['Type']",
                                                                "Website": "@triggerBody()['body']['Website']",
                                                                "bz_partner_account_type_1__c": "@triggerBody()['body']['bz_partner_account_type_1__c']",
                                                                "bz_partner_account_type_2__c": "@triggerBody()['body']['bz_partner_account_type_2__c']",
                                                                "bz_partner_account_type_3__c": "@triggerBody()['body']['bz_partner_account_type_3__c']",
                                                                "bz_partner_comments_1__c": "@triggerBody()['body']['bz_partner_comments_1__c']",
                                                                "bz_partner_comments_2__c": "@triggerBody()['body']['bz_partner_comments_2__c']",
                                                                "bz_partner_comments_3__c": "@triggerBody()['body']['bz_partner_comments_3__c']",
                                                                "bz_partner_contact_Person_name_2__c": "@triggerBody()['body']['bz_partner_contact_Person_name_2__c']",
                                                                "bz_partner_contact_person_cellphone_1__c": "@triggerBody()['body']['bz_partner_contact_person_cellphone_1__c']",
                                                                "bz_partner_contact_person_cellphone_2__c": "@triggerBody()['body']['bz_partner_contact_person_cellphone_2__c']",
                                                                "bz_partner_contact_person_cellphone_3__c": "@triggerBody()['body']['bz_partner_contact_person_cellphone_3__c']",
                                                                "bz_partner_contact_person_email_1__c": "@triggerBody()['body']['bz_partner_contact_person_email_1__c']",
                                                                "bz_partner_contact_person_email_2__c": "@triggerBody()['body']['bz_partner_contact_person_email_2__c']",
                                                                "bz_partner_contact_person_email_3__c": "@triggerBody()['body']['bz_partner_contact_person_email_3__c']",
                                                                "bz_partner_contact_person_name_1__c": "@triggerBody()['body']['bz_partner_contact_person_name_1__c']",
                                                                "bz_partner_contact_person_name_3__c": "@triggerBody()['body']['bz_partner_contact_person_name_3__c']",
                                                                "bz_partner_geo_1__c": "@triggerBody()['body']['bz_partner_geo_1__c']",
                                                                "bz_partner_geo_2__c": "@triggerBody()['body']['bz_partner_geo_2__c']",
                                                                "bz_partner_geo_3__c": "@triggerBody()['body']['bz_partner_geo_3__c']",
                                                                "bz_partner_industry_1__c": "@triggerBody()['body']['bz_partner_industry_1__c']",
                                                                "bz_partner_industry_2__c": "@triggerBody()['body']['bz_partner_industry_2__c']",
                                                                "bz_partner_industry_3__c": "@triggerBody()['body']['bz_partner_industry_3__c']",
                                                                "bz_services_partner_1__c": "@triggerBody()['body']['bz_services_partner_1__c']",
                                                                "bz_services_partner_2__c": "@triggerBody()['body']['bz_services_partner_2__c']",
                                                                "bz_services_partner_3__c": "@triggerBody()['body']['bz_services_partner_3__c']",
                                                                "dr_duns__c": "@triggerBody()['body']['dr_duns__c']",
                                                                "dr_it_budget__c": "@triggerBody()['body']['dr_it_budget__c']",
                                                                "dr_it_employees__c": "@triggerBody()['body']['dr_it_employees__c']",
                                                                "dr_it_managers__c": "@triggerBody()['body']['dr_it_managers__c']",
                                                                "dr_rainking_uniqueid__c": "@triggerBody()['body']['dr_rainking_uniqueid__c']",
                                                                "dr_website_domain__c": "@triggerBody()['body']['dr_website_domain__c']",
                                                                "engagio__EngagedPeople__c": "@triggerBody()['body']['engagio__EngagedPeople__c']",
                                                                "engagio__EngagementMinutesLast3Months__c": "@triggerBody()['body']['engagio__EngagementMinutesLast3Months__c']",
                                                                "engagio__EngagementMinutesLast7Days__c": "@triggerBody()['body']['engagio__EngagementMinutesLast7Days__c']",
                                                                "engagio__FirstEngagementDate__c": "@triggerBody()['body']['engagio__FirstEngagementDate__c']",
                                                                "engagio__MQADate__c": "@triggerBody()['body']['engagio__MQADate__c']",
                                                                "engagio__Status__c": "@triggerBody()['body']['engagio__Status__c']",
                                                                "engagio__WebVisitsLast3Months__c": "@triggerBody()['body']['engagio__WebVisitsLast3Months__c']",
                                                                "geo__c": "@triggerBody()['body']['geo__c']",
                                                                "iSell__OSKeyID__c": "@triggerBody()['body']['iSell__OSKeyID__c']"
                                                            },
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                                }
                                                            },
                                                            "method": "patch",
                                                            "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Account'))}/items/@{encodeURIComponent(encodeURIComponent(triggerBody()['id']))}"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@triggerBody()['id']",
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {}
                            },
                            "expression": "@triggerBody()['actionType']",
                            "type": "Switch"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb_2": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                                "connectionName": "documentdb",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb"
                            },
                            "salesforce": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                                "connectionName": "salesforce-3",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-sf-AccountWorkflow-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_sf_AccountWorkflow_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "SF_Account_Workflow": {
                            "actions": {
                                "Map_Account_data_to_schema_definition": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@triggerBody()",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "?xml": {
                                                    "type": "object",
                                                    "properties": {
                                                        "@@version": {
                                                            "type": "string"
                                                        },
                                                        "@@encoding": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "soapenv:Envelope": {
                                                    "type": "object",
                                                    "properties": {
                                                        "@@xmlns:soapenv": {
                                                            "type": "string"
                                                        },
                                                        "@@xmlns:xsd": {
                                                            "type": "string"
                                                        },
                                                        "@@xmlns:xsi": {
                                                            "type": "string"
                                                        },
                                                        "soapenv:Body": {
                                                            "type": "object",
                                                            "properties": {
                                                                "notifications": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "@@xmlns": {
                                                                            "type": "string"
                                                                        },
                                                                        "OrganizationId": {
                                                                            "type": "string"
                                                                        },
                                                                        "ActionId": {
                                                                            "type": "string"
                                                                        },
                                                                        "SessionId": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "@@xsi:nil": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        },
                                                                        "EnterpriseUrl": {
                                                                            "type": "string"
                                                                        },
                                                                        "PartnerUrl": {
                                                                            "type": "string"
                                                                        },
                                                                        "Notification": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "Id": {
                                                                                    "type": "string"
                                                                                },
                                                                                "sObject": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "@@xsi:type": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "@@xmlns:sf": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Id": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:CS_engaged__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:CreatedById": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:CreatedDate": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:CurrencyIsoCode": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Engagio_tracked__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Industry": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:IsDeleted": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:LastModifiedById": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:LastModifiedDate": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:LastReferencedDate": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:LastViewedDate": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Logo_Digital__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Logo_Print__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Name_Digital__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Name_Print__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Number_of_Opportunity__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:OwnerId": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Parent_Account__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:PhotoUrl": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:PowerOfOne__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Rating": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:RecordTypeId": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:SBQQ__AssetQuantitiesCombined__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:SBQQ__CoTermedContractsCombined__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:SBQQ__IgnoreParentContractedPrices__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:SBQQ__PreserveBundle__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:SBQQ__RenewalModel__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:SystemModstamp": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Targeted__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Tier__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Type": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Website": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:geo__c": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "Response": {
                                    "runAfter": {
                                        "Create_or_update_document": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Response",
                                    "inputs": {
                                        "statusCode": 200
                                    }
                                },
                                "Create_or_update_document": {
                                    "runAfter": {
                                        "Compose": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['documentdb']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": "@outputs('Compose')",
                                        "headers": {
                                            "x-ms-documentdb-is-upsert": true
                                        },
                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('accounts')}/docs"
                                    }
                                },
                                "Compose": {
                                    "runAfter": {
                                        "Map_Account_data_to_schema_definition": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "id": "@{body('Map_Account_data_to_schema_definition')?['soapenv:Envelope']?['soapenv:Body']?['notifications']?['Notification']?['sObject']?['sf:Id']}",
                                        "dataType": "Account",
                                        "actionType": "Data",
                                        "source": "SalesForce",
                                        "body": "@body('Map_Account_data_to_schema_definition')?['soapenv:Envelope']?['soapenv:Body']?['notifications']?['Notification']?['sObject']"
                                    }
                                },
                                "Send_message": {
                                    "runAfter": {
                                        "Compose": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['servicebus']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "ContentData": "@{base64(outputs('Compose'))}"
                                        },
                                        "path": "/@{encodeURIComponent(encodeURIComponent('account'))}/messages",
                                        "queries": {
                                            "systemProperties": "None"
                                        }
                                    }
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        },
                        "For_Every_Action_in_Workflow": {
                            "foreach": "@result('SF_Account_Workflow')",
                            "actions": {
                                "Create_Log_Entries": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "body": "@{items('For_Every_Action_in_Workflow')}",
                                            "correlationId": "@guid()"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "SF_Account_Workflow": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                                "connectionName": "documentdb"
                            },
                            "servicebus": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_9_name'))]",
                                "connectionName": "servicebus-9"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_9_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-sf-AccountWorkflowListener-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_sf_AccountWorkflowListener_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Scope": {
                            "actions": {
                                "Compose_output": {
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "accountId": "@body('Parse_JSON')?['soapenv:Envelope']['soapenv:Body']['notifications']['Notification']['sObject']['sf:AccountId']",
                                        "actionType": "Data",
                                        "notification": "@body('Parse_JSON')?['soapenv:Envelope']['soapenv:Body']['notifications']['Notification']"
                                    }
                                },
                                "Parse_JSON": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@json(xml(triggerBody()))",
                                        "schema": {
                                            "properties": {
                                                "?xml": {
                                                    "properties": {
                                                        "@@encoding": {
                                                            "type": "string"
                                                        },
                                                        "@@version": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "soapenv:Envelope": {
                                                    "properties": {
                                                        "@@xmlns:soapenv": {
                                                            "type": "string"
                                                        },
                                                        "@@xmlns:xsd": {
                                                            "type": "string"
                                                        },
                                                        "@@xmlns:xsi": {
                                                            "type": "string"
                                                        },
                                                        "soapenv:Body": {
                                                            "properties": {
                                                                "notifications": {
                                                                    "properties": {
                                                                        "@@xmlns": {
                                                                            "type": "string"
                                                                        },
                                                                        "ActionId": {
                                                                            "type": "string"
                                                                        },
                                                                        "EnterpriseUrl": {
                                                                            "type": "string"
                                                                        },
                                                                        "Notification": {
                                                                            "properties": {
                                                                                "Id": {
                                                                                    "type": "string"
                                                                                },
                                                                                "sObject": {
                                                                                    "properties": {
                                                                                        "@@xmlns:sf": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "@@xsi:type": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:AccountId": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Age__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Atlassian_Jira_User__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Cloud_Testing__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Contact_Age_Hours__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Contact_Created_Date_Time__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Content_Subscription__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Converted_from_Lead__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:CreatedById": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:CreatedDate": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:CurrencyIsoCode": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:DoNotCall": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Email": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Event_Subscription__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:FirstName": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:HasOptedOutOfEmail": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:HasOptedOutOfFax": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Id": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:IsDeleted": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:IsEmailBounced": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:LastModifiedById": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:LastModifiedDate": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:LastName": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:LastReferencedDate": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:LastViewedDate": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:MailingCity": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:MailingCountry": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:MailingCountryCode": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:MailingPostalCode": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:MailingStreet": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Marketing_Stage__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Newsletter_Subscription__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:OwnerId": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:PhotoUrl": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:PowerOfOne__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Qualified_Status_Duration_Hours__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Qualified_Status_Start__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:RecordTypeId": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Reference_Contact__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Service_Now_User_ID__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Service_Now_User_active__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:SnowInboundMessages__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:SnowOutboundInSynch__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:SnowOutboundSynchDone__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:SystemModstamp": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Webinar_Subscription__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:X_Mas_Card__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:contact_status__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_demo_request__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_external_record_id__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_funnel__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_might_be_junk__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_might_be_spam__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_mql_utc__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_opted_in_to_email__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_quote_request__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_support_list__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_talk_to_sales_now__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_advancements_in_test_automation__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_advancements_in_test_automation_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_bi_data_warehouse__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_bi_data_warehouse_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_cont_testing_for_agiledevops_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_continuous_testing_for_agiledevops__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_exploratory_testing__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_exploratory_testing_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_load_performance_testing__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_load_performance_testing_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_sap_packaged_apps__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_sap_packaged_apps_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:mkto2__Original_Source_Info__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:mkto2__Original_Source_Type__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:mkto_si__Relative_Score__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:mkto_si__Sales_Insight__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:mkto_si__Urgency__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:mkto_si__View_in_Marketo__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_Allow_Marekting_Material__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_Privacy_Policy__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_blog__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_blog_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_events__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_events_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_new_research_webinars__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_new_research_webinars_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_special_announcements__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_special_announcements_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_support_updates__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_support_updates_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_technical_product_updates__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_technical_product_updates_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_training_updates__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_training_updates_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:support_user__c": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "OrganizationId": {
                                                                            "type": "string"
                                                                        },
                                                                        "PartnerUrl": {
                                                                            "type": "string"
                                                                        },
                                                                        "SessionId": {
                                                                            "properties": {
                                                                                "@@xsi:nil": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Response": {
                                    "runAfter": {
                                        "Compose_output": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "statusCode": 200
                                    }
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-sf-AcknowledgementWorkflow-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_sf_AcknowledgementWorkflow_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_topic_subscription_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 5
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('acknowledgement'))}/subscriptions/@{encodeURIComponent('sf-acknowledgement-subscriber')}/messages/head",
                                "queries": {
                                    "subscriptionType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "SF_Acknowledgement_Workflow": {
                            "actions": {
                                "Update_target_system": {
                                    "runAfter": {},
                                    "cases": {
                                        "Case": {
                                            "case": "Event",
                                            "actions": {
                                                "Check_Data_Type": {
                                                    "actions": {
                                                        "Create_Object_Strcuture": {
                                                            "runAfter": {
                                                                "Parse_Opportunity_as_JSON": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Compose",
                                                            "inputs": {
                                                                "id": "@{guid()}",
                                                                "correlationId": "@{body('Parse_Opportunity_as_JSON')?['correlationId']}",
                                                                "actionType": "@{body('Parse_Opportunity_as_JSON')?['actionType']}",
                                                                "body": "@body('Parse_Opportunity_as_JSON')?['body']",
                                                                "dataType": "@{body('Parse_Opportunity_as_JSON')?['dataType']}",
                                                                "objectId": "@{body('Parse_Opportunity_as_JSON')?['id']}",
                                                                "source": "@{body('Parse_Opportunity_as_JSON')?['source']}",
                                                                "status": "Complete"
                                                            }
                                                        },
                                                        "Create_or_update_document": {
                                                            "runAfter": {
                                                                "Create_Object_Strcuture": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "body": "@outputs('Create_Object_Strcuture')",
                                                                "headers": {
                                                                    "x-ms-documentdb-is-upsert": true
                                                                },
                                                                "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('opportunities')}/docs"
                                                            }
                                                        },
                                                        "Get_Opportunity_for_status_updation": {
                                                            "runAfter": {},
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "get",
                                                                "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('opportunities')}/docs/@{encodeURIComponent(json(base64ToString(triggerBody()?['ContentData']))?['id'])}"
                                                            }
                                                        },
                                                        "Parse_Opportunity_as_JSON": {
                                                            "runAfter": {
                                                                "Get_Opportunity_for_status_updation": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ParseJson",
                                                            "inputs": {
                                                                "content": "@body('Get_Opportunity_for_status_updation')",
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "string"
                                                                        },
                                                                        "correlationId": {
                                                                            "type": "string"
                                                                        },
                                                                        "objecId": {
                                                                            "type": "string"
                                                                        },
                                                                        "dataType": {
                                                                            "type": "string"
                                                                        },
                                                                        "source": {
                                                                            "type": "string"
                                                                        },
                                                                        "status": {
                                                                            "type": "string"
                                                                        },
                                                                        "actionType": {
                                                                            "type": "string"
                                                                        },
                                                                        "body": {
                                                                            "type": "object",
                                                                            "properties": {}
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "else": {
                                                        "actions": {
                                                            "Update_Account_info_with_debitor_ID": {
                                                                "runAfter": {},
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "patch",
                                                                    "body": {
                                                                        "Name": "@{json(base64ToString(triggerBody()?['ContentData']))?['Name']}",
                                                                        "Description": "@{json(base64ToString(triggerBody()?['ContentData']))?['debitorId']}"
                                                                    },
                                                                    "path": "/v2/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Account'))}/items/@{encodeURIComponent(encodeURIComponent(json(base64ToString(triggerBody()?['ContentData']))?['id']))}",
                                                                    "retryPolicy": {
                                                                        "type": "exponential",
                                                                        "count": 4,
                                                                        "interval": "PT7.5S",
                                                                        "minimumInterval": "PT5S",
                                                                        "maximumInterval": "PT45S"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": "@equals(json(base64ToString(triggerBody()?['ContentData']))?['dataType'], 'Opportunity')",
                                                    "type": "If"
                                                }
                                            }
                                        },
                                        "Case_2": {
                                            "case": "Data",
                                            "actions": {}
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@{json(base64ToString(triggerBody()?['ContentData']))?['actionType']}",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        },
                        "For_Every_Action_in_Workflow": {
                            "foreach": "@result('SF_Acknowledgement_Workflow')",
                            "actions": {
                                "Create_Log_Entries": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "id": "@{guid()}",
                                            "correlationId": "@{body('Parse_Opportunity_as_JSON')?['correlationId']}",
                                            "body": "@items('For_Every_Action_in_Workflow')"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "SF_Acknowledgement_Workflow": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                                "connectionName": "documentdb"
                            },
                            "salesforce": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                                "connectionName": "salesforce-3"
                            },
                            "servicebus": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-sf-ContactWorkflow-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_sf_ContactWorkflow_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_Contact_message_is_received_in_a_Contact_topic_": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 5
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('contact'))}/subscriptions/@{encodeURIComponent('sf-contact-subscriber')}/messages/head",
                                "queries": {
                                    "subscriptionType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "CRU_Contacts_in_Salesforce": {
                            "actions": {
                                "Pasres_as_Contact_JSON_as_per_schema": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": "@triggerBody()?['ContentData']",
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_OpportunityParser_fa_name')), '/functions/ParseOpportunityFromBase64ToJSON')]"
                                        }
                                    }
                                },
                                "Switch": {
                                    "runAfter": {
                                        "Pasres_as_Contact_JSON_as_per_schema": [
                                            "Succeeded"
                                        ]
                                    },
                                    "cases": {
                                        "Case": {
                                            "case": "Create",
                                            "actions": {
                                                "Create_Contact_document_at_Transaction_DB": {
                                                    "runAfter": {
                                                        "Create_a_Contact_record_at_Salesforce": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Status": "Complete",
                                                            "actionType": "Create",
                                                            "body": "@body('Create_a_Contact_record_at_Salesforce')",
                                                            "correlationid": "@{body('Pasres_as_Contact_JSON_as_per_schema')?['correlationId']}",
                                                            "dataType": "Contact",
                                                            "id": "@{body('Create_a_Contact_record_at_Salesforce')?['Id']}",
                                                            "objectId": "@{body('Create_a_Contact_record_at_Salesforce')?['Id']}",
                                                            "source": "ServiceNow"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('contacts')}/docs"
                                                    }
                                                },
                                                "Create_a_Contact_record_at_Salesforce": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Email": "@{body('Pasres_as_Contact_JSON_as_per_schema')?['body']? ['email'] }",
                                                            "FirstName": "@{body('Pasres_as_Contact_JSON_as_per_schema')?['body']? ['firstName'] }",
                                                            "LastName": "@{body('Pasres_as_Contact_JSON_as_per_schema')?['body']? ['lastName'] }"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['salesforce_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Contact'))}/items"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_2": {
                                            "case": "Update",
                                            "actions": {
                                                "Create_or_update_Contact_document_at_Transaction_DB": {
                                                    "runAfter": {
                                                        "Update_a_Contact_record_at_Salesforce": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Status": "Complete",
                                                            "actionType": "Create",
                                                            "body": "@body('Update_a_Contact_record_at_Salesforce')",
                                                            "correlationid": "@{body('Pasres_as_Contact_JSON_as_per_schema')?['correlationId']}",
                                                            "dataType": "Contact",
                                                            "id": "@{body('Update_a_Contact_record_at_Salesforce')?['Id']}",
                                                            "objectId": "@{body('Update_a_Contact_record_at_Salesforce')?['Id']}",
                                                            "source": "ServiceNow"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('contacts')}/docs"
                                                    }
                                                },
                                                "Update_a_Contact_record_at_Salesforce": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "FirstName": "@{body('Pasres_as_Contact_JSON_as_per_schema')?['body'] ? ['firstName']}",
                                                            "LastName": "@{body('Pasres_as_Contact_JSON_as_per_schema')?['body'] ? ['lastName']}"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['salesforce_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "patch",
                                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Contact'))}/items/@{encodeURIComponent(encodeURIComponent(body('Pasres_as_Contact_JSON_as_per_schema')?['body']?['recordId']))}"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_3": {
                                            "case": "Get",
                                            "actions": {
                                                "Create_or_update_Contact_document_to_Transaction_DB": {
                                                    "runAfter": {
                                                        "Get_Contact_record_by_Email": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Status": "Complete",
                                                            "actionType": "Create",
                                                            "body": "@body('Get_Contact_record_by_Email')['value'][0]",
                                                            "correlationid": "@{body('Pasres_as_Contact_JSON_as_per_schema')?['correlationId']}",
                                                            "dataType": "Contact",
                                                            "id": "@{body('Get_Contact_record_by_Email')?['value'][0]['Id']}",
                                                            "objectId": "@{body('Get_Contact_record_by_Email')?['value'][0]['Id']}",
                                                            "source": "ServiceNow"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('contacts')}/docs"
                                                    }
                                                },
                                                "Get_Contact_record_by_Email": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['salesforce_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Contact'))}/items",
                                                        "queries": {
                                                            "$filter": "Email eq '@{body('Pasres_as_Contact_JSON_as_per_schema')?['body'] ? ['email']}'",
                                                            "$top": 10
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@body('Pasres_as_Contact_JSON_as_per_schema')?['actionType']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        },
                        "For_each_action_in_Workflow": {
                            "foreach": "@result('CRU_Contacts_in_Salesforce')",
                            "actions": {
                                "Create_Log_Entries": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "body": "@items('For_each_action_in_Workflow')",
                                            "correlationId": "@{body('Pasres_as_Contact_JSON_as_per_schema')?['correlationId']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "CRU_Contacts_in_Salesforce": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                                "connectionName": "documentdb",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb"
                            },
                            "salesforce_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                                "connectionName": "salesforce-3",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce"
                            },
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_OpportunityParser_fa_name'))]",
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-sf-ContactWorkflowListner-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_sf_ContactWorkflowListner_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Scope": {
                            "actions": {
                                "Compose": {
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "accountId": "@body('Parse_JSON')?['soapenv:Envelope']['soapenv:Body']['notifications']['Notification']['sObject']['sf:AccountId']",
                                        "rowId": "@body('Parse_JSON')?['soapenv:Envelope']['soapenv:Body']['notifications']['Notification']['sObject']['sf:Id']"
                                    }
                                },
                                "Get_row": {
                                    "runAfter": {
                                        "Compose": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql_1']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('SalesForce_Contact'))}/items/@{encodeURIComponent(encodeURIComponent(body('Parse_JSON')?['soapenv:Envelope']['soapenv:Body']['notifications']['Notification']['sObject']['sf:Id']))}"
                                    }
                                },
                                "Parse_JSON": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@json(xml(triggerBody()))",
                                        "schema": {
                                            "properties": {
                                                "?xml": {
                                                    "properties": {
                                                        "@@encoding": {
                                                            "type": "string"
                                                        },
                                                        "@@version": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "soapenv:Envelope": {
                                                    "properties": {
                                                        "@@xmlns:soapenv": {
                                                            "type": "string"
                                                        },
                                                        "@@xmlns:xsd": {
                                                            "type": "string"
                                                        },
                                                        "@@xmlns:xsi": {
                                                            "type": "string"
                                                        },
                                                        "soapenv:Body": {
                                                            "properties": {
                                                                "notifications": {
                                                                    "properties": {
                                                                        "@@xmlns": {
                                                                            "type": "string"
                                                                        },
                                                                        "ActionId": {
                                                                            "type": "string"
                                                                        },
                                                                        "EnterpriseUrl": {
                                                                            "type": "string"
                                                                        },
                                                                        "Notification": {
                                                                            "properties": {
                                                                                "Id": {
                                                                                    "type": "string"
                                                                                },
                                                                                "sObject": {
                                                                                    "properties": {
                                                                                        "@@xmlns:sf": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "@@xsi:type": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:AccountId": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Age__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Atlassian_Jira_User__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Cloud_Testing__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Contact_Age_Hours__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Contact_Created_Date_Time__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Content_Subscription__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Converted_from_Lead__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:CreatedById": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:CreatedDate": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:CurrencyIsoCode": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:DoNotCall": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Email": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Event_Subscription__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:FirstName": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:HasOptedOutOfEmail": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:HasOptedOutOfFax": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Id": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:IsDeleted": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:IsEmailBounced": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:LastModifiedById": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:LastModifiedDate": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:LastName": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:LastReferencedDate": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:LastViewedDate": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:MailingCity": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:MailingCountry": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:MailingCountryCode": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:MailingPostalCode": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:MailingStreet": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Marketing_Stage__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Newsletter_Subscription__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:OwnerId": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:PhotoUrl": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:PowerOfOne__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Qualified_Status_Duration_Hours__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Qualified_Status_Start__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:RecordTypeId": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Reference_Contact__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Service_Now_User_ID__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Service_Now_User_active__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:SnowInboundMessages__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:SnowOutboundInSynch__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:SnowOutboundSynchDone__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:SystemModstamp": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:Webinar_Subscription__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:X_Mas_Card__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:contact_status__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_demo_request__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_external_record_id__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_funnel__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_might_be_junk__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_might_be_spam__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_mql_utc__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_opted_in_to_email__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_quote_request__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_support_list__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:dr_talk_to_sales_now__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_advancements_in_test_automation__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_advancements_in_test_automation_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_bi_data_warehouse__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_bi_data_warehouse_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_cont_testing_for_agiledevops_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_continuous_testing_for_agiledevops__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_exploratory_testing__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_exploratory_testing_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_load_performance_testing__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_load_performance_testing_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_sap_packaged_apps__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:int_sap_packaged_apps_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:mkto2__Original_Source_Info__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:mkto2__Original_Source_Type__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:mkto_si__Relative_Score__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:mkto_si__Sales_Insight__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:mkto_si__Urgency__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:mkto_si__View_in_Marketo__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_Allow_Marekting_Material__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_Privacy_Policy__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_blog__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_blog_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_events__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_events_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_new_research_webinars__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_new_research_webinars_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_special_announcements__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_special_announcements_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_support_updates__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_support_updates_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_technical_product_updates__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_technical_product_updates_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_training_updates__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:sc_training_updates_date__c": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sf:support_user__c": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "OrganizationId": {
                                                                            "type": "string"
                                                                        },
                                                                        "PartnerUrl": {
                                                                            "type": "string"
                                                                        },
                                                                        "SessionId": {
                                                                            "properties": {
                                                                                "@@xsi:nil": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "sql_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_2_name'))]",
                                "connectionName": "sql-2",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_2_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-sf-GetDetails-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_sf_GetDetails_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_an_Salesforce_object_detail_request_is_received": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 5
                            },
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('account'))}/subscriptions/@{encodeURIComponent('sf-account-subscriber')}/messages/batch/head"
                            }
                        }
                    },
                    "actions": {
                        "SF_GetDetails_Workflow": {
                            "actions": {
                                "Parse_object_as_JSON": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@{json(base64ToString(triggerBody()?['ContentData']))}",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "actionType": {
                                                    "type": "string"
                                                },
                                                "body": {
                                                    "type": "object",
                                                    "properties": {}
                                                },
                                                "dataType": {
                                                    "type": "string"
                                                },
                                                "source": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "Switch": {
                                    "runAfter": {
                                        "Parse_object_as_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "cases": {
                                        "Case": {
                                            "case": "Account",
                                            "actions": {
                                                "Condition": {
                                                    "actions": {
                                                        "Get_Salesforce_Account_detail": {
                                                            "runAfter": {},
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['salesforce_1']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "get",
                                                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Account'))}/items/@{encodeURIComponent(encodeURIComponent(body('Parse_object_as_JSON')?['id']))}"
                                                            }
                                                        },
                                                        "Compose_required_Account_fields": {
                                                            "runAfter": {
                                                                "Get_Salesforce_Account_detail": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Compose",
                                                            "inputs": {
                                                                "id": "@{body('Get_Salesforce_Account_detail')?['Id']}",
                                                                "Body": "@body('Get_Salesforce_Account_detail')",
                                                                "actionType": "Data",
                                                                "dataType": "Account",
                                                                "source": "BConnect"
                                                            }
                                                        },
                                                        "Save_Account_to_Salesforce_Transaction_DB": {
                                                            "runAfter": {
                                                                "Compose_required_Account_fields": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "body": "@outputs('Compose_required_Account_fields')",
                                                                "headers": {
                                                                    "x-ms-documentdb-is-upsert": true
                                                                },
                                                                "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('accounts')}/docs"
                                                            }
                                                        },
                                                        "Send_message": {
                                                            "runAfter": {
                                                                "Save_Account_to_Salesforce_Transaction_DB": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "body": {
                                                                    "ContentData": "@{base64(outputs('Compose_required_Account_fields'))}"
                                                                },
                                                                "path": "/@{encodeURIComponent(encodeURIComponent('account'))}/messages"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "expression": "@equals(body('Parse_object_as_JSON')?['actionType'], 'Event')",
                                                    "type": "If"
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@body('Parse_object_as_JSON')?['dataType']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        },
                        "For_Every_Action_in_Workflow": {
                            "foreach": "@result('SF_GetDetails_Workflow')",
                            "actions": {
                                "Create_Log_Entries": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": "@items('For_Every_Action_in_Workflow')",
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "SF_GetDetails_Workflow": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "salesforce_1": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                                "connectionName": "salesforce-3"
                            },
                            "documentdb": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                                "connectionName": "documentdb"
                            },
                            "servicebus": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-sf-OpportunityWorkflow-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_sf_OpportunityWorkflow_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "SF_Opportunity_Workflow": {
                            "actions": {
                                "Map_Opportunity_data_to_schema_definition": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@triggerBody()",
                                        "schema": {
                                            "properties": {
                                                "Notification": {
                                                    "properties": {
                                                        "Id": {
                                                            "type": "string"
                                                        },
                                                        "sObject": {
                                                            "properties": {
                                                                "@@xmlns:sf": {
                                                                    "type": "string"
                                                                },
                                                                "@@xsi:type": {
                                                                    "type": "string"
                                                                },
                                                                "sf:AccountId": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Age__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:CloseDate": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Close_Quarter_Year__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Closed_Amount__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Closed_PSO_Amount__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Commit_Amount__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Commit_PSO_Amount__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:CreatedById": {
                                                                    "type": "string"
                                                                },
                                                                "sf:CreatedDate": {
                                                                    "type": "string"
                                                                },
                                                                "sf:CurrencyIsoCode": {
                                                                    "type": "string"
                                                                },
                                                                "sf:FiscalQuarter": {
                                                                    "type": "string"
                                                                },
                                                                "sf:FiscalYear": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Fiscal_Quarter__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Fiscal_Week__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:ForecastCategory": {
                                                                    "type": "string"
                                                                },
                                                                "sf:ForecastCategoryName": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Geo__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:HasOpenActivity": {
                                                                    "type": "string"
                                                                },
                                                                "sf:HasOpportunityLineItem": {
                                                                    "type": "string"
                                                                },
                                                                "sf:HasOverdueTask": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Has_Integrator__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Id": {
                                                                    "type": "string"
                                                                },
                                                                "sf:IsClosed": {
                                                                    "type": "string"
                                                                },
                                                                "sf:IsDeleted": {
                                                                    "type": "string"
                                                                },
                                                                "sf:IsWon": {
                                                                    "type": "string"
                                                                },
                                                                "sf:LastModifiedById": {
                                                                    "type": "string"
                                                                },
                                                                "sf:LastModifiedDate": {
                                                                    "type": "string"
                                                                },
                                                                "sf:LastReferencedDate": {
                                                                    "type": "string"
                                                                },
                                                                "sf:LastViewedDate": {
                                                                    "type": "string"
                                                                },
                                                                "sf:LeadSource": {
                                                                    "type": "string"
                                                                },
                                                                "sf:License_Type__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Name": {
                                                                    "type": "string"
                                                                },
                                                                "sf:NextStep": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Normalized_ACVMgmtCommit__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Normalized_ACV__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Normalized_ACVinEuro__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Number_of_accepted_quotes__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Number_of_approved_quotes__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Opportunity_Age_Hours__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Opportunity_Created_Date_Time__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:OwnerId": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Partner_registered__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Pipeline_Amount__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Pricebook2Id": {
                                                                    "type": "string"
                                                                },
                                                                "sf:QTD_Current_and_Previous_FY__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Quarter_Target_Global_LIC_FYM__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Quarter_Target_Global_PSO__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Quarter_Target_Global__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Quarter_Target_LIC_FYM_PSO__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Quarter_Target_LIC_FYM__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Quarter_Target_PSO__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:RecordTypeId": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Revenue_Type__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:SBQQ__Contracted__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:SBQQ__CreateContractedPrices__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:SBQQ__Ordered__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:SBQQ__Renewal__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:StageName": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Subscription_Term__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:SystemModstamp": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Total_Deal_mgmt_commit__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Total_contract_value__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Tri_Forecast__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Tri_Total_Deal_Amount__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Tri_Written_Cost_Benefit_Analysis__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Tri_Written_Sequence_of_Events__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Type": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Upside_Amount__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Upside_PSO_Amount__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Weightage__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Weighted_Normalized_ACV__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Weighted_Total_Deal_Amount__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:Weigthed_Annual_contract_value__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:YTD_Current_and_Previous_FY__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:isclosed__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:iseeit__Deal_Overview__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:iseeit__Main_Qualifiers__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:iseeit__Reference__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:iseeit__Score__c": {
                                                                    "type": "string"
                                                                },
                                                                "sf:mkto_si__MarketoAnalyzer__c": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Prepare_Opportunity_data_to_persist": {
                                    "runAfter": {
                                        "Map_Opportunity_data_to_schema_definition": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "id": "@{guid()}",
                                        "correlationId": "@{guid()}",
                                        "objectId": "@{body('Map_Opportunity_data_to_schema_definition')?['Notification']?['sObject']?['sf:Id']}",
                                        "actionType": "Data",
                                        "dataType": "Opportunity",
                                        "status": "InProgress",
                                        "source": "Salesforce",
                                        "body": "@body('Map_Opportunity_data_to_schema_definition')?['Notification']?['sObject']"
                                    }
                                },
                                "Save_Opportunity_in_TransactionDB": {
                                    "runAfter": {
                                        "Prepare_Opportunity_data_to_persist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['documentdb']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": "@outputs('Prepare_Opportunity_data_to_persist')",
                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('opportunities')}/docs"
                                    }
                                },
                                "Send_message_to_Opportunity_Service_Bus": {
                                    "runAfter": {
                                        "Prepare_Opportunity_data_to_persist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "ContentData": "@{base64(outputs('Prepare_Opportunity_data_to_persist'))}"
                                        },
                                        "path": "/@{encodeURIComponent(encodeURIComponent('opportunity'))}/messages",
                                        "queries": {
                                            "systemProperties": "None"
                                        }
                                    }
                                },
                                "Send_Service_Response": {
                                    "runAfter": {
                                        "Save_Opportunity_in_TransactionDB": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Response",
                                    "inputs": {
                                        "statusCode": 200
                                    }
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        },
                        "For_Every_Action_in_Workflow": {
                            "foreach": "@result('SF_Opportunity_Workflow')",
                            "actions": {
                                "Create_Log_Entries": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "correlationId": "@{outputs('Prepare_Opportunity_data_to_persist')?['correlationId']}",
                                            "body": "@items('For_Every_Action_in_Workflow')"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "SF_Opportunity_Workflow": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                                "connectionName": "documentdb"
                            },
                            "servicebus_1": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-sf-Router-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_sf_Router_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Acknowledge_to_Salesforce": {
                            "runAfter": {
                                "Route_to_correct_Workflow": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "inputs": {
                                "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns3:notificationsResponse xmlns:ns3=\"http://soap.sforce.com/2005/09/outbound\"><ns3:Ack>true</ns3:Ack></ns3:notificationsResponse></soapenv:Body></soapenv:Envelope>",
                                "headers": {
                                    "Content-Type": "application/xml"
                                },
                                "statusCode": 200
                            }
                        },
                        "For_Every_Action_in_Workflow": {
                            "foreach": "@result('Route_to_correct_Workflow')",
                            "actions": {
                                "Create_Log_Entries": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "body": "@items('For_Every_Action_in_Workflow')",
                                            "correlationId": "todo"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Acknowledge_to_Salesforce": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Route_to_correct_Workflow": {
                            "actions": {
                                "For_each": {
                                    "foreach": "@body('SalesforceMessageParser')",
                                    "actions": {
                                        "Switch": {
                                            "runAfter": {},
                                            "cases": {
                                                "Case": {
                                                    "case": "sf:Opportunity",
                                                    "actions": {
                                                        "bc-sf-OpportunityWorkflow-la": {
                                                            "runAfter": {},
                                                            "type": "Workflow",
                                                            "inputs": {
                                                                "body": "@items('For_each')",
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "host": {
                                                                    "triggerName": "manual",
                                                                    "workflow": {
                                                                        "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_bc_sf_OpportunityWorkflow_la_name'))]"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "Case_2": {
                                                    "case": "sf:Account",
                                                    "actions": {
                                                        "bc-sf-AccountWorkflow-la": {
                                                            "runAfter": {},
                                                            "type": "Workflow",
                                                            "inputs": {
                                                                "body": "@items('For_each')",
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "host": {
                                                                    "triggerName": "manual",
                                                                    "workflow": {
                                                                        "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_bc_sf_AccountWorkflow_la_name'))]"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "default": {
                                                "actions": {
                                                    "Create Log Entry about the status": {
                                                        "runAfter": {},
                                                        "type": "Function",
                                                        "inputs": {
                                                            "body": {
                                                                "body": "@items('For_each')",
                                                                "logType": "Info",
                                                                "message": "Skipped as the object type is not understood by system",
                                                                "objectId": "",
                                                                "source": "Salesforce"
                                                            },
                                                            "function": {
                                                                "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": "@{json(items('For_each'))?['Notification']?['sObject']?['@xsi:type']}",
                                            "type": "Switch"
                                        }
                                    },
                                    "runAfter": {
                                        "SalesforceMessageParser": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "SalesforceMessageParser": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": "@triggerBody()",
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_OpportunityParser_fa_name')), '/functions/SalesforceMessageParser')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_bc_sf_OpportunityWorkflow_la_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_bc_sf_AccountWorkflow_la_name'))]",
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_OpportunityParser_fa_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-slack-IncidentWorkflow-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_slack_IncidentWorkflow_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Flow_Scope": {
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Condition_2": {
                                            "actions": {
                                                "Send_Message_back_to_slack_the_request_is_correct": {
                                                    "runAfter": {},
                                                    "type": "Function",
                                                    "inputs": {
                                                        "body": "@body('ParseSlackIncomingMessage')",
                                                        "function": {
                                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bconnectprocessopportunities_name')), '/functions/PostResonposeToSlackWebHook')]"
                                                        },
                                                        "headers": "@outputs('ParseSlackIncomingMessage')['headers']",
                                                        "method": "POST"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Send_request_message_to_service_bus": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('ParseSlackIncomingMessage')?['response_url']",
                                                            "h"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Prepare_object_to_be_send_to_service_bus": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": {
                                                "actionType": "Update",
                                                "body": {
                                                    "comments": "@body('ParseSlackIncomingMessage')?['comments']",
                                                    "sys_id": "@body('ParseSlackIncomingMessage')?['sys_id']"
                                                },
                                                "correlationid": "@guid()",
                                                "dataType": "Incident",
                                                "id": "@guid()",
                                                "source": "ServicenowConnector",
                                                "status": "Complete"
                                            }
                                        },
                                        "Send_request_message_to_service_bus": {
                                            "runAfter": {
                                                "Prepare_object_to_be_send_to_service_bus": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "ContentData": "@{base64(outputs('Prepare_object_to_be_send_to_service_bus'))}",
                                                    "ContentType": "application/json"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/@{encodeURIComponent(encodeURIComponent('incident'))}/messages",
                                                "queries": {
                                                    "systemProperties": "None"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "ParseSlackIncomingMessage": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Condition_3": {
                                                "actions": {
                                                    "Send_Message_back_to_slack_that_command_is_incorrect": {
                                                        "runAfter": {},
                                                        "type": "Function",
                                                        "inputs": {
                                                            "body": "@body('ParseSlackIncomingMessage')",
                                                            "function": {
                                                                "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bconnectprocessopportunities_name')), '/functions/PostResonposeToSlackWebHook')]"
                                                            },
                                                            "headers": "@outputs('ParseSlackIncomingMessage')['headers']",
                                                            "method": "POST"
                                                        }
                                                    }
                                                },
                                                "runAfter": {},
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "contains": [
                                                                "@body('ParseSlackIncomingMessage')? ['response_url']",
                                                                "h"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "type": "If"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@outputs('ParseSlackIncomingMessage')?['statusCode']",
                                                    200
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "ParseSlackIncomingMessage": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": "@triggerBody()",
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bconnectprocessopportunities_name')), '/functions/ParseSlackIncomingMessage')]"
                                        },
                                        "headers": "@triggerOutputs()['headers']",
                                        "method": "POST"
                                    }
                                }
                            },
                            "runAfter": {
                                "Send_Acknowledge_To_User": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "For_each_actions_in_the_scope": {
                            "foreach": "@result('Flow_Scope')",
                            "actions": {
                                "LogAuditMessage": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "body": "@items('For_each_actions_in_the_scope')",
                                            "correlationId": "@{guid()}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Flow_Scope": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Send_Acknowledge_To_User": {
                            "runAfter": {},
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "acknowledged",
                                "headers": {
                                    "content-type": "application/json"
                                },
                                "statusCode": 202
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bconnectprocessopportunities_name'))]",
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-snow-IncidentConnector-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_snow_IncidentConnector_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_topic_subscription_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 30
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('incident'))}/subscriptions/@{encodeURIComponent('snow-incident-subscriber')}/messages/head",
                                "queries": {
                                    "subscriptionType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Switch": {
                            "runAfter": {},
                            "cases": {
                                "Case": {
                                    "case": "Create",
                                    "actions": {
                                        "Create_a_new_incident_in_SNOW": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['service-now_1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/api/now/v2/table/@{encodeURIComponent('incident')}",
                                                "queries": {
                                                    "sysparm_display_value": false,
                                                    "sysparm_exclude_reference_link": true
                                                }
                                            }
                                        },
                                        "Create_new_incident_in_incidents_collections": {
                                            "runAfter": {
                                                "Create_a_new_incident_in_SNOW": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "body": "@body('Create_a_new_incident_in_SNOW')?['result']",
                                                    "id": "@body('Create_a_new_incident_in_SNOW')?['result']?['sys_id']"
                                                },
                                                "headers": {
                                                    "x-ms-documentdb-is-upsert": false
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('incidents')}/docs"
                                            }
                                        },
                                        "Log_Create_transaction": {
                                            "runAfter": {
                                                "Create_new_incident_in_incidents_collections": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "actionType": "Create",
                                                    "body": "@body('Create_a_new_incident_in_SNOW')?['result']",
                                                    "correlationid": "@guid()",
                                                    "dataType": "Incident",
                                                    "id": "@guid()",
                                                    "source": "ServicenowConnector",
                                                    "status": "Complete"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('transactionsLogs')}/docs"
                                            }
                                        }
                                    }
                                },
                                "Case_2": {
                                    "case": "Update",
                                    "actions": {
                                        "For_each_2": {
                                            "foreach": "@body('Get_incident_to_update_from_SNOW')?['result']",
                                            "actions": {
                                                "Log_Update_transaction": {
                                                    "runAfter": {
                                                        "Update_the_incident_in_incidents_collection": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "actionType": "Update",
                                                            "body": "@body('Update_the_incident_in_SNOW')?['result']",
                                                            "correlationid": "@guid()",
                                                            "dataType": "Incident",
                                                            "id": "@guid()",
                                                            "source": "ServicenowConnector",
                                                            "status": "Complete"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('transactionsLogs')}/docs"
                                                    }
                                                },
                                                "Update_the_incident_in_SNOW": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "short_description": "@{json(base64ToString(triggerBody()?['ContentData']))?['body']?['comments']}"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['service-now_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "put",
                                                        "path": "/api/now/v2/table/@{encodeURIComponent('incident')}/@{encodeURIComponent(items('For_each_2')?['sys_id'])}",
                                                        "queries": {
                                                            "sysparm_display_value": false,
                                                            "sysparm_exclude_reference_link": true
                                                        }
                                                    }
                                                },
                                                "Update_the_incident_in_incidents_collection": {
                                                    "runAfter": {
                                                        "Update_the_incident_in_SNOW": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "body": "@body('Update_the_incident_in_SNOW')?['result']",
                                                            "id": "@body('Update_the_incident_in_SNOW')?['result']?['sys_id']"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('incidents')}/docs"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Get_incident_to_update_from_SNOW": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "Get_incident_to_update_from_SNOW": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['service-now_1']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/api/now/v2/table/@{encodeURIComponent('incident')}",
                                                "queries": {
                                                    "sysparm_display_value": false,
                                                    "sysparm_exclude_reference_link": true,
                                                    "sysparm_query": "number=@{json(base64ToString(triggerBody()?['ContentData']))?['body']?['sys_id']}"
                                                }
                                            }
                                        }
                                    }
                                },
                                "Case_3": {
                                    "case": "Get",
                                    "actions": {
                                        "Get_incident_from_SNOW": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['service-now_1']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/api/now/v2/table/@{encodeURIComponent('incident')}/@{encodeURIComponent(json(base64ToString(triggerBody()?['ContentData']))?['id'])}",
                                                "queries": {
                                                    "sysparm_display_value": false,
                                                    "sysparm_exclude_reference_link": true
                                                }
                                            }
                                        },
                                        "Log_Get_transaction": {
                                            "runAfter": {
                                                "Update_in_incidents_collection": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "actionType": "Get",
                                                    "body": "@body('Get_incident_from_SNOW')?['result']",
                                                    "correlationid": "@guid()",
                                                    "dataType": "Incident",
                                                    "id": "@guid()",
                                                    "source": "ServicenowConnector",
                                                    "status": "Complete"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('transactionsLogs')}/docs"
                                            }
                                        },
                                        "Update_in_incidents_collection": {
                                            "runAfter": {
                                                "Get_incident_from_SNOW": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "body": "@body('Get_incident_from_SNOW')?['result']",
                                                    "id": "@body('Get_incident_from_SNOW')?['result']?['sys_id']"
                                                },
                                                "headers": {
                                                    "x-ms-documentdb-is-upsert": true
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('incidents')}/docs"
                                            }
                                        }
                                    }
                                },
                                "Case_4": {
                                    "case": "GetAll",
                                    "actions": {
                                        "For_each": {
                                            "foreach": "@body('Get_all_incidents_from_SNOW')?['result']",
                                            "actions": {
                                                "Update_all_fetched_incidents_in_incidents_collection": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "body": "@items('For_each')",
                                                            "id": "@items('For_each')?['sys_id']"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('incidents')}/docs"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Get_all_incidents_from_SNOW": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "Get_all_incidents_from_SNOW": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['service-now_1']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/api/now/v2/table/@{encodeURIComponent('incident')}",
                                                "queries": {
                                                    "sysparm_display_value": false,
                                                    "sysparm_exclude_reference_link": true
                                                }
                                            }
                                        },
                                        "Log_GetAll_transaction": {
                                            "runAfter": {
                                                "For_each": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "actionType": "GetAll",
                                                    "body": "@body('Get_all_incidents_from_SNOW')?['result']",
                                                    "correlationid": "@guid()",
                                                    "dataType": "Incident",
                                                    "id": "@guid()",
                                                    "source": "ServicenowConnector",
                                                    "status": "Complete"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('transactionsLogs')}/docs"
                                            }
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {}
                            },
                            "expression": "@json(base64ToString(triggerBody()?['ContentData']))?['actionType']",
                            "type": "Switch"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_4_name'))]",
                                "connectionName": "documentdb-4",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb"
                            },
                            "service-now_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_service_now_name'))]",
                                "connectionName": "service-now",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/service-now"
                            },
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_9_name'))]",
                                "connectionName": "servicebus-9",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_4_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_service_now_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_9_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-snow-IncidentWorkflow-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_snow_IncidentWorkflow_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Create_BConnect_Message": {
                            "runAfter": {},
                            "type": "Compose",
                            "inputs": {
                                "actionType": "Event",
                                "body": "@triggerBody()",
                                "correlationId": "@{guid()}",
                                "dataType": "Incident",
                                "id": "@{guid()}",
                                "objectId": "@{triggerBody()?['sys_id']}",
                                "source": "ServiceNow",
                                "status": "InProgress"
                            }
                        },
                        "Create_or_update_incident_collection": {
                            "runAfter": {
                                "Create_BConnect_Message": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "id": "@{triggerBody()?['sys_id']}",
                                    "body": "@triggerBody()"
                                },
                                "headers": {
                                    "x-ms-documentdb-is-upsert": true
                                },
                                "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('incidents')}/docs"
                            }
                        },
                        "Log_transacation_in_log_collection": {
                            "runAfter": {
                                "Create_or_update_incident_collection": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "id": "@guid()",
                                    "correlationId": "@guid()",
                                    "actionType": "Notification",
                                    "dataType": "Incident",
                                    "body": "@triggerBody()"
                                },
                                "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('transactionsLogs')}/docs"
                            }
                        },
                        "Condition": {
                            "actions": {
                                "Insert_row": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "sys_id": "@{triggerBody()?['sys_id']}",
                                            "number": "@{triggerBody()?['number']}",
                                            "title": "@{triggerBody()?['title']}",
                                            "u_summary": "@{triggerBody()?['u_summary']}",
                                            "category": "@{triggerBody()?['category']}",
                                            "subcategory": "@{triggerBody()?['subcategory']}",
                                            "u_external_watch_list": "@{triggerBody()?['u_external_watch_list']}"
                                        },
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[SNOW_INCIDENTS]'))}/items"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_row": [
                                    "Failed"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Get_row')?['status']",
                                            404
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Get_row": {
                            "runAfter": {
                                "Create_BConnect_Message": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[SNOW_INCIDENTS]'))}/items/@{encodeURIComponent(encodeURIComponent(triggerBody()?['sys_id']))}"
                            }
                        },
                        "Update_row": {
                            "runAfter": {
                                "Get_row": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                                    }
                                },
                                "method": "patch",
                                "body": {
                                    "sys_id": "@{triggerBody()?['sys_id']}",
                                    "number": "@{triggerBody()?['number']}",
                                    "title": "@{triggerBody()?['title']}",
                                    "u_summary": "@{triggerBody()?['u_summary']}",
                                    "category": "@{triggerBody()?['category']}",
                                    "subcategory": "@{triggerBody()?['subcategory']}",
                                    "u_external_watch_list": "@{triggerBody()?['u_external_watch_list']}"
                                },
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[SNOW_INCIDENTS]'))}/items/@{encodeURIComponent(encodeURIComponent(triggerBody()?['sys_id']))}"
                            }
                        },
                        "Response_2": {
                            "runAfter": {
                                "Condition": [
                                    "Succeeded"
                                ],
                                "Update_row": [
                                    "Succeeded"
                                ],
                                "Log_transacation_in_log_collection": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb_1": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_4_name'))]",
                                "connectionName": "documentdb-4"
                            },
                            "sql_1": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/sql",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]",
                                "connectionName": "sql-1"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_4_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-snow-UserWorkflow-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_snow_UserWorkflow_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_topic_subscription_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 3
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('user'))}/subscriptions/@{encodeURIComponent('snow-user-subscriber')}/messages/head",
                                "queries": {
                                    "subscriptionType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "CRU_in_SNOW": {
                            "actions": {
                                "Switch": {
                                    "runAfter": {},
                                    "cases": {
                                        "Case": {
                                            "case": "Create",
                                            "actions": {
                                                "Create_User_in_collection": {
                                                    "runAfter": {
                                                        "Create_user_in_SNOW": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "body": "@body('Create_user_in_SNOW')",
                                                            "id": "@body('Create_user_in_SNOW')?['result']?['sys_id']"
                                                        },
                                                        "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('users')}/docs"
                                                    }
                                                },
                                                "Log_create_transaction": {
                                                    "runAfter": {
                                                        "Create_User_in_collection": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "Operation": "Create",
                                                            "id": "@guid()",
                                                            "body": "@body('Create_user_in_SNOW')"
                                                        },
                                                        "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('transactionsLogs')}/docs"
                                                    }
                                                },
                                                "Create_user_in_SNOW": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['service-now_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "calendar_integration": "@{json(base64ToString(triggerBody()?['ContentData']))?['calendar_integration']}",
                                                            "country": "@{json(base64ToString(triggerBody()?['ContentData']))?['country']}",
                                                            "last_login_time": "@{json(base64ToString(triggerBody()?['ContentData']))?['last_login_time']}",
                                                            "u_newsletter": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_newsletter']}",
                                                            "source": "@{json(base64ToString(triggerBody()?['ContentData']))?['source']}",
                                                            "sys_updated_on": "@{json(base64ToString(triggerBody()?['ContentData']))?['sys_updated_on']}",
                                                            "u_community_challenge": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_community_challenge']}",
                                                            "building": "@{json(base64ToString(triggerBody()?['ContentData']))?['building']}",
                                                            "web_service_access_only": "@{json(base64ToString(triggerBody()?['ContentData']))?['web_service_access_only']}",
                                                            "u_salutation": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_salutation']}",
                                                            "notification": "@{json(base64ToString(triggerBody()?['ContentData']))?['notification']}",
                                                            "sys_updated_by": "@{json(base64ToString(triggerBody()?['ContentData']))?['sys_updated_by']}",
                                                            "sys_created_on": "@{json(base64ToString(triggerBody()?['ContentData']))?['sys_created_on']}",
                                                            "sys_domain": "@{json(base64ToString(triggerBody()?['ContentData']))?['sys_domain']}",
                                                            "u_keyboard_layout": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_keyboard_layout']}",
                                                            "u_marketo_lead_id": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_marketo_lead_id']}",
                                                            "u_disabled": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_disabled']}",
                                                            "state": "@{json(base64ToString(triggerBody()?['ContentData']))?['state']}",
                                                            "vip": "@{json(base64ToString(triggerBody()?['ContentData']))?['vip']}",
                                                            "sys_created_by": "@{json(base64ToString(triggerBody()?['ContentData']))?['sys_created_by']}",
                                                            "zip": "@{json(base64ToString(triggerBody()?['ContentData']))?['zip']}",
                                                            "home_phone": "@{json(base64ToString(triggerBody()?['ContentData']))?['home_phone']}",
                                                            "u_company_name": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_company_name']}",
                                                            "u_country": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_country']}",
                                                            "time_format": "@{json(base64ToString(triggerBody()?['ContentData']))?['time_format']}",
                                                            "last_login": "@{json(base64ToString(triggerBody()?['ContentData']))?['last_login']}",
                                                            "default_perspective": "@{json(base64ToString(triggerBody()?['ContentData']))?['default_perspective']}",
                                                            "active": "@{json(base64ToString(triggerBody()?['ContentData']))?['active']}",
                                                            "u_country_reference": "@json(base64ToString(triggerBody()?['ContentData']))?['u_country_reference']",
                                                            "u_has_certificates": "@json(base64ToString(triggerBody()?['ContentData']))?['u_has_certificates']",
                                                            "u_last_failed_login": "@json(base64ToString(triggerBody()?['ContentData']))?['u_last_failed_login']",
                                                            "cost_center": "@json(base64ToString(triggerBody()?['ContentData']))?['cost_center']",
                                                            "phone": "@json(base64ToString(triggerBody()?['ContentData']))?['phone']",
                                                            "name": "@json(base64ToString(triggerBody()?['ContentData']))?['name']",
                                                            "employee_number": "@json(base64ToString(triggerBody()?['ContentData']))?['employee_number']",
                                                            "u_license_responsible": "@json(base64ToString(triggerBody()?['ContentData']))?['u_license_responsible']",
                                                            "u_current_profile": "@json(base64ToString(triggerBody()?['ContentData']))?['u_current_profile']",
                                                            "u_email2": "@json(base64ToString(triggerBody()?['ContentData']))?['u_email2']",
                                                            "u_certificates": "@json(base64ToString(triggerBody()?['ContentData']))?['u_certificates']",
                                                            "gender": "@json(base64ToString(triggerBody()?['ContentData']))?['gender']",
                                                            "city": "@json(base64ToString(triggerBody()?['ContentData']))?['city']",
                                                            "failed_attempts": "@json(base64ToString(triggerBody()?['ContentData']))?['failed_attempts']",
                                                            "u_user_state": "@json(base64ToString(triggerBody()?['ContentData']))?['u_user_state']",
                                                            "user_name": "@json(base64ToString(triggerBody()?['ContentData']))?['user_name']",
                                                            "title": "@json(base64ToString(triggerBody()?['ContentData']))?['title']",
                                                            "sys_class_name": "@json(base64ToString(triggerBody()?['ContentData']))?['sys_class_name']",
                                                            "u_cornerstone_sync": "@json(base64ToString(triggerBody()?['ContentData']))?['u_cornerstone_sync']",
                                                            "u_fax": "@json(base64ToString(triggerBody()?['ContentData']))?['u_fax']",
                                                            "u_user_password_check": "@json(base64ToString(triggerBody()?['ContentData']))?['u_user_password_check']",
                                                            "sys_id": "@json(base64ToString(triggerBody()?['ContentData']))?['sys_id']",
                                                            "u_ems_sync_time": "@json(base64ToString(triggerBody()?['ContentData']))?['u_ems_sync_time']",
                                                            "internal_integration_user": "@json(base64ToString(triggerBody()?['ContentData']))?['internal_integration_user']",
                                                            "ldap_server": "@json(base64ToString(triggerBody()?['ContentData']))?['ldap_server']",
                                                            "mobile_phone": "@json(base64ToString(triggerBody()?['ContentData']))?['mobile_phone']",
                                                            "street": "@json(base64ToString(triggerBody()?['ContentData']))?['street']",
                                                            "company": "@json(base64ToString(triggerBody()?['ContentData']))?['company']",
                                                            "u_moodle_userid": "@json(base64ToString(triggerBody()?['ContentData']))?['u_moodle_userid']",
                                                            "department": "@json(base64ToString(triggerBody()?['ContentData']))?['department']",
                                                            "first_name": "@json(base64ToString(triggerBody()?['ContentData']))?['first_name']",
                                                            "email": "@json(base64ToString(triggerBody()?['ContentData']))?['email']",
                                                            "introduction": "@json(base64ToString(triggerBody()?['ContentData']))?['introduction']",
                                                            "preferred_language": "@json(base64ToString(triggerBody()?['ContentData']))?['preferred_language']",
                                                            "u_industry": "@json(base64ToString(triggerBody()?['ContentData']))?['u_industry']",
                                                            "manager": "@json(base64ToString(triggerBody()?['ContentData']))?['manager']",
                                                            "u_moodle_id": "@json(base64ToString(triggerBody()?['ContentData']))?['u_moodle_id']",
                                                            "sys_mod_count": "@json(base64ToString(triggerBody()?['ContentData']))?['sys_mod_count']",
                                                            "last_name": "@json(base64ToString(triggerBody()?['ContentData']))?['last_name']",
                                                            "photo": "@json(base64ToString(triggerBody()?['ContentData']))?['photo']",
                                                            "u_comment": "@json(base64ToString(triggerBody()?['ContentData']))?['u_comment']",
                                                            "u_temporary_password": "@json(base64ToString(triggerBody()?['ContentData']))?['u_temporary_password']",
                                                            "u_last_cornerstone_login": "@json(base64ToString(triggerBody()?['ContentData']))?['u_last_cornerstone_login']",
                                                            "u_phone2": "@json(base64ToString(triggerBody()?['ContentData']))?['u_phone2']",
                                                            "middle_name": "@json(base64ToString(triggerBody()?['ContentData']))?['middle_name']",
                                                            "sys_tags": "@json(base64ToString(triggerBody()?['ContentData']))?['sys_tags']",
                                                            "time_zone": "@json(base64ToString(triggerBody()?['ContentData']))?['time_zone']",
                                                            "u_last_email": "@json(base64ToString(triggerBody()?['ContentData']))?['u_last_email']",
                                                            "u_avatar": "@json(base64ToString(triggerBody()?['ContentData']))?['u_avatar']",
                                                            "schedule": "@json(base64ToString(triggerBody()?['ContentData']))?['schedule']",
                                                            "u_job_role": "@json(base64ToString(triggerBody()?['ContentData']))?['u_job_role']",
                                                            "u_newsletter_format": "@json(base64ToString(triggerBody()?['ContentData']))?['u_newsletter_format']",
                                                            "date_format": "@json(base64ToString(triggerBody()?['ContentData']))?['date_format']",
                                                            "location": "@json(base64ToString(triggerBody()?['ContentData']))?['location']",
                                                            "u_ems_contact_id": "@json(base64ToString(triggerBody()?['ContentData']))?['u_ems_contact_id']",
                                                            "u_mooc_subscribed": "@json(base64ToString(triggerBody()?['ContentData']))?['u_mooc_subscribed']"
                                                        },
                                                        "path": "/api/now/v2/table/@{encodeURIComponent('sys_user')}",
                                                        "queries": {
                                                            "sysparm_display_value": false,
                                                            "sysparm_exclude_reference_link": true
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "Case_2": {
                                            "case": "Update",
                                            "actions": {
                                                "Update_User_in_SNOW": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['service-now_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "put",
                                                        "body": {
                                                            "calendar_integration": "@{json(base64ToString(triggerBody()?['ContentData']))?['calendar_integration']}",
                                                            "country": "@{json(base64ToString(triggerBody()?['ContentData']))?['country']}",
                                                            "last_login_time": "@{json(base64ToString(triggerBody()?['ContentData']))?['last_login_time']}",
                                                            "u_newsletter": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_newsletter']}",
                                                            "source": "@{json(base64ToString(triggerBody()?['ContentData']))?['source']}",
                                                            "sys_updated_on": "@{json(base64ToString(triggerBody()?['ContentData']))?['sys_updated_on']}",
                                                            "u_community_challenge": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_community_challenge']}",
                                                            "building": "@{json(base64ToString(triggerBody()?['ContentData']))?['building']}",
                                                            "web_service_access_only": "@{json(base64ToString(triggerBody()?['ContentData']))?['web_service_access_only']}",
                                                            "u_salutation": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_salutation']}",
                                                            "notification": "@{json(base64ToString(triggerBody()?['ContentData']))?['notification']}",
                                                            "sys_updated_by": "@{json(base64ToString(triggerBody()?['ContentData']))?['sys_updated_by']}",
                                                            "sys_created_on": "@{json(base64ToString(triggerBody()?['ContentData']))?['sys_created_on']}",
                                                            "sys_domain": "@{json(base64ToString(triggerBody()?['ContentData']))?['sys_domain']}",
                                                            "u_keyboard_layout": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_keyboard_layout']}",
                                                            "u_marketo_lead_id": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_marketo_lead_id']}",
                                                            "u_disabled": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_disabled']}",
                                                            "state": "@{json(base64ToString(triggerBody()?['ContentData']))?['state']}",
                                                            "vip": "@{json(base64ToString(triggerBody()?['ContentData']))?['vip']}",
                                                            "sys_created_by": "@{json(base64ToString(triggerBody()?['ContentData']))?['sys_created_by']}",
                                                            "zip": "@{json(base64ToString(triggerBody()?['ContentData']))?['zip']}",
                                                            "home_phone": "@{json(base64ToString(triggerBody()?['ContentData']))?['home_phone']}",
                                                            "u_company_name": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_company_name']}",
                                                            "u_country": "@{json(base64ToString(triggerBody()?['ContentData']))?['u_country']}",
                                                            "time_format": "@{json(base64ToString(triggerBody()?['ContentData']))?['time_format']}",
                                                            "last_login": "@{json(base64ToString(triggerBody()?['ContentData']))?['last_login']}",
                                                            "default_perspective": "@{json(base64ToString(triggerBody()?['ContentData']))?['default_perspective']}",
                                                            "active": "@{json(base64ToString(triggerBody()?['ContentData']))?['active']}",
                                                            "u_country_reference": "@json(base64ToString(triggerBody()?['ContentData']))?['u_country_reference']",
                                                            "u_has_certificates": "@json(base64ToString(triggerBody()?['ContentData']))?['u_has_certificates']",
                                                            "u_last_failed_login": "@json(base64ToString(triggerBody()?['ContentData']))?['u_last_failed_login']",
                                                            "cost_center": "@json(base64ToString(triggerBody()?['ContentData']))?['cost_center']",
                                                            "phone": "@json(base64ToString(triggerBody()?['ContentData']))?['phone']",
                                                            "name": "@json(base64ToString(triggerBody()?['ContentData']))?['name']",
                                                            "employee_number": "@json(base64ToString(triggerBody()?['ContentData']))?['employee_number']",
                                                            "u_license_responsible": "@json(base64ToString(triggerBody()?['ContentData']))?['u_license_responsible']",
                                                            "u_current_profile": "@json(base64ToString(triggerBody()?['ContentData']))?['u_current_profile']",
                                                            "u_email2": "@json(base64ToString(triggerBody()?['ContentData']))?['u_email2']",
                                                            "u_certificates": "@json(base64ToString(triggerBody()?['ContentData']))?['u_certificates']",
                                                            "gender": "@json(base64ToString(triggerBody()?['ContentData']))?['gender']",
                                                            "city": "@json(base64ToString(triggerBody()?['ContentData']))?['city']",
                                                            "failed_attempts": "@json(base64ToString(triggerBody()?['ContentData']))?['failed_attempts']",
                                                            "u_user_state": "@json(base64ToString(triggerBody()?['ContentData']))?['u_user_state']",
                                                            "user_name": "@json(base64ToString(triggerBody()?['ContentData']))?['user_name']",
                                                            "title": "@json(base64ToString(triggerBody()?['ContentData']))?['title']",
                                                            "sys_class_name": "@json(base64ToString(triggerBody()?['ContentData']))?['sys_class_name']",
                                                            "u_cornerstone_sync": "@json(base64ToString(triggerBody()?['ContentData']))?['u_cornerstone_sync']",
                                                            "u_fax": "@json(base64ToString(triggerBody()?['ContentData']))?['u_fax']",
                                                            "u_user_password_check": "@json(base64ToString(triggerBody()?['ContentData']))?['u_user_password_check']",
                                                            "sys_id": "@json(base64ToString(triggerBody()?['ContentData']))?['sys_id']",
                                                            "u_ems_sync_time": "@json(base64ToString(triggerBody()?['ContentData']))?['u_ems_sync_time']",
                                                            "internal_integration_user": "@json(base64ToString(triggerBody()?['ContentData']))?['internal_integration_user']",
                                                            "ldap_server": "@json(base64ToString(triggerBody()?['ContentData']))?['ldap_server']",
                                                            "mobile_phone": "@json(base64ToString(triggerBody()?['ContentData']))?['mobile_phone']",
                                                            "street": "@json(base64ToString(triggerBody()?['ContentData']))?['street']",
                                                            "company": "@json(base64ToString(triggerBody()?['ContentData']))?['company']",
                                                            "u_moodle_userid": "@json(base64ToString(triggerBody()?['ContentData']))?['u_moodle_userid']",
                                                            "department": "@json(base64ToString(triggerBody()?['ContentData']))?['department']",
                                                            "first_name": "@json(base64ToString(triggerBody()?['ContentData']))?['first_name']",
                                                            "email": "@json(base64ToString(triggerBody()?['ContentData']))?['email']",
                                                            "introduction": "@json(base64ToString(triggerBody()?['ContentData']))?['introduction']",
                                                            "preferred_language": "@json(base64ToString(triggerBody()?['ContentData']))?['preferred_language']",
                                                            "u_industry": "@json(base64ToString(triggerBody()?['ContentData']))?['u_industry']",
                                                            "manager": "@json(base64ToString(triggerBody()?['ContentData']))?['manager']",
                                                            "u_moodle_id": "@json(base64ToString(triggerBody()?['ContentData']))?['u_moodle_id']",
                                                            "sys_mod_count": "@json(base64ToString(triggerBody()?['ContentData']))?['sys_mod_count']",
                                                            "last_name": "@json(base64ToString(triggerBody()?['ContentData']))?['last_name']",
                                                            "photo": "@json(base64ToString(triggerBody()?['ContentData']))?['photo']",
                                                            "u_comment": "@json(base64ToString(triggerBody()?['ContentData']))?['u_comment']",
                                                            "u_temporary_password": "@json(base64ToString(triggerBody()?['ContentData']))?['u_temporary_password']",
                                                            "u_last_cornerstone_login": "@json(base64ToString(triggerBody()?['ContentData']))?['u_last_cornerstone_login']",
                                                            "u_phone2": "@json(base64ToString(triggerBody()?['ContentData']))?['u_phone2']",
                                                            "middle_name": "@json(base64ToString(triggerBody()?['ContentData']))?['middle_name']",
                                                            "sys_tags": "@json(base64ToString(triggerBody()?['ContentData']))?['sys_tags']",
                                                            "time_zone": "@json(base64ToString(triggerBody()?['ContentData']))?['time_zone']",
                                                            "u_last_email": "@json(base64ToString(triggerBody()?['ContentData']))?['u_last_email']",
                                                            "u_avatar": "@json(base64ToString(triggerBody()?['ContentData']))?['u_avatar']",
                                                            "schedule": "@json(base64ToString(triggerBody()?['ContentData']))?['schedule']",
                                                            "u_job_role": "@json(base64ToString(triggerBody()?['ContentData']))?['u_job_role']",
                                                            "u_newsletter_format": "@json(base64ToString(triggerBody()?['ContentData']))?['u_newsletter_format']",
                                                            "date_format": "@json(base64ToString(triggerBody()?['ContentData']))?['date_format']",
                                                            "location": "@json(base64ToString(triggerBody()?['ContentData']))?['location']",
                                                            "u_ems_contact_id": "@json(base64ToString(triggerBody()?['ContentData']))?['u_ems_contact_id']",
                                                            "u_mooc_subscribed": "@json(base64ToString(triggerBody()?['ContentData']))?['u_mooc_subscribed']"
                                                        },
                                                        "path": "/api/now/v2/table/@{encodeURIComponent('sys_user')}/@{encodeURIComponent(json(base64ToString(triggerBody()?['ContentData']))?['id'])}",
                                                        "queries": {
                                                            "sysparm_display_value": false,
                                                            "sysparm_exclude_reference_link": true
                                                        }
                                                    }
                                                },
                                                "Update_User_in_collection": {
                                                    "runAfter": {
                                                        "Update_User_in_SNOW": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "body": "@body('Update_User_in_SNOW')",
                                                            "id": "@body('Update_User_in_SNOW')?['result']?['sys_id']"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('users')}/docs"
                                                    }
                                                },
                                                "Log_update_transaction": {
                                                    "runAfter": {
                                                        "Update_User_in_collection": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "Operation": "Update",
                                                            "id": "@guid()",
                                                            "body": "@body('Update_User_in_SNOW')"
                                                        },
                                                        "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('transactionsLogs')}/docs"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_3": {
                                            "case": "Get",
                                            "actions": {
                                                "Get_User_from_SNOW": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['service-now_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/api/now/v2/table/@{encodeURIComponent('sys_user')}/@{encodeURIComponent(json(base64ToString(triggerBody()?['ContentData']))?['id'])}",
                                                        "queries": {
                                                            "sysparm_display_value": false,
                                                            "sysparm_exclude_reference_link": true
                                                        }
                                                    }
                                                },
                                                "Update_User": {
                                                    "runAfter": {
                                                        "Get_User_from_SNOW": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "body": "@body('Get_User_from_SNOW')",
                                                            "id": "@body('Get_User_from_SNOW')?['result']?['sys_id']"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('users')}/docs"
                                                    }
                                                },
                                                "Log_get_transaction": {
                                                    "runAfter": {
                                                        "Update_User": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "Operation": "Get",
                                                            "id": "@guid()",
                                                            "body": "@body('Get_User_from_SNOW')"
                                                        },
                                                        "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('transactionsLogs')}/docs"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_4": {
                                            "case": "GetAll",
                                            "actions": {
                                                "Get_Users": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['service-now_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/api/now/v2/table/@{encodeURIComponent('sys_user')}",
                                                        "queries": {
                                                            "sysparm_display_value": false,
                                                            "sysparm_exclude_reference_link": true
                                                        }
                                                    }
                                                },
                                                "For_every_user": {
                                                    "foreach": "@body('Get_Users')?['result']",
                                                    "actions": {
                                                        "Create_or_update_user_in_database": {
                                                            "runAfter": {},
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "body": {
                                                                    "body": "@items('For_every_user')",
                                                                    "id": "@items('For_every_user')?['sys_id']"
                                                                },
                                                                "headers": {
                                                                    "x-ms-documentdb-is-upsert": true
                                                                },
                                                                "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('Users')}/docs"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Get_Users": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                },
                                                "Log_getall_transaction": {
                                                    "runAfter": {
                                                        "For_every_user": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "body": "@body('Get_Users')?['result']",
                                                            "id": "@guid()",
                                                            "Operation": "GetAll"
                                                        },
                                                        "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('transactionsLogs')}/docs"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@json(base64ToString(triggerBody()?['ContentData']))?['actionType']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb_1": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_4_name'))]",
                                "connectionName": "documentdb-4"
                            },
                            "service-now_1": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/service-now",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_service_now_1_name'))]",
                                "connectionName": "service-now-1"
                            },
                            "servicebus": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_9_name'))]",
                                "connectionName": "servicebus-9"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_4_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_service_now_1_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_9_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/bc-userConsistencyCheckWorkflow-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_bc_userConsistencyCheckWorkflow_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Create_CSV_table": {
                            "runAfter": {
                                "SFSNOWUserComparer": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "format": "CSV",
                                "from": "@body('SFSNOWUserComparer')"
                            }
                        },
                        "For_Every_User": {
                            "foreach": "@body('Get_All_Users')?['result']",
                            "actions": {
                                "Update_Users": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "body": "@items('For_Every_User')",
                                            "id": "@items('For_Every_User')?['sys_id']"
                                        },
                                        "headers": {
                                            "x-ms-documentdb-is-upsert": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['documentdb_2']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/dbs/@{encodeURIComponent('bc-snow-transaction-db')}/colls/@{encodeURIComponent('users')}/docs"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_All_Users": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each": {
                            "foreach": "@body('Get_All_Leads')?['value']",
                            "actions": {
                                "Update_Leads": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "body": "@items('For_each')",
                                            "id": "@items('For_each')?['Id']"
                                        },
                                        "headers": {
                                            "x-ms-documentdb-is-upsert": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('leads')}/docs"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_All_Leads": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_every_contact": {
                            "foreach": "@body('Get_All_Contacts')?['value']",
                            "actions": {
                                "Update_Contacts": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "body": "@items('For_every_contact')",
                                            "id": "@items('For_every_contact')?['Id']"
                                        },
                                        "headers": {
                                            "x-ms-documentdb-is-upsert": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('contacts')}/docs"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_All_Contacts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_All_Contacts": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['salesforce']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Contact'))}/items"
                            }
                        },
                        "Get_All_Leads": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['salesforce']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Lead'))}/items"
                            }
                        },
                        "Get_All_Users": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['service-now']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/api/now/v2/table/@{encodeURIComponent('sys_user')}",
                                "queries": {
                                    "sysparm_display_value": false,
                                    "sysparm_exclude_reference_link": true
                                }
                            }
                        },
                        "SFSNOWUserComparer": {
                            "runAfter": {
                                "For_Every_User": [
                                    "Succeeded"
                                ],
                                "For_each": [
                                    "Succeeded"
                                ],
                                "For_every_contact": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bconnectprocessopportunities_name')), '/functions/SFSNOWUserComparer')]"
                                }
                            }
                        },
                        "Send_an_email": {
                            "runAfter": {
                                "Create_CSV_table": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Attachments": [
                                        {
                                            "ContentBytes": "@{base64(body('Create_CSV_table'))}",
                                            "Name": "Data.CSV"
                                        }
                                    ],
                                    "Body": "Hi,Please find the data attached.Regards,Admin",
                                    "Subject": "Data",
                                    "To": "Vineet.kumar@nagarro.com"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Mail"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                                "connectionName": "documentdb",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb"
                            },
                            "documentdb_2": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_4_name'))]",
                                "connectionName": "documentdb-4",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb"
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_office365_2_name'))]",
                                "connectionName": "office365-2",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/office365"
                            },
                            "salesforce": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                                "connectionName": "salesforce-3",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce"
                            },
                            "service-now": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_service_now_1_name'))]",
                                "connectionName": "service-now-1",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/service-now"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bconnectprocessopportunities_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_4_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_office365_2_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_service_now_1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/mdm-SFContactWorkflow-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_mdm_SFContactWorkflow_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Action_Payload": {
                            "runAfter": {},
                            "type": "Compose",
                            "inputs": {
                                "actionType": "migrateAll",
                                "body": {},
                                "correlationId": "15bc6874-d299-4643-b5f2-f97b4de4127c",
                                "dataType": "Contact",
                                "id": "sdfsdfsdf",
                                "objectId": "044W88724925951",
                                "source": "Salesforce",
                                "status": "InProgress"
                            }
                        },
                        "Initialize_paging_counter_variable": {
                            "runAfter": {
                                "Action_Payload": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "counter",
                                        "type": "Integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Until": {
                            "actions": {
                                "BulkContactPersister": {
                                    "runAfter": {
                                        "Get_all_Contact_records": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": "@body('Get_all_Contact_records')?['value']",
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_sf_Contact_BulkContactPersister_fa_name')), '/functions/BulkContactPersister')]"
                                        }
                                    }
                                },
                                "Get_all_Contact_records": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('contact'))}/items",
                                        "queries": {
                                            "$orderby": "Id",
                                            "$skip": "@mul(200, variables('counter'))",
                                            "$top": 200
                                        }
                                    }
                                },
                                "Increment_variable": {
                                    "runAfter": {
                                        "BulkContactPersister": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "IncrementVariable",
                                    "inputs": {
                                        "name": "counter",
                                        "value": 1
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_paging_counter_variable": [
                                    "Succeeded"
                                ]
                            },
                            "expression": "@equals(length(body('Get_all_Contact_records')?['value']), 0)",
                            "limit": {
                                "count": 60,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "salesforce": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                                "connectionName": "salesforce-3",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_sf_Contact_BulkContactPersister_fa_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/sf-LeadConnector-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_sf_LeadConnector_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_one_action_messages_arrive_in_a_Lead_topic": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('lead'))}/subscriptions/@{encodeURIComponent('connector-subscriber')}/messages/batch/head",
                                "queries": {
                                    "maxMessageCount": 20,
                                    "subscriptionType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "CRU_Leads_in_Salesforce": {
                            "actions": {
                                "Parse_action_payload_as_JSON": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@json(base64ToString(triggerBody()?['ContentData']))",
                                        "schema": {
                                            "properties": {
                                                "actionType": {
                                                    "type": "string"
                                                },
                                                "body": {
                                                    "properties": {},
                                                    "type": "object"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "objectId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Switch": {
                                    "runAfter": {
                                        "Parse_action_payload_as_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "cases": {
                                        "Case": {
                                            "case": "Get",
                                            "actions": {
                                                "Create_or_update_Lead_document_to_Transaction_DB": {
                                                    "runAfter": {
                                                        "Get_Lead_record_by_Email": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "actionType": "Get",
                                                            "body": "@body('Get_Lead_record_by_Email')['value'][0]",
                                                            "correlationid": "@{guid()}",
                                                            "dataType": "Lead",
                                                            "id": "@{body('Get_Lead_record_by_Email')?['value'][0]['Id']}",
                                                            "objectId": "@{body('Get_Lead_record_by_Email')?['value'][0]['Id']}",
                                                            "source": "SalesforceConnector",
                                                            "status": "Complete"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('leads')}/docs"
                                                    }
                                                },
                                                "Get_Lead_record_by_Email": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('lead'))}/items",
                                                        "queries": {
                                                            "$filter": "Email eq '@{body('Parse_action_payload_as_JSON')?['email']}'",
                                                            "$top": 10
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "Case_2": {
                                            "case": "Create",
                                            "actions": {
                                                "Create_Lead_document_at_Transaction_DB": {
                                                    "runAfter": {
                                                        "Create_a_Lead_record_at_Salesforce": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Status": "Complete",
                                                            "actionType": "Create",
                                                            "body": "@body('Create_a_Lead_record_at_Salesforce')",
                                                            "correlationid": "@{guid()}",
                                                            "dataType": "Lead",
                                                            "id": "@{body('Create_a_Lead_record_at_Salesforce')?['Id']}",
                                                            "objectId": "@{body('Create_a_Lead_record_at_Salesforce')?['Id']}",
                                                            "source": "Salesforce Connector"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('leads')}/docs"
                                                    }
                                                },
                                                "Create_a_Lead_record_at_Salesforce": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Company": "@body('Parse_action_payload_as_JSON')?['body']?['Company']",
                                                            "Email": "@body('Parse_action_payload_as_JSON')?['body']?['Email']",
                                                            "FirstName": "@body('Parse_action_payload_as_JSON')?['body']?['FirstName']",
                                                            "LastName": "@body('Parse_action_payload_as_JSON')?['body']?['LastName']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Lead'))}/items"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_3": {
                                            "case": "Update",
                                            "actions": {
                                                "Create_or_update_document": {
                                                    "runAfter": {
                                                        "Update_a_Lead_record_at_Salesforce": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Status": "Complete",
                                                            "actionType": "Update",
                                                            "body": "@body('Update_a_Lead_record_at_Salesforce')",
                                                            "correlationid": "@{guid()}",
                                                            "dataType": "Lead",
                                                            "id": "@{body('Update_a_Lead_record_at_Salesforce')?['Id']}",
                                                            "objectId": "@{body('Update_a_Lead_record_at_Salesforce')?['Id']}",
                                                            "source": "Salesforce Connector"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('leads')}/docs"
                                                    }
                                                },
                                                "Update_a_Lead_record_at_Salesforce": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Company": "@body('Parse_action_payload_as_JSON')?['body']?['Company']",
                                                            "Email": "@body('Parse_action_payload_as_JSON')?['body']?['Email']",
                                                            "FirstName": "@body('Parse_action_payload_as_JSON')?['body']?['FirstName']",
                                                            "LastName": "@body('Parse_action_payload_as_JSON')?['body']?['LastName']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                            }
                                                        },
                                                        "method": "patch",
                                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Lead'))}/items/@{encodeURIComponent(encodeURIComponent(body('Parse_action_payload_as_JSON')?['objectId']))}"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@body('Parse_action_payload_as_JSON')?['actionType']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        },
                        "For_each_action_in_Workflow": {
                            "foreach": "@result('CRU_Leads_in_Salesforce')",
                            "actions": {
                                "Create_Log_Entries": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "body": "@items('For_each_action_in_Workflow')",
                                            "correlationId": "@{guid()}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "CRU_Leads_in_Salesforce": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                                "connectionName": "documentdb",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb"
                            },
                            "salesforce": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                                "connectionName": "salesforce-3",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce"
                            },
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/sf-OpportunityConnector-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_sf_OpportunityConnector_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_one_action_messages_arrive_in_a_Opportunity_topic": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 4
                            },
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('opportunity'))}/subscriptions/@{encodeURIComponent('connector-subscriber')}/messages/batch/head",
                                "queries": {
                                    "maxMessageCount": 20,
                                    "subscriptionType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "CRU_Opportunities_in_Salesforce": {
                            "actions": {
                                "Parse_action_payload_as_JSON": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@json(base64ToString(triggerBody()?['ContentData']))",
                                        "schema": {
                                            "properties": {
                                                "actionType": {
                                                    "type": "string"
                                                },
                                                "body": {
                                                    "properties": {},
                                                    "type": "object"
                                                },
                                                "correlationId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Switch": {
                                    "runAfter": {
                                        "Parse_action_payload_as_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "cases": {
                                        "Case": {
                                            "case": "Get",
                                            "actions": {
                                                "Get_Opportunity_record": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Opportunity'))}/items",
                                                        "queries": {
                                                            "$filter": "Id eq '@{body('Parse_action_payload_as_JSON')?['body']?['Id']}'",
                                                            "$top": 10
                                                        }
                                                    }
                                                },
                                                "Log_Get_transaction": {
                                                    "runAfter": {
                                                        "Update_Opportunity_collection": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "actionType": "Get",
                                                            "body": "@body('Get_Opportunity_record')['value'][0]",
                                                            "correlationid": "@{guid()}",
                                                            "dataType": "Opportunity",
                                                            "id": "@guid()",
                                                            "objectid": "@body('Get_Opportunity_record')['value'][0]['id']",
                                                            "source": "SalesforceConnector",
                                                            "status": "Complete"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": false
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('transactionLogs')}/docs"
                                                    }
                                                },
                                                "Update_Opportunity_collection": {
                                                    "runAfter": {
                                                        "Get_Opportunity_record": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "body": "@body('Get_Opportunity_record')['value'][0]",
                                                            "id": "@body('Get_Opportunity_record')?['value'][0]['Id']"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('opportunities')}/docs"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_2": {
                                            "case": "Create",
                                            "actions": {
                                                "Create_Opportunity_in_collection": {
                                                    "runAfter": {
                                                        "Create_a_Opportunity_record_at_Salesforce": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "body": "@body('Create_a_Opportunity_record_at_Salesforce')",
                                                            "id": "@body('Create_a_Opportunity_record_at_Salesforce')?['Id']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('opportunities')}/docs"
                                                    }
                                                },
                                                "Create_a_Opportunity_record_at_Salesforce": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "CloseDate": "@body('Parse_action_payload_as_JSON')?['body']?['CloseDate']",
                                                            "Name": "@body('Parse_action_payload_as_JSON')?['body']?['Name']",
                                                            "StageName": "@body('Parse_action_payload_as_JSON')?['body']?['StageName']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Opportunity'))}/items"
                                                    }
                                                },
                                                "Log_Create_Transaction": {
                                                    "runAfter": {
                                                        "Create_Opportunity_in_collection": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Status": "Complete",
                                                            "actionType": "Create",
                                                            "body": "@body('Create_a_Opportunity_record_at_Salesforce')",
                                                            "correlationid": "@{guid()}",
                                                            "dataType": "Opportunity",
                                                            "id": "@guid()",
                                                            "objectid": "@body('Create_a_Opportunity_record_at_Salesforce')?['Id']",
                                                            "source": "SalesforceConnector"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": false
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('transactionLogs')}/docs"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_3": {
                                            "case": "Update",
                                            "actions": {
                                                "Log_Update_transaction": {
                                                    "runAfter": {
                                                        "Update_Opportunity_in_collection": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Status": "Complete",
                                                            "actionType": "Update",
                                                            "body": "@body('Update_a_Opportunity_record_at_Salesforce')",
                                                            "correlationid": "@{guid()}",
                                                            "dataType": "Opportunity",
                                                            "id": "@guid()",
                                                            "objectId": "@{body('Update_a_Opportunity_record_at_Salesforce')?['Id']}",
                                                            "source": "SalesforceConnector"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('transactionLogs')}/docs"
                                                    }
                                                },
                                                "Update_Opportunity_in_collection": {
                                                    "runAfter": {
                                                        "Update_a_Opportunity_record_at_Salesforce": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "body": "@body('Update_a_Opportunity_record_at_Salesforce')",
                                                            "id": "@body('Update_a_Opportunity_record_at_Salesforce')?['Id']"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('opportunities')}/docs"
                                                    }
                                                },
                                                "Update_a_Opportunity_record_at_Salesforce": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "CloseDate": "@body('Parse_action_payload_as_JSON')?['body']?['CloseDate']",
                                                            "Name": "@body('Parse_action_payload_as_JSON')?['body']?['Name']",
                                                            "StageName": "@body('Parse_action_payload_as_JSON')?['body']?['StageName']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                            }
                                                        },
                                                        "method": "patch",
                                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Opportunity'))}/items/@{encodeURIComponent(encodeURIComponent(body('Parse_action_payload_as_JSON')?['body']?['Id']))}"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@body('Parse_action_payload_as_JSON')?['actionType']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        },
                        "For_each_action_in_Workflow": {
                            "foreach": "@result('CRU_Opportunities_in_Salesforce')",
                            "actions": {
                                "Create_Log_Entries": {
                                    "runAfter": {
                                        "LogAuditMessage": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "body": "@items('For_each_action_in_Workflow')",
                                            "correlationId": "@{guid()}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                        }
                                    }
                                },
                                "LogAuditMessage": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "Test11111": "sdfsdf",
                                            "body": {
                                                "abcd": "sdfsdf"
                                            },
                                            "id": "sdfsdfsdfsadfsdfsdfxxxxxs"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_test_FunctionApp20180402044309_name')), '/functions/LogAuditMessage')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "CRU_Opportunities_in_Salesforce": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                                "connectionName": "documentdb",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb"
                            },
                            "salesforce": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                                "connectionName": "salesforce-3",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce"
                            },
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Web/sites', parameters('sites_test_FunctionApp20180402044309_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/sf-OpportunityConnector-la1'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_sf_OpportunityConnector_la1_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_one_or_more_messages_arrive_in_a_Opportunity_topic": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('opportunity'))}/subscriptions/@{encodeURIComponent('connector-subscriber')}/messages/batch/head",
                                "queries": {
                                    "maxMessageCount": 20,
                                    "subscriptionType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "CRU_Opportunities_in_Salesforce": {
                            "actions": {
                                "Parse_action_payload_as_JSON": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@json(base64ToString(triggerBody()?['ContentData']))",
                                        "schema": {
                                            "properties": {
                                                "actionType": {
                                                    "type": "string"
                                                },
                                                "body": {
                                                    "properties": {},
                                                    "type": "object"
                                                },
                                                "correlationId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Switch": {
                                    "runAfter": {
                                        "Parse_action_payload_as_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "cases": {
                                        "Case": {
                                            "case": "Get",
                                            "actions": {
                                                "Get_Opportunity_record": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Opportunity'))}/items",
                                                        "queries": {
                                                            "$filter": "Id eq '@{body('Parse_action_payload_as_JSON')?['body']?['Id']}'",
                                                            "$top": 10
                                                        }
                                                    }
                                                },
                                                "Update_Opportunity_collection": {
                                                    "runAfter": {
                                                        "Get_Opportunity_record": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "body": "@body('Get_Opportunity_record')['value'][0]",
                                                            "id": "@body('Get_Opportunity_record')?['value'][0]['Id']"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('opportunities')}/docs"
                                                    }
                                                },
                                                "Log_Get_transaction": {
                                                    "runAfter": {
                                                        "Update_Opportunity_collection": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "actionType": "Get",
                                                            "body": "@body('Get_Opportunity_record')['value'][0]",
                                                            "correlationid": "@{guid()}",
                                                            "dataType": "Opportunity",
                                                            "id": "@guid()",
                                                            "objectid": "@body('Get_Opportunity_record')['value'][0]['id']",
                                                            "source": "SalesforceConnector",
                                                            "status": "Complete"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": false
                                                        },
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('transactionLogs')}/docs"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_2": {
                                            "case": "Create",
                                            "actions": {
                                                "Create_a_Opportunity_record_at_Salesforce": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "Name": "@body('Parse_action_payload_as_JSON')?['body']?['Name']",
                                                            "StageName": "@body('Parse_action_payload_as_JSON')?['body']?['StageName']",
                                                            "CloseDate": "@body('Parse_action_payload_as_JSON')?['body']?['CloseDate']"
                                                        },
                                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Opportunity'))}/items"
                                                    }
                                                },
                                                "Create_Opportunity_in_collection": {
                                                    "runAfter": {
                                                        "Create_a_Opportunity_record_at_Salesforce": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "body": "@body('Create_a_Opportunity_record_at_Salesforce')",
                                                            "id": "@body('Create_a_Opportunity_record_at_Salesforce')?['Id']"
                                                        },
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('opportunities')}/docs"
                                                    }
                                                },
                                                "Log_Create_Transaction": {
                                                    "runAfter": {
                                                        "Create_Opportunity_in_collection": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "Status": "Complete",
                                                            "actionType": "Create",
                                                            "body": "@body('Create_a_Opportunity_record_at_Salesforce')",
                                                            "correlationid": "@{guid()}",
                                                            "dataType": "Opportunity",
                                                            "id": "@guid()",
                                                            "objectid": "@body('Create_a_Opportunity_record_at_Salesforce')?['Id']",
                                                            "source": "SalesforceConnector"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": false
                                                        },
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('transactionLogs')}/docs"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_3": {
                                            "case": "Update",
                                            "actions": {
                                                "Update_a_Opportunity_record_at_Salesforce": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                            }
                                                        },
                                                        "method": "patch",
                                                        "body": {
                                                            "Name": "@body('Parse_action_payload_as_JSON')?['body']?['Name']",
                                                            "StageName": "@body('Parse_action_payload_as_JSON')?['body']?['StageName']",
                                                            "CloseDate": "@body('Parse_action_payload_as_JSON')?['body']?['CloseDate']"
                                                        },
                                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Opportunity'))}/items/"
                                                    }
                                                },
                                                "Update_Opportunity_in_collection": {
                                                    "runAfter": {
                                                        "Update_a_Opportunity_record_at_Salesforce": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "body": "@body('Update_a_Opportunity_record_at_Salesforce')",
                                                            "id": "@body('Update_a_Opportunity_record_at_Salesforce')?['Id']"
                                                        },
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true
                                                        },
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('opportunities')}/docs"
                                                    }
                                                },
                                                "Log_Update_transaction": {
                                                    "runAfter": {
                                                        "Update_Opportunity_in_collection": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "Status": "Complete",
                                                            "actionType": "Update",
                                                            "body": "@body('Update_a_Opportunity_record_at_Salesforce')",
                                                            "correlationid": "@{guid()}",
                                                            "dataType": "Opportunity",
                                                            "id": "@guid()",
                                                            "objectId": "@{body('Update_a_Opportunity_record_at_Salesforce')?['Id']}",
                                                            "source": "SalesforceConnector"
                                                        },
                                                        "path": "/dbs/@{encodeURIComponent('bc-sf-transaction-db')}/colls/@{encodeURIComponent('transactionLogs')}/docs"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@body('Parse_action_payload_as_JSON')?['actionType']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        },
                        "For_each_action_in_Workflow": {
                            "foreach": "@result('CRU_Opportunities_in_Salesforce')",
                            "actions": {
                                "LogAuditMessage": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "body": "@items('For_each_action_in_Workflow')",
                                            "correlationId": "@{guid()}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api1_name')), '/functions/LogAuditMessage')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "CRU_Opportunities_in_Salesforce": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "salesforce": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                                "connectionName": "salesforce-3"
                            },
                            "documentdb_1": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                                "connectionName": "documentdb"
                            },
                            "servicebus": {
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_9_name'))]",
                                "connectionName": "servicebus-9"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api1_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_9_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/Slack-Connector-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_Slack_Connector_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_one_or_more_messages_arrive_in_a_Slack_topic": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('slack'))}/subscriptions/@{encodeURIComponent('connector-subscriber')}/messages/batch/head",
                                "queries": {
                                    "maxMessageCount": 20,
                                    "subscriptionType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Initialize_token_variable": {
                            "runAfter": {
                                "Parse_request_as_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "token",
                                        "type": "String",
                                        "value": "xoxp-334115222932-335443085489-336602667712-2dfed8363606e8f23d2bb8c2c142084b"
                                    }
                                ]
                            }
                        },
                        "Parse_request_as_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@json(base64ToString(triggerBody()?['ContentData']))",
                                "schema": {
                                    "properties": {
                                        "actionType": {
                                            "type": "string"
                                        },
                                        "body": {
                                            "properties": {},
                                            "type": "object"
                                        },
                                        "correlationId": {
                                            "type": "string"
                                        },
                                        "sbGeneratedId": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Switch_by_Action_Type": {
                            "runAfter": {
                                "Initialize_token_variable": [
                                    "Succeeded"
                                ]
                            },
                            "cases": {
                                "Case": {
                                    "case": "CreateChannel",
                                    "actions": {
                                        "Create_a_channel": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['slack_1']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/channels.create",
                                                "queries": {
                                                    "name": "@body('Parse_request_as_JSON')?['body']?['channelName']"
                                                }
                                            }
                                        }
                                    }
                                },
                                "Case_2": {
                                    "case": "PostMessage",
                                    "actions": {
                                        "Post_message": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['slack_1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/chat.postMessage",
                                                "queries": {
                                                    "as_user": true,
                                                    "channel": "@body('Parse_request_as_JSON')?['body']?['channelName']",
                                                    "text": "@body('Parse_request_as_JSON')?['body']?['message']"
                                                }
                                            }
                                        }
                                    }
                                },
                                "Case_3": {
                                    "case": "ArchiveChannel",
                                    "actions": {
                                        "Check_if_channel_is_returned": {
                                            "actions": {
                                                "Archive_Channel": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "headers": {
                                                            "Content-Type": "application/x-www-form-urlencoded"
                                                        },
                                                        "method": "POST",
                                                        "uri": "https://slack.com/api/channels.archive?token=@{variables('token')}&channel=@{actions('Filter_array')['outputs']['body'][0]['id']}"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Filter_array": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Log_Channel_not_found_message": {
                                                        "runAfter": {},
                                                        "type": "Function",
                                                        "inputs": {
                                                            "body": {
                                                                "body": "@body('Parse_request_as_JSON')",
                                                                "logType": "Info",
                                                                "message": "Channnel name is not found",
                                                                "objectId": "",
                                                                "source": "Slack"
                                                            },
                                                            "function": {
                                                                "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "greaterOrEquals": [
                                                            "@length(actions('Filter_array')['outputs']['body'])",
                                                            1
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Filter_array": {
                                            "runAfter": {
                                                "Get_Channels": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Query",
                                            "inputs": {
                                                "from": "@body('Get_Channels')?['channels']",
                                                "where": "@equals(item()?['name'], body('Parse_request_as_JSON')?['body']?['channelName'])"
                                            }
                                        },
                                        "Get_Channels": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "method": "GET",
                                                "uri": "https://slack.com/api/channels.list?token=@{variables('token')}"
                                            }
                                        }
                                    }
                                },
                                "Case_4": {
                                    "case": "InviteMembers",
                                    "actions": {
                                        "Check_if_channel_exists": {
                                            "actions": {
                                                "For_each_member": {
                                                    "foreach": "@split(body('Parse_request_as_JSON')?['body']?['members'], ',')",
                                                    "actions": {
                                                        "Get_user_Id_by_Email": {
                                                            "runAfter": {},
                                                            "type": "Http",
                                                            "inputs": {
                                                                "method": "GET",
                                                                "uri": "https://slack.com/api/users.lookupByEmail?token=@{variables('token')}&email=@{items('For_each_member')}"
                                                            }
                                                        },
                                                        "Invite_Member_to_channel": {
                                                            "runAfter": {
                                                                "Get_user_Id_by_Email": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Http",
                                                            "inputs": {
                                                                "headers": {
                                                                    "Content-Type": "application/x-www-form-urlencoded"
                                                                },
                                                                "method": "POST",
                                                                "uri": "https://slack.com/api/channels.invite?token=@{variables('token')}&channel=@{actions('Filter_channel_by_name')['outputs']['body'][0]['id']}&user=@{body('Get_user_Id_by_Email')?['user']?['id']}"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "type": "Foreach"
                                                }
                                            },
                                            "runAfter": {
                                                "Filter_channel_by_name": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Log_No_channel_found_message": {
                                                        "runAfter": {},
                                                        "type": "Function",
                                                        "inputs": {
                                                            "body": {
                                                                "body": "@body('Parse_request_as_JSON')",
                                                                "logType": "Info",
                                                                "message": "Channnel name is not found",
                                                                "objectId": "",
                                                                "source": "Slack"
                                                            },
                                                            "function": {
                                                                "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "greaterOrEquals": [
                                                            "@length(actions('Filter_channel_by_name')['outputs']['body'])",
                                                            1
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Filter_channel_by_name": {
                                            "runAfter": {
                                                "Get_Channels_by_name": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Query",
                                            "inputs": {
                                                "from": "@body('Get_Channels_by_name')?['channels']",
                                                "where": "@equals(item()?['name'], body('Parse_request_as_JSON')?['body']?['channelName'])"
                                            }
                                        },
                                        "Get_Channels_by_name": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "method": "GET",
                                                "uri": "https://slack.com/api/channels.list?token=@{variables('token')}"
                                            }
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {
                                    "Action_type_not_matched_logging": {
                                        "runAfter": {},
                                        "type": "Function",
                                        "inputs": {
                                            "body": {
                                                "body": "@body('Parse_request_as_JSON')",
                                                "logType": "Info",
                                                "message": "No matching action type found",
                                                "objectId": "",
                                                "source": "Slack"
                                            },
                                            "function": {
                                                "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                            }
                                        }
                                    }
                                }
                            },
                            "expression": "@body('Parse_request_as_JSON')?['actionType']",
                            "type": "Switch"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                            },
                            "slack_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_slack_1_name'))]",
                                "connectionName": "slack-1",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/slack"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_slack_1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/Slack-Connector-la1'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_Slack_Connector_la1_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {
                "displayName": "LogicApp"
            },
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_one_or_more_messages_arrive_in_a_Slack_topic": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 5
                            },
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('slack'))}/subscriptions/@{encodeURIComponent('connector-subscriber')}/messages/batch/head",
                                "queries": {
                                    "maxMessageCount": 20,
                                    "subscriptionType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Initialize_token_variable": {
                            "runAfter": {
                                "Parse_request_as_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "token",
                                        "type": "String",
                                        "value": "xoxp-334115222932-335443085489-336602667712-2dfed8363606e8f23d2bb8c2c142084b"
                                    }
                                ]
                            }
                        },
                        "Parse_request_as_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@json(base64ToString(triggerBody()?['ContentData']))",
                                "schema": {
                                    "properties": {
                                        "actionType": {
                                            "type": "string"
                                        },
                                        "body": {
                                            "properties": {},
                                            "type": "object"
                                        },
                                        "correlationId": {
                                            "type": "string"
                                        },
                                        "sbGeneratedId": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Switch_by_Action_Type": {
                            "runAfter": {
                                "Initialize_token_variable": [
                                    "Succeeded"
                                ]
                            },
                            "cases": {
                                "Case": {
                                    "case": "CreateChannel",
                                    "actions": {
                                        "Create_a_channel": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['slack']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/channels.create",
                                                "queries": {
                                                    "name": "@body('Parse_request_as_JSON')?['body']?['channelName']"
                                                }
                                            }
                                        }
                                    }
                                },
                                "Case_2": {
                                    "case": "PostMessage",
                                    "actions": {
                                        "Post_message": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['slack']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/chat.postMessage",
                                                "queries": {
                                                    "as_user": true,
                                                    "channel": "@body('Parse_request_as_JSON')?['body']?['channelName']",
                                                    "text": "@body('Parse_request_as_JSON')?['body']?['message']"
                                                }
                                            }
                                        }
                                    }
                                },
                                "Case_3": {
                                    "case": "ArchiveChannel",
                                    "actions": {
                                        "Condition": {
                                            "actions": {
                                                "Archive_Channel": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "headers": {
                                                            "Content-Type": "application/x-www-form-urlencoded"
                                                        },
                                                        "method": "POST",
                                                        "uri": "https://slack.com/api/channels.archive?token=@{variables('token')}&channel=@{actions('Filter_array')['outputs']['body'][0]['id']}"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Filter_array": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Log_Channel_not_found_message": {
                                                        "runAfter": {},
                                                        "type": "Function",
                                                        "inputs": {
                                                            "body": "{\n  \"body\": ,\n  \"logType\": \"Info\",\n  \"message\": \"Channnel name is not found\",\n  \"objectId\": \"\",\n  \"source\": \"Slack\"\n}",
                                                            "function": {
                                                                "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api1_name')), '/functions/LogAuditMessage')]"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "greaterOrEquals": [
                                                            "@length(actions('Filter_array')['outputs']['body'])",
                                                            1
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Filter_array": {
                                            "runAfter": {
                                                "Get_Channels": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Query",
                                            "inputs": {
                                                "from": "@body('Get_Channels')?['channels']",
                                                "where": "@equals(item()?['name'], body('Parse_request_as_JSON')?['body']?['channelName'])"
                                            }
                                        },
                                        "Get_Channels": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "method": "GET",
                                                "uri": "https://slack.com/api/channels.list?token=@{variables('token')}"
                                            }
                                        }
                                    }
                                },
                                "Case_4": {
                                    "case": "InviteMembers",
                                    "actions": {
                                        "Check_if_channel_exists": {
                                            "actions": {
                                                "For_each_member": {
                                                    "foreach": "@split(body('Parse_request_as_JSON')?['body']?['members'], ',')",
                                                    "actions": {
                                                        "Get_user_Id_by_Email": {
                                                            "runAfter": {},
                                                            "type": "Http",
                                                            "inputs": {
                                                                "method": "GET",
                                                                "uri": "https://slack.com/api/users.lookupByEmail?token=@{variables('token')}&email=@{items('For_each_member')}"
                                                            }
                                                        },
                                                        "Invite_Member_to_channel": {
                                                            "runAfter": {
                                                                "Get_user_Id_by_Email": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Http",
                                                            "inputs": {
                                                                "headers": {
                                                                    "Content-Type": "application/x-www-form-urlencoded"
                                                                },
                                                                "method": "POST",
                                                                "uri": "https://slack.com/api/channels.invite?token=@{variables('token')}&channel=@{actions('Filter_channel_by_name')['outputs']['body'][0]['id']}&user=@{body('Get_user_Id_by_Email')?['user']?['id']}"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "type": "Foreach"
                                                }
                                            },
                                            "runAfter": {
                                                "Filter_channel_by_name": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Log_No_channel_found_message": {
                                                        "runAfter": {},
                                                        "type": "Function",
                                                        "inputs": {
                                                            "body": {
                                                                "body": "@body('Parse_request_as_JSON')",
                                                                "logType": "Info",
                                                                "message": "Channnel name is not found",
                                                                "objectId": "",
                                                                "source": "Slack"
                                                            },
                                                            "function": {
                                                                "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "greaterOrEquals": [
                                                            "@length(actions('Filter_channel_by_name')['outputs']['body'])",
                                                            1
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Filter_channel_by_name": {
                                            "runAfter": {
                                                "Get_Channels_by_name": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Query",
                                            "inputs": {
                                                "from": "@body('Get_Channels_by_name')?['channels']",
                                                "where": "@equals(item()?['name'], body('Parse_request_as_JSON')?['body']?['channelName'])"
                                            }
                                        },
                                        "Get_Channels_by_name": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "method": "GET",
                                                "uri": "https://slack.com/api/channels.list?token=@{variables('token')}"
                                            }
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {
                                    "Action_type_not_matched_logging": {
                                        "runAfter": {},
                                        "type": "Function",
                                        "inputs": {
                                            "body": {
                                                "body": "@body('Parse_request_as_JSON')",
                                                "logType": "Info",
                                                "message": "No matching action type found",
                                                "objectId": "",
                                                "source": "Slack"
                                            },
                                            "function": {
                                                "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name')), '/functions/HttpTriggerCSharp1')]"
                                            }
                                        }
                                    }
                                }
                            },
                            "expression": "@body('Parse_request_as_JSON')?['actionType']",
                            "type": "Switch"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_9_name'))]",
                                "connectionName": "servicebus-9",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                            },
                            "slack": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_slack_name'))]",
                                "connectionName": "slack",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/slack"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api1_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_9_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_slack_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/test-deleteSFContacts-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_test_deleteSFContacts_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 33
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each": {
                            "foreach": "@body('Get_records')?['value']",
                            "actions": {
                                "Delete_record": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                            }
                                        },
                                        "method": "delete",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Opportunity'))}/items/@{encodeURIComponent(encodeURIComponent(items('For_each')?['Id']))}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_records": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_records": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['salesforce']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Contact'))}/items"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "salesforce": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]",
                                "connectionName": "salesforce-3",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_salesforce_3_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/test-logging-audit'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_test_logging_audit_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "LogAuditMessage": {
                            "runAfter": {
                                "LogAuditMessage_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "body": {
                                        "sdfsdfsd": "sdfsdfsdf"
                                    },
                                    "correlationId": "dfashkdfhsk27342734",
                                    "id": "sdfsdfsdfsdfsdfsdfsdfsd2"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_test_FunctionApp20180402044309_name')), '/functions/LogAuditMessage')]"
                                }
                            }
                        },
                        "LogAuditMessage_2": {
                            "runAfter": {},
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "body": {
                                        "sdfsdfsd": "sdfsdfsdf"
                                    },
                                    "correlationId": "dfashkdfhsk273427341",
                                    "id": "sdfsdfsdfsdfsdfsdfsdfsd12"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api1_name')), '/functions/LogAuditMessage')]"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_test_FunctionApp20180402044309_name'))]",
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]",
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/test-parser'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_test_parser_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {},
                    "actions": {},
                    "outputs": {}
                },
                "parameters": {}
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/test-TestigHelperLeadConnector-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_test_TestigHelperLeadConnector_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Parse_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()",
                                "schema": {
                                    "properties": {
                                        "actionType": {
                                            "type": "string"
                                        },
                                        "body": {
                                            "properties": {},
                                            "type": "object"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "objectId": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Send_message": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "message": "Action request posted to service bus(Lead topic) successfully"
                                },
                                "statusCode": 200
                            }
                        },
                        "Send_message": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "ContentData": "@{base64(triggerBody())}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/@{encodeURIComponent(encodeURIComponent('lead'))}/messages",
                                "queries": {
                                    "systemProperties": "None"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/test-TestigHelperOpportunityConnector-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_test_TestigHelperOpportunityConnector_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Response": {
                            "runAfter": {
                                "Send_message": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "message": "Action request posted to service bus(Opportunity topic) successfully"
                                },
                                "statusCode": 200
                            }
                        },
                        "Send_message": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "ContentData": "@{base64(triggerBody())}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/@{encodeURIComponent(encodeURIComponent('opportunity'))}/messages",
                                "queries": {
                                    "systemProperties": "None"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/test-TestingHelperSlackConnector-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_test_TestingHelperSlackConnector_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Response": {
                            "runAfter": {
                                "Send_message_to_Slack_topic": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "message": "The action request is pushed to Service bus successfully."
                                },
                                "statusCode": 200
                            }
                        },
                        "Send_message_to_Slack_topic": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "ContentData": "@{base64(triggerBody())}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/@{encodeURIComponent(encodeURIComponent('slack'))}/messages",
                                "queries": {
                                    "systemProperties": "None"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Logic/workflows/test-TestingIncident-la'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_test_TestingIncident_la_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Response": {
                            "runAfter": {
                                "Send_message": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "Message posted to Service Bus": true
                                },
                                "statusCode": 200
                            }
                        },
                        "Send_message": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "ContentData": "@{base64(triggerBody())}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/@{encodeURIComponent(encodeURIComponent('incident'))}/messages",
                                "queries": {
                                    "systemProperties": "None"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]",
                                "connectionName": "servicebus-8",
                                "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_8_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb'.",
            "type": "Microsoft.ServiceBus/namespaces",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "name": "[parameters('namespaces_bconnectsb_name')]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "tags": {},
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "metricId": "[concat('4eff8c1d-85c4-46a8-a56d-db0f5efefeb4:', parameters('namespaces_bconnectsb_name'))]",
                "createdAt": "2018-01-12T09:11:40.553Z",
                "updatedAt": "2018-01-12T09:12:11.147Z",
                "serviceBusEndpoint": "[concat('https://', parameters('namespaces_bconnectsb_name'),'.servicebus.windows.net:443/')]",
                "status": "Active"
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server'.",
            "type": "Microsoft.Sql/servers",
            "kind": "v12.0",
            "name": "[parameters('servers_atlas_testing_server_name')]",
            "apiVersion": "2015-05-01-preview",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "administratorLogin": "atlas",
                "version": "12.0"
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc'.",
            "type": "Microsoft.Sql/servers",
            "kind": "v12.0",
            "name": "[parameters('servers_bc_audit_dw_servcer_poc_name')]",
            "apiVersion": "2015-05-01-preview",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "administratorLogin": "bcaudit",
                "version": "12.0"
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/sqlserver6qpalerame3h4'.",
            "type": "Microsoft.Sql/servers",
            "kind": "v12.0",
            "name": "[parameters('servers_sqlserver6qpalerame3h4_name')]",
            "apiVersion": "2015-05-01-preview",
            "location": "westeurope",
            "tags": {
                "displayName": "SqlServer"
            },
            "scale": null,
            "properties": {
                "administratorLogin": "cloudopsadmin",
                "version": "12.0"
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/storage6qpalerame3h4'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_storage6qpalerame3h4_name')]",
            "apiVersion": "2017-10-01",
            "location": "westeurope",
            "tags": {
                "displayName": "storage"
            },
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/aa372bf50004e46009ec6a4f'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_aa372bf50004e46009ec6a4f_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/a3d79812512454d4f997ab9a'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_a3d79812512454d4f997ab9a_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/a3d474e840a6842d2a0803f1'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_a3d474e840a6842d2a0803f1_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/getsfleadfromco9ba3'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_getsfleadfromco9ba3_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/a8e0198faebda42bf983b3a4'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_a8e0198faebda42bf983b3a4_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/leadpersister869d'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_leadpersister869d_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/dwopportunitydu969e'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_dwopportunitydu969e_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/testinghelperco82e3'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_testinghelperco82e3_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/bcsfopportunity8b04'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_bcsfopportunity8b04_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/bcdwopportunity9cfd'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_bcdwopportunity9cfd_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/toscaapib645'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_toscaapib645_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/aeb6c4785e3ad4642a23dd89'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_aeb6c4785e3ad4642a23dd89_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/a6dd28abaa670429a8ed943e'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_a6dd28abaa670429a8ed943e_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/bcopportunitypa8f7d'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_bcopportunitypa8f7d_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/a67a46bc2c2cf4970aaa656a'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_a67a46bc2c2cf4970aaa656a_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/bcauditmanageme9560'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_bcauditmanageme9560_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/testtemplate1b4ee'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_testtemplate1b4ee_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/bconnectprocess8771'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_bconnectprocess8771_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/ab61e789bb26b4c4587e1bd2'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_ab61e789bb26b4c4587e1bd2_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/tmdmcontactpersa455'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_tmdmcontactpersa455_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Storage/storageAccounts/bconnectsalesfob77c'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_bconnectsalesfob77c_name')]",
            "apiVersion": "2017-10-01",
            "location": "centralus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/documentdb-2'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_documentdb_2_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "bc-sap-transaction-cdb-connection",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/documentdb-1'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_documentdb_1_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "bc-master-cdb-connnection",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/documentdb'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_documentdb_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "bc-sf-transaction-cdb-connection",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/', parameters('connections_documentdb_name'))]"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/documentdb-4'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_documentdb_4_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "bc-snow-transaction-cdb-connection",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/documentdb-3'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_documentdb_3_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "bc-audit-management-connection",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/office365-1'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_office365_1_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "Office 365 Outlook",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/office365"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/office365-2'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_office365_2_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "v.kumar@ext.tricentis.com",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/office365"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/office365'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_office365_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "Office 365 Outlook",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/', parameters('connections_office365_name'))]"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/salesforce-3'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_salesforce_3_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "Salesforce",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/salesforce2'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_salesforce2_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "SalesforceTwo",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/salesforce1'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_salesforce1_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "SalesforceOne",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/salesforce'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_salesforce_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "[concat(parameters('connections_salesforce_name'),'SalesforceSandbox')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/', parameters('connections_salesforce_name'))]"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/servicebus-9'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_servicebus_9_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "bconnectsb1",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/servicebus-8'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_servicebus_8_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "bconnectsb",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/service-now-1'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_service_now_1_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "TricentisDev",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/service-now"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/service-now'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_service_now_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "My Local Connection",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/', parameters('connections_service_now_name'))]"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/slack'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_slack_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "m.sahoo",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/', parameters('connections_slack_name'))]"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/slack-1'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_slack_1_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "g.vats",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/slack"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/slack-2'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_slack_2_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "Slack",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/slack"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/sql'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_sql_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "[concat('tmdm-snow-temp-', parameters('connections_sql_name'),'-connection')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/', parameters('connections_sql_name'))]"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/sql-1'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_sql_1_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "tmdm-snow-temp-sql-connection",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/sql"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/connections/sql-2'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_sql_2_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "tcp:atlas-testing-server.database.windows.net,1433",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/providers/Microsoft.Web/locations/westeurope/managedApis/sql"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CentralUSPlan'.",
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "name": "[parameters('serverfarms_CentralUSPlan_name')]",
            "apiVersion": "2016-09-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "name": "[parameters('serverfarms_CentralUSPlan_name')]",
                "workerTierName": null,
                "adminSiteName": null,
                "hostingEnvironmentProfile": null,
                "perSiteScaling": false,
                "reserved": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/ServicePlan4456d05f-b8ed'.",
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            },
            "kind": "app",
            "name": "[parameters('serverfarms_ServicePlan4456d05f_b8ed_name')]",
            "apiVersion": "2016-09-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "name": "[parameters('serverfarms_ServicePlan4456d05f_b8ed_name')]",
                "workerTierName": null,
                "adminSiteName": null,
                "hostingEnvironmentProfile": null,
                "perSiteScaling": false,
                "reserved": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/ServicePlan9f2174e8-8584'.",
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            },
            "kind": "app",
            "name": "[parameters('serverfarms_ServicePlan9f2174e8_8584_name')]",
            "apiVersion": "2016-09-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "name": "[parameters('serverfarms_ServicePlan9f2174e8_8584_name')]",
                "workerTierName": null,
                "adminSiteName": null,
                "hostingEnvironmentProfile": null,
                "perSiteScaling": false,
                "reserved": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CloudopsHosting'.",
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "F1",
                "tier": "Free",
                "size": "F1",
                "family": "F",
                "capacity": 0
            },
            "kind": "app",
            "name": "[parameters('serverfarms_CloudopsHosting_name')]",
            "apiVersion": "2016-09-01",
            "location": "West Europe",
            "tags": {
                "displayName": "HostingPlan"
            },
            "scale": null,
            "properties": {
                "name": "[parameters('serverfarms_CloudopsHosting_name')]",
                "workerTierName": null,
                "adminSiteName": null,
                "hostingEnvironmentProfile": null,
                "perSiteScaling": false,
                "reserved": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bconnectaudit-dev'.",
            "type": "Microsoft.Web/sites",
            "kind": "app",
            "name": "[parameters('sites_bconnectaudit_dev_name')]",
            "apiVersion": "2016-08-01",
            "location": "West Europe",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CloudopsHosting": "empty"
            },
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_bconnectaudit_dev_name'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_bconnectaudit_dev_name'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CloudopsHosting_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CloudopsHosting_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/webSite6qpalerame3h4'.",
            "type": "Microsoft.Web/sites",
            "kind": "app",
            "name": "[parameters('sites_webSite6qpalerame3h4_name')]",
            "apiVersion": "2016-08-01",
            "location": "West Europe",
            "tags": {
                "displayName": "Website",
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CloudopsHosting": "empty"
            },
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_webSite6qpalerame3h4_name'),'website6qpalerame3h4.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_webSite6qpalerame3h4_name'),'website6qpalerame3h4.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CloudopsHosting_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CloudopsHosting_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/dw-OpportunityDumper-af'.",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('sites_dw_OpportunityDumper_af_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_dw_OpportunityDumper_af_name'),'dw-opportunitydumper-af.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_dw_OpportunityDumper_af_name'),'dw-opportunitydumper-af.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-SF-OpportunityIntegrator-func'.",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('sites_bc_SF_OpportunityIntegrator_func_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_bc_SF_OpportunityIntegrator_func_name'),'bc-sf-opportunityintegrator-func.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_bc_SF_OpportunityIntegrator_func_name'),'bc-sf-opportunityintegrator-func.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-sf-Contact-BulkContactPersister-fa'.",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('sites_bc_sf_Contact_BulkContactPersister_fa_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CentralUSPlan": "empty"
            },
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_bc_sf_Contact_BulkContactPersister_fa_name'),'bc-sf-contact-bulkcontactpersister-fa.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_bc_sf_Contact_BulkContactPersister_fa_name'),'bc-sf-contact-bulkcontactpersister-fa.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/tmdm-ContactPersister-fa'.",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('sites_tmdm_ContactPersister_fa_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_tmdm_ContactPersister_fa_name'),'tmdm-contactpersister-fa.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_tmdm_ContactPersister_fa_name'),'tmdm-contactpersister-fa.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/test-appservice'.",
            "type": "Microsoft.Web/sites",
            "kind": "app",
            "name": "[parameters('sites_test_appservice_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.Web/serverfarms/ServicePlan9f2174e8-8584": "empty"
            },
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_test_appservice_name'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_test_appservice_name'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan9f2174e8_8584_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan9f2174e8_8584_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/test-FunctionApp20180402044309'.",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('sites_test_FunctionApp20180402044309_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CentralUSPlan": "empty"
            },
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_test_FunctionApp20180402044309_name'),'test-functionapp20180402044309.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_test_FunctionApp20180402044309_name'),'test-functionapp20180402044309.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bconnectprocessopportunities'.",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('sites_bconnectprocessopportunities_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_bconnectprocessopportunities_name'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_bconnectprocessopportunities_name'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-audit-management-api'.",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('sites_bc_audit_management_api_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_bc_audit_management_api_name'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_bc_audit_management_api_name'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-audit-management-api1'.",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('sites_bc_audit_management_api1_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CentralUSPlan": "empty"
            },
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_bc_audit_management_api1_name'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_bc_audit_management_api1_name'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/TOSCAAPI'.",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('sites_TOSCAAPI_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_TOSCAAPI_name'),'toscaapi.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_TOSCAAPI_name'),'toscaapi.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/SAPBConnectAPIApp'.",
            "type": "Microsoft.Web/sites",
            "kind": "api",
            "name": "[parameters('sites_SAPBConnectAPIApp_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.Web/serverfarms/ServicePlan4456d05f-b8ed": "empty"
            },
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_SAPBConnectAPIApp_name'),'sapbconnectapiapp.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_SAPBConnectAPIApp_name'),'sapbconnectapiapp.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan4456d05f_b8ed_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan4456d05f_b8ed_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-CommonApp'.",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('sites_bc_CommonApp_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CentralUSPlan": "empty"
            },
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_bc_CommonApp_name'),'bc-commonapp.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_bc_CommonApp_name'),'bc-commonapp.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/ToscaApis'.",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('sites_ToscaApis_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CentralUSPlan": "empty"
            },
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_ToscaApis_name'),'toscaapis.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_ToscaApis_name'),'toscaapis.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-OpportunityParser-fa'.",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('sites_bc_OpportunityParser_fa_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_bc_OpportunityParser_fa_name'),'bc-opportunityparser-fa.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_bc_OpportunityParser_fa_name'),'bc-opportunityparser-fa.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_CentralUSPlan_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/AuthorizationRules/RootManageSharedAccessKey'.",
            "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('AuthorizationRules_RootManageSharedAccessKey_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/account'.",
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_account_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 16384,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": true,
                "enableExpress": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/acknowledgement'.",
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_acknowledgement_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 16384,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": true,
                "enableExpress": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/bconnecttopic'.",
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_bconnecttopic_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": true,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/contact'.",
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_contact_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 16384,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": true,
                "enableExpress": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/incident'.",
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_incident_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 16384,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": true,
                "enableExpress": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/lead'.",
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_lead_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 16384,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": true,
                "enableExpress": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/opportunity'.",
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_opportunity_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 16384,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": true,
                "enableExpress": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/outtopic'.",
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_outtopic_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": true,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/slack'.",
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_slack_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 16384,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": true,
                "enableExpress": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/user'.",
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_user_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 16384,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": true,
                "enableExpress": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/account/subscriptions/sap-account-subscriber'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_account_name'), '/', parameters('subscriptions_sap_account_subscriber_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_account_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/account/subscriptions/sf-account-subscriber'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_account_name'), '/', parameters('subscriptions_sf_account_subscriber_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_account_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/account/subscriptions/sap-account-subscriber/rules/$Default'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_account_name'), '/', parameters('subscriptions_sap_account_subscriber_name'), '/', parameters('rules_$Default_name_6'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_account_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_bconnectsb_name'), parameters('topics_account_name'), parameters('subscriptions_sap_account_subscriber_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/account/subscriptions/sf-account-subscriber/rules/$Default'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_account_name'), '/', parameters('subscriptions_sf_account_subscriber_name'), '/', parameters('rules_$Default_name_4'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_account_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_bconnectsb_name'), parameters('topics_account_name'), parameters('subscriptions_sf_account_subscriber_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/acknowledgement/subscriptions/sf-acknowledgement-subscriber'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_acknowledgement_name'), '/', parameters('subscriptions_sf_acknowledgement_subscriber_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_acknowledgement_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/acknowledgement/subscriptions/sf-acknowledgement-subscriber/rules/$Default'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_acknowledgement_name'), '/', parameters('subscriptions_sf_acknowledgement_subscriber_name'), '/', parameters('rules_$Default_name_13'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_acknowledgement_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_bconnectsb_name'), parameters('topics_acknowledgement_name'), parameters('subscriptions_sf_acknowledgement_subscriber_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/bconnecttopic/subscriptions/bconnectsubscription'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_bconnecttopic_name'), '/', parameters('subscriptions_bconnectsubscription_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "lockDuration": "PT1M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_bconnecttopic_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/bconnecttopic/subscriptions/bconnectsubscription/rules/$Default'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_bconnecttopic_name'), '/', parameters('subscriptions_bconnectsubscription_name'), '/', parameters('rules_$Default_name_9'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_bconnecttopic_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_bconnectsb_name'), parameters('topics_bconnecttopic_name'), parameters('subscriptions_bconnectsubscription_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/contact/subscriptions/sf-contact-subscriber'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_contact_name'), '/', parameters('subscriptions_sf_contact_subscriber_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_contact_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/contact/subscriptions/sf-contact-subscriber/rules/$Default'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_contact_name'), '/', parameters('subscriptions_sf_contact_subscriber_name'), '/', parameters('rules_$Default_name_5'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_contact_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_bconnectsb_name'), parameters('topics_contact_name'), parameters('subscriptions_sf_contact_subscriber_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/incident/subscriptions/snow-incident-subscriber'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_incident_name'), '/', parameters('subscriptions_snow_incident_subscriber_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_incident_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/incident/subscriptions/snow-incident-subscriber/rules/$Default'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_incident_name'), '/', parameters('subscriptions_snow_incident_subscriber_name'), '/', parameters('rules_$Default_name_8'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_incident_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_bconnectsb_name'), parameters('topics_incident_name'), parameters('subscriptions_snow_incident_subscriber_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/lead/subscriptions/connector-subscriber'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_lead_name'), '/', parameters('subscriptions_connector_subscriber_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_lead_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/lead/subscriptions/connector-subscriber/rules/$Default'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_lead_name'), '/', parameters('subscriptions_connector_subscriber_name'), '/', parameters('rules_$Default_name_1'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_lead_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_bconnectsb_name'), parameters('topics_lead_name'), parameters('subscriptions_connector_subscriber_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/opportunity/subscriptions/connector-subscriber'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_opportunity_name'), '/', parameters('subscriptions_connector_subscriber_name_2'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_opportunity_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/opportunity/subscriptions/dw-opportunity-subscriber'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_opportunity_name'), '/', parameters('subscriptions_dw_opportunity_subscriber_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_opportunity_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/opportunity/subscriptions/sap-opportunity-subscriber'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_opportunity_name'), '/', parameters('subscriptions_sap_opportunity_subscriber_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_opportunity_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/opportunity/subscriptions/temp-opportunity-subscriber'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_opportunity_name'), '/', parameters('subscriptions_temp_opportunity_subscriber_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_opportunity_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/opportunity/subscriptions/connector-subscriber/rules/$Default'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_opportunity_name'), '/', parameters('subscriptions_connector_subscriber_name_2'), '/', parameters('rules_$Default_name_7'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_opportunity_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_bconnectsb_name'), parameters('topics_opportunity_name'), parameters('subscriptions_connector_subscriber_name_2'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/opportunity/subscriptions/dw-opportunity-subscriber/rules/$Default'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_opportunity_name'), '/', parameters('subscriptions_dw_opportunity_subscriber_name'), '/', parameters('rules_$Default_name_10'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_opportunity_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_bconnectsb_name'), parameters('topics_opportunity_name'), parameters('subscriptions_dw_opportunity_subscriber_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/opportunity/subscriptions/sap-opportunity-subscriber/rules/$Default'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_opportunity_name'), '/', parameters('subscriptions_sap_opportunity_subscriber_name'), '/', parameters('rules_$Default_name_11'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_opportunity_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_bconnectsb_name'), parameters('topics_opportunity_name'), parameters('subscriptions_sap_opportunity_subscriber_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/opportunity/subscriptions/temp-opportunity-subscriber/rules/$Default'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_opportunity_name'), '/', parameters('subscriptions_temp_opportunity_subscriber_name'), '/', parameters('rules_$Default_name_12'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_opportunity_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_bconnectsb_name'), parameters('topics_opportunity_name'), parameters('subscriptions_temp_opportunity_subscriber_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/outtopic/subscriptions/mysubscription'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_outtopic_name'), '/', parameters('subscriptions_mysubscription_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "lockDuration": "PT1M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_outtopic_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/outtopic/subscriptions/mysubscription/rules/$Default'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_outtopic_name'), '/', parameters('subscriptions_mysubscription_name'), '/', parameters('rules_$Default_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_outtopic_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_bconnectsb_name'), parameters('topics_outtopic_name'), parameters('subscriptions_mysubscription_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/slack/subscriptions/connector-subscriber'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_slack_name'), '/', parameters('subscriptions_connector_subscriber_name_1'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_slack_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/slack/subscriptions/connector-subscriber/rules/$Default'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_slack_name'), '/', parameters('subscriptions_connector_subscriber_name_1'), '/', parameters('rules_$Default_name_3'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_slack_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_bconnectsb_name'), parameters('topics_slack_name'), parameters('subscriptions_connector_subscriber_name_1'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/user/subscriptions/snow-user-subscriber'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_user_name'), '/', parameters('subscriptions_snow_user_subscriber_name'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_user_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.ServiceBus/namespaces/bconnectsb/topics/user/subscriptions/snow-user-subscriber/rules/$Default'.",
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "name": "[concat(parameters('namespaces_bconnectsb_name'), '/', parameters('topics_user_name'), '/', parameters('subscriptions_snow_user_subscriber_name'), '/', parameters('rules_$Default_name_2'))]",
            "apiVersion": "2017-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_bconnectsb_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_bconnectsb_name'), parameters('topics_user_name'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_bconnectsb_name'), parameters('topics_user_name'), parameters('subscriptions_snow_user_subscriber_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('auditingPolicies_Default_name'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "fullAuditLogsTableName": "SQLDBAuditLogsAtlastestingserver",
                "auditLogsTableName": "Atlastestingserver",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/backupLongTermRetentionVaults/RegisteredVault'.",
            "type": "Microsoft.Sql/servers/backupLongTermRetentionVaults",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('backupLongTermRetentionVaults_RegisteredVault_name'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "recoveryServicesVaultResourceId": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/atlas_testingdb_sql'.",
            "type": "Microsoft.Sql/servers/databases",
            "kind": "v12.0,user",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_atlas_testingdb_sql_name'))]",
            "apiVersion": "2014-04-01-preview",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "databaseId": "8560f4dd-3ea1-4713-a30d-63c58111cee5",
                "edition": "Standard",
                "status": "Online",
                "serviceLevelObjective": "S3",
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": "268435456000",
                "creationDate": "2018-02-12T10:32:40.153Z",
                "currentServiceObjectiveId": "789681b8-ca10-4eb0-bdf2-e0b050601b40",
                "requestedServiceObjectiveId": "789681b8-ca10-4eb0-bdf2-e0b050601b40",
                "requestedServiceObjectiveName": "S3",
                "sampleName": null,
                "defaultSecondaryLocation": "North Europe",
                "earliestRestoreDate": "2018-03-09T00:00:00Z",
                "elasticPoolName": null,
                "containmentState": 2,
                "readScale": "Disabled",
                "failoverGroupId": null,
                "zoneRedundant": false,
                "isUpgradeRequested": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/bc-audit-dw'.",
            "type": "Microsoft.Sql/servers/databases",
            "kind": "v12.0,user,datawarehouse",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_bc_audit_dw_name'))]",
            "apiVersion": "2014-04-01-preview",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "databaseId": "319ed22b-e780-4c2d-a970-87368802d0dc",
                "edition": "DataWarehouse",
                "status": "Paused",
                "serviceLevelObjective": "DW400",
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": "263882790666240",
                "creationDate": "2018-02-19T06:33:35.77Z",
                "currentServiceObjectiveId": "3bdaeefe-8a9d-41d3-91c4-46ef896b19af",
                "requestedServiceObjectiveId": "3bdaeefe-8a9d-41d3-91c4-46ef896b19af",
                "requestedServiceObjectiveName": "DW400",
                "sampleName": null,
                "defaultSecondaryLocation": "North Europe",
                "earliestRestoreDate": null,
                "elasticPoolName": null,
                "containmentState": 2,
                "readScale": "Disabled",
                "failoverGroupId": null,
                "zoneRedundant": false,
                "isUpgradeRequested": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/bc-audit-dw-dev'.",
            "type": "Microsoft.Sql/servers/databases",
            "kind": "v12.0,user,datawarehouse",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_bc_audit_dw_dev_name'))]",
            "apiVersion": "2014-04-01-preview",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "databaseId": "17d41932-79fb-45bc-9c6f-7c469474b927",
                "edition": "DataWarehouse",
                "status": "Paused",
                "serviceLevelObjective": "DW400",
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": "263882790666240",
                "creationDate": "2018-02-19T07:15:47.233Z",
                "currentServiceObjectiveId": "3bdaeefe-8a9d-41d3-91c4-46ef896b19af",
                "requestedServiceObjectiveId": "3bdaeefe-8a9d-41d3-91c4-46ef896b19af",
                "requestedServiceObjectiveName": "DW400",
                "sampleName": null,
                "defaultSecondaryLocation": "North Europe",
                "earliestRestoreDate": null,
                "elasticPoolName": null,
                "containmentState": 2,
                "readScale": "Disabled",
                "failoverGroupId": null,
                "zoneRedundant": false,
                "isUpgradeRequested": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/tmdm-snow-temp-sql'.",
            "type": "Microsoft.Sql/servers/databases",
            "kind": "v12.0,user",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_tmdm_snow_temp_sql_name'))]",
            "apiVersion": "2014-04-01-preview",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "databaseId": "f4d6ea0c-3f4c-4871-90dc-8037c7511c06",
                "edition": "Standard",
                "status": "Online",
                "serviceLevelObjective": "S3",
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": "268435456000",
                "creationDate": "2018-03-09T09:29:38.763Z",
                "currentServiceObjectiveId": "789681b8-ca10-4eb0-bdf2-e0b050601b40",
                "requestedServiceObjectiveId": "789681b8-ca10-4eb0-bdf2-e0b050601b40",
                "requestedServiceObjectiveName": "S3",
                "sampleName": null,
                "defaultSecondaryLocation": "North Europe",
                "earliestRestoreDate": "2018-03-09T10:00:19.5Z",
                "elasticPoolName": null,
                "containmentState": 2,
                "readScale": "Disabled",
                "failoverGroupId": null,
                "zoneRedundant": false,
                "isUpgradeRequested": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/firewallRules/103.56.173.1'.",
            "type": "Microsoft.Sql/servers/firewallRules",
            "kind": "v12.0",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('firewallRules_103.56.173.1_name'))]",
            "apiVersion": "2014-04-01-preview",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "startIpAddress": "[parameters('firewallRules_103.56.173.1_name')]",
                "endIpAddress": "[parameters('firewallRules_103.56.173.1_name')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/firewallRules/AllowAllWindowsAzureIps'.",
            "type": "Microsoft.Sql/servers/firewallRules",
            "kind": "v12.0",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('firewallRules_AllowAllWindowsAzureIps_name'))]",
            "apiVersion": "2014-04-01-preview",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/firewallRules/ClientIPAddress_2018-3-12_12-28-55'.",
            "type": "Microsoft.Sql/servers/firewallRules",
            "kind": "v12.0",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('firewallRules_ClientIPAddress_2018_3_12_12_28_55_name'))]",
            "apiVersion": "2014-04-01-preview",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "startIpAddress": "182.77.116.203",
                "endIpAddress": "182.77.116.203"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/firewallRules/HomeIp'.",
            "type": "Microsoft.Sql/servers/firewallRules",
            "kind": "v12.0",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('firewallRules_HomeIp_name'))]",
            "apiVersion": "2014-04-01-preview",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "startIpAddress": "192.168.1.6",
                "endIpAddress": "192.168.1.6"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/firewallRules/MahiIP'.",
            "type": "Microsoft.Sql/servers/firewallRules",
            "kind": "v12.0",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('firewallRules_MahiIP_name'))]",
            "apiVersion": "2014-04-01-preview",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "startIpAddress": "10.175.172.215",
                "endIpAddress": "10.175.172.215"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/firewallRules/MyIP'.",
            "type": "Microsoft.Sql/servers/firewallRules",
            "kind": "v12.0",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('firewallRules_MyIP_name'))]",
            "apiVersion": "2014-04-01-preview",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "startIpAddress": "10.175.172.103",
                "endIpAddress": "10.175.172.103"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/encryptionProtector/current'.",
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "kind": "servicemanaged",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('encryptionProtector_current_name'))]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/keys/ServiceManaged'.",
            "type": "Microsoft.Sql/servers/keys",
            "kind": "servicemanaged",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('keys_ServiceManaged_name'))]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "serverKeyType": "[parameters('keys_ServiceManaged_name')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/atlas_testingdb_sql/advisors/CreateIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_atlas_testingdb_sql_name'), '/', parameters('advisors_CreateIndex_name_1'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_atlas_testingdb_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/atlas_testingdb_sql/advisors/DropIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_atlas_testingdb_sql_name'), '/', parameters('advisors_DropIndex_name_1'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_atlas_testingdb_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/atlas_testingdb_sql/advisors/DbParameterization'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_atlas_testingdb_sql_name'), '/', parameters('advisors_DbParameterization_name_1'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_atlas_testingdb_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/atlas_testingdb_sql/advisors/ForceLastGoodPlan'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_atlas_testingdb_sql_name'), '/', parameters('advisors_ForceLastGoodPlan_name_1'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_atlas_testingdb_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/atlas_testingdb_sql/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_atlas_testingdb_sql_name'), '/', parameters('auditingPolicies_Default_name_9'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsAtlastestingserverAtlastestingdbsql",
                "auditLogsTableName": "AtlastestingserverAtlastestingdbsql",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_atlas_testingdb_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/atlas_testingdb_sql/backupLongTermRetentionPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_atlas_testingdb_sql_name'), '/', parameters('backupLongTermRetentionPolicies_Default_name_6'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Disabled",
                "recoveryServicesBackupPolicyResourceId": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_atlas_testingdb_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/atlas_testingdb_sql/geoBackupPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_atlas_testingdb_sql_name'), '/', parameters('geoBackupPolicies_Default_name_6'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_atlas_testingdb_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/atlas_testingdb_sql/transparentDataEncryption/current'.",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_atlas_testingdb_sql_name'), '/', parameters('transparentDataEncryption_current_name_6'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "status": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_atlas_testingdb_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/bc-audit-dw/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_bc_audit_dw_name'), '/', parameters('auditingPolicies_Default_name_5'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsAtlastestingserverBcauditdw",
                "auditLogsTableName": "AtlastestingserverBcauditdw",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_bc_audit_dw_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/bc-audit-dw/backupLongTermRetentionPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_bc_audit_dw_name'), '/', parameters('backupLongTermRetentionPolicies_Default_name_2'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Disabled",
                "recoveryServicesBackupPolicyResourceId": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_bc_audit_dw_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/bc-audit-dw/geoBackupPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_bc_audit_dw_name'), '/', parameters('geoBackupPolicies_Default_name_2'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_bc_audit_dw_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/bc-audit-dw/transparentDataEncryption/current'.",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_bc_audit_dw_name'), '/', parameters('transparentDataEncryption_current_name_2'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "status": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_bc_audit_dw_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/bc-audit-dw-dev/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_bc_audit_dw_dev_name'), '/', parameters('auditingPolicies_Default_name_6'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsAtlastestingserverBcauditdwdev",
                "auditLogsTableName": "AtlastestingserverBcauditdwdev",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_bc_audit_dw_dev_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/bc-audit-dw-dev/backupLongTermRetentionPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_bc_audit_dw_dev_name'), '/', parameters('backupLongTermRetentionPolicies_Default_name_3'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Disabled",
                "recoveryServicesBackupPolicyResourceId": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_bc_audit_dw_dev_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/bc-audit-dw-dev/geoBackupPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_bc_audit_dw_dev_name'), '/', parameters('geoBackupPolicies_Default_name_3'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_bc_audit_dw_dev_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/bc-audit-dw-dev/transparentDataEncryption/current'.",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_bc_audit_dw_dev_name'), '/', parameters('transparentDataEncryption_current_name_3'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "status": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_bc_audit_dw_dev_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/master/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_master_name'), '/', parameters('auditingPolicies_Default_name_3'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsAtlastestingserverMaster",
                "auditLogsTableName": "AtlastestingserverMaster",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/master/backupLongTermRetentionPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_master_name'), '/', parameters('backupLongTermRetentionPolicies_Default_name'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Disabled",
                "recoveryServicesBackupPolicyResourceId": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/master/geoBackupPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_master_name'), '/', parameters('geoBackupPolicies_Default_name'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/master/transparentDataEncryption/current'.",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_master_name'), '/', parameters('transparentDataEncryption_current_name'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "status": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/tmdm-snow-temp-sql/advisors/CreateIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_tmdm_snow_temp_sql_name'), '/', parameters('advisors_CreateIndex_name'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_tmdm_snow_temp_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/tmdm-snow-temp-sql/advisors/DropIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_tmdm_snow_temp_sql_name'), '/', parameters('advisors_DropIndex_name'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_tmdm_snow_temp_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/tmdm-snow-temp-sql/advisors/DbParameterization'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_tmdm_snow_temp_sql_name'), '/', parameters('advisors_DbParameterization_name'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_tmdm_snow_temp_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/tmdm-snow-temp-sql/advisors/ForceLastGoodPlan'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_tmdm_snow_temp_sql_name'), '/', parameters('advisors_ForceLastGoodPlan_name'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_tmdm_snow_temp_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/tmdm-snow-temp-sql/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_tmdm_snow_temp_sql_name'), '/', parameters('auditingPolicies_Default_name_7'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsAtlastestingserverTmdmsnowtempsql",
                "auditLogsTableName": "AtlastestingserverTmdmsnowtempsql",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_tmdm_snow_temp_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/tmdm-snow-temp-sql/backupLongTermRetentionPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_tmdm_snow_temp_sql_name'), '/', parameters('backupLongTermRetentionPolicies_Default_name_4'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Disabled",
                "recoveryServicesBackupPolicyResourceId": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_tmdm_snow_temp_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/tmdm-snow-temp-sql/geoBackupPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_tmdm_snow_temp_sql_name'), '/', parameters('geoBackupPolicies_Default_name_4'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_tmdm_snow_temp_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/atlas-testing-server/databases/tmdm-snow-temp-sql/transparentDataEncryption/current'.",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_atlas_testing_server_name'), '/', parameters('databases_tmdm_snow_temp_sql_name'), '/', parameters('transparentDataEncryption_current_name_4'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "status": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_atlas_testing_server_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_atlas_testing_server_name'), parameters('databases_tmdm_snow_temp_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('auditingPolicies_Default_name_2'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "fullAuditLogsTableName": "SQLDBAuditLogsBcauditdwservcerpoc",
                "auditLogsTableName": "Bcauditdwservcerpoc",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/backupLongTermRetentionVaults/RegisteredVault'.",
            "type": "Microsoft.Sql/servers/backupLongTermRetentionVaults",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('backupLongTermRetentionVaults_RegisteredVault_name_2'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "recoveryServicesVaultResourceId": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/databases/bc-audit-dw-poc'.",
            "type": "Microsoft.Sql/servers/databases",
            "kind": "v12.0,user,datawarehouse",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('databases_bc_audit_dw_poc_name'))]",
            "apiVersion": "2014-04-01-preview",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "databaseId": "8b6d0f47-cc55-455f-9d56-95750c54f9a3",
                "edition": "DataWarehouse",
                "status": "Online",
                "serviceLevelObjective": "DW100",
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": "263882790666240",
                "creationDate": "2018-02-19T10:17:57.58Z",
                "currentServiceObjectiveId": "4e63cb0e-91b9-46fd-b05c-51fdd2367618",
                "requestedServiceObjectiveId": "4e63cb0e-91b9-46fd-b05c-51fdd2367618",
                "requestedServiceObjectiveName": "DW100",
                "sampleName": null,
                "defaultSecondaryLocation": "North Europe",
                "earliestRestoreDate": null,
                "elasticPoolName": null,
                "containmentState": 2,
                "readScale": "Disabled",
                "failoverGroupId": null,
                "zoneRedundant": false,
                "isUpgradeRequested": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/firewallRules/AllowAllWindowsAzureIps'.",
            "type": "Microsoft.Sql/servers/firewallRules",
            "kind": "v12.0",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('firewallRules_AllowAllWindowsAzureIps_name_2'))]",
            "apiVersion": "2014-04-01-preview",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/firewallRules/ClientIPAddress_2018-02-19_10:24:06'.",
            "type": "Microsoft.Sql/servers/firewallRules",
            "kind": "v12.0",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('firewallRules_ClientIPAddress_2018_02_19_10:24:06_name'))]",
            "apiVersion": "2014-04-01-preview",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "startIpAddress": "103.56.173.1",
                "endIpAddress": "103.56.173.1"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/encryptionProtector/current'.",
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "kind": "servicemanaged",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('encryptionProtector_current_name_2'))]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/keys/ServiceManaged'.",
            "type": "Microsoft.Sql/servers/keys",
            "kind": "servicemanaged",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('keys_ServiceManaged_name_2'))]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "serverKeyType": "[parameters('keys_ServiceManaged_name_2')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/databases/bc-audit-dw-poc/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('databases_bc_audit_dw_poc_name'), '/', parameters('auditingPolicies_Default_name_8'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsBcauditdwservcerpocBcauditdwpoc",
                "auditLogsTableName": "BcauditdwservcerpocBcauditdwpoc",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_bc_audit_dw_servcer_poc_name'), parameters('databases_bc_audit_dw_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/databases/bc-audit-dw-poc/backupLongTermRetentionPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('databases_bc_audit_dw_poc_name'), '/', parameters('backupLongTermRetentionPolicies_Default_name_5'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Disabled",
                "recoveryServicesBackupPolicyResourceId": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_bc_audit_dw_servcer_poc_name'), parameters('databases_bc_audit_dw_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/databases/bc-audit-dw-poc/geoBackupPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('databases_bc_audit_dw_poc_name'), '/', parameters('geoBackupPolicies_Default_name_5'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_bc_audit_dw_servcer_poc_name'), parameters('databases_bc_audit_dw_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/databases/bc-audit-dw-poc/transparentDataEncryption/current'.",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('databases_bc_audit_dw_poc_name'), '/', parameters('transparentDataEncryption_current_name_5'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "status": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_bc_audit_dw_servcer_poc_name'), parameters('databases_bc_audit_dw_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/databases/master/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('databases_master_name_1'), '/', parameters('auditingPolicies_Default_name_4'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsBcauditdwservcerpocMaster",
                "auditLogsTableName": "BcauditdwservcerpocMaster",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/databases/master/backupLongTermRetentionPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('databases_master_name_1'), '/', parameters('backupLongTermRetentionPolicies_Default_name_1'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Disabled",
                "recoveryServicesBackupPolicyResourceId": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/databases/master/geoBackupPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('databases_master_name_1'), '/', parameters('geoBackupPolicies_Default_name_1'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/bc-audit-dw-servcer-poc/databases/master/transparentDataEncryption/current'.",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_bc_audit_dw_servcer_poc_name'), '/', parameters('databases_master_name_1'), '/', parameters('transparentDataEncryption_current_name_1'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "status": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_bc_audit_dw_servcer_poc_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/sqlserver6qpalerame3h4/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "name": "[concat(parameters('servers_sqlserver6qpalerame3h4_name'), '/', parameters('auditingPolicies_Default_name_1'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "fullAuditLogsTableName": "SQLDBAuditLogsSqlserver6qpalerame3h4",
                "auditLogsTableName": "Sqlserver6qpalerame3h4",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver6qpalerame3h4_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/sqlserver6qpalerame3h4/backupLongTermRetentionVaults/RegisteredVault'.",
            "type": "Microsoft.Sql/servers/backupLongTermRetentionVaults",
            "name": "[concat(parameters('servers_sqlserver6qpalerame3h4_name'), '/', parameters('backupLongTermRetentionVaults_RegisteredVault_name_1'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "recoveryServicesVaultResourceId": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver6qpalerame3h4_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/sqlserver6qpalerame3h4/firewallRules/AllowAllWindowsAzureIps'.",
            "type": "Microsoft.Sql/servers/firewallRules",
            "kind": "v12.0",
            "name": "[concat(parameters('servers_sqlserver6qpalerame3h4_name'), '/', parameters('firewallRules_AllowAllWindowsAzureIps_name_1'))]",
            "apiVersion": "2014-04-01-preview",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver6qpalerame3h4_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/sqlserver6qpalerame3h4/encryptionProtector/current'.",
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "kind": "servicemanaged",
            "name": "[concat(parameters('servers_sqlserver6qpalerame3h4_name'), '/', parameters('encryptionProtector_current_name_1'))]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver6qpalerame3h4_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Sql/servers/sqlserver6qpalerame3h4/keys/ServiceManaged'.",
            "type": "Microsoft.Sql/servers/keys",
            "kind": "servicemanaged",
            "name": "[concat(parameters('servers_sqlserver6qpalerame3h4_name'), '/', parameters('keys_ServiceManaged_name_1'))]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "serverKeyType": "[parameters('keys_ServiceManaged_name_1')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver6qpalerame3h4_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bconnectaudit-dev/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_bconnectaudit_dev_name'), '/', parameters('config_web_name_4'))]",
            "apiVersion": "2016-08-01",
            "location": "West Europe",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CloudopsHosting": "empty"
            },
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$bconnectaudit-dev",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": null,
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bconnectaudit_dev_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bconnectaudit-dev/hostNameBindings/bconnectaudit-dev.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_bconnectaudit_dev_name'), '/', parameters('hostNameBindings_bconnectaudit_dev.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "siteName": "bconnectaudit-dev",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bconnectaudit_dev_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/webSite6qpalerame3h4/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_webSite6qpalerame3h4_name'), '/', parameters('config_web_name_6'))]",
            "apiVersion": "2016-08-01",
            "location": "West Europe",
            "tags": {
                "displayName": "Website",
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CloudopsHosting": "empty"
            },
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "[concat('$', parameters('config_web_name_6'),'Site6qpalerame3h4')]",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": null,
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webSite6qpalerame3h4_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/webSite6qpalerame3h4/hostNameBindings/website6qpalerame3h4.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_webSite6qpalerame3h4_name'), '/', parameters('hostNameBindings_website6qpalerame3h4.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "siteName": "webSite6qpalerame3h4",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webSite6qpalerame3h4_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/dw-OpportunityDumper-af/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_dw_OpportunityDumper_af_name'), '/', parameters('config_web_name_7'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$dw-OpportunityDumper-af",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ]
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_dw_OpportunityDumper_af_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/dw-OpportunityDumper-af/hostNameBindings/dw-opportunitydumper-af.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_dw_OpportunityDumper_af_name'), '/', parameters('hostNameBindings_dw_opportunitydumper_af.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "dw-OpportunityDumper-af",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_dw_OpportunityDumper_af_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-SF-OpportunityIntegrator-func/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_bc_SF_OpportunityIntegrator_func_name'), '/', parameters('config_web_name_14'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$bc-SF-OpportunityIntegrator-func",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ]
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_SF_OpportunityIntegrator_func_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-SF-OpportunityIntegrator-func/hostNameBindings/bc-sf-opportunityintegrator-func.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_bc_SF_OpportunityIntegrator_func_name'), '/', parameters('hostNameBindings_bc_sf_opportunityintegrator_func.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "bc-SF-OpportunityIntegrator-func",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_SF_OpportunityIntegrator_func_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-sf-Contact-BulkContactPersister-fa/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_bc_sf_Contact_BulkContactPersister_fa_name'), '/', parameters('config_web_name_15'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CentralUSPlan": "empty"
            },
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$bc-sf-Contact-BulkContactPersister-fa",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ]
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_sf_Contact_BulkContactPersister_fa_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-sf-Contact-BulkContactPersister-fa/hostNameBindings/bc-sf-contact-bulkcontactpersister-fa.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_bc_sf_Contact_BulkContactPersister_fa_name'), '/', parameters('hostNameBindings_bc_sf_contact_bulkcontactpersister_fa.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "bc-sf-Contact-BulkContactPersister-fa",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_sf_Contact_BulkContactPersister_fa_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/tmdm-ContactPersister-fa/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_tmdm_ContactPersister_fa_name'), '/', parameters('config_web_name_10'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$tmdm-ContactPersister-fa",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ]
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_tmdm_ContactPersister_fa_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/tmdm-ContactPersister-fa/hostNameBindings/tmdm-contactpersister-fa.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_tmdm_ContactPersister_fa_name'), '/', parameters('hostNameBindings_tmdm_contactpersister_fa.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "tmdm-ContactPersister-fa",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_tmdm_ContactPersister_fa_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/test-appservice/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_test_appservice_name'), '/', parameters('config_web_name_3'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.Web/serverfarms/ServicePlan9f2174e8-8584": "empty"
            },
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$test-appservice",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": null,
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_test_appservice_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/test-appservice/hostNameBindings/test-appservice.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_test_appservice_name'), '/', parameters('hostNameBindings_test_appservice.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "test-appservice",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_test_appservice_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/test-FunctionApp20180402044309/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_test_FunctionApp20180402044309_name'), '/', parameters('config_web_name_13'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CentralUSPlan": "empty"
            },
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2017",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$test-FunctionApp20180402044309",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ]
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_test_FunctionApp20180402044309_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/test-FunctionApp20180402044309/hostNameBindings/test-functionapp20180402044309.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_test_FunctionApp20180402044309_name'), '/', parameters('hostNameBindings_test_functionapp20180402044309.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "test-FunctionApp20180402044309",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_test_FunctionApp20180402044309_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bconnectprocessopportunities/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_bconnectprocessopportunities_name'), '/', parameters('config_web_name_12'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2017",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$bconnectprocessopportunities",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ]
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bconnectprocessopportunities_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bconnectprocessopportunities/hostNameBindings/bconnectprocessopportunities.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_bconnectprocessopportunities_name'), '/', parameters('hostNameBindings_bconnectprocessopportunities.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "bconnectprocessopportunities",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bconnectprocessopportunities_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-audit-management-api/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_bc_audit_management_api_name'), '/', parameters('config_web_name_8'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$bc-audit-management-api",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ]
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-audit-management-api/hostNameBindings/bc-audit-management-api.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_bc_audit_management_api_name'), '/', parameters('hostNameBindings_bc_audit_management_api.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "bc-audit-management-api",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-audit-management-api1/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_bc_audit_management_api1_name'), '/', parameters('config_web_name_11'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CentralUSPlan": "empty"
            },
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$bc-audit-management-api1",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ]
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-audit-management-api1/hostNameBindings/bc-audit-management-api1.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_bc_audit_management_api1_name'), '/', parameters('hostNameBindings_bc_audit_management_api1.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "bc-audit-management-api1",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_audit_management_api1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/TOSCAAPI/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_TOSCAAPI_name'), '/', parameters('config_web_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$TOSCAAPI",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ]
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_TOSCAAPI_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/TOSCAAPI/hostNameBindings/toscaapi.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_TOSCAAPI_name'), '/', parameters('hostNameBindings_toscaapi.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "TOSCAAPI",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_TOSCAAPI_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/SAPBConnectAPIApp/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_SAPBConnectAPIApp_name'), '/', parameters('config_web_name_5'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourcegroups/cloudops-dev/providers/Microsoft.Web/serverfarms/ServicePlan4456d05f-b8ed": "empty"
            },
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$SAPBConnectAPIApp",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": null,
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_SAPBConnectAPIApp_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/SAPBConnectAPIApp/hostNameBindings/sapbconnectapiapp.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_SAPBConnectAPIApp_name'), '/', parameters('hostNameBindings_sapbconnectapiapp.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "SAPBConnectAPIApp",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_SAPBConnectAPIApp_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-CommonApp/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_bc_CommonApp_name'), '/', parameters('config_web_name_2'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CentralUSPlan": "empty"
            },
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$bc-CommonApp",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ]
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_CommonApp_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-CommonApp/hostNameBindings/bc-commonapp.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_bc_CommonApp_name'), '/', parameters('hostNameBindings_bc_commonapp.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "bc-CommonApp",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_CommonApp_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/ToscaApis/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_ToscaApis_name'), '/', parameters('config_web_name_1'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "tags": {
                "hidden-related:/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/serverfarms/CentralUSPlan": "empty"
            },
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$ToscaApis",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ]
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": true,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ToscaApis_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/ToscaApis/hostNameBindings/toscaapis.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_ToscaApis_name'), '/', parameters('hostNameBindings_toscaapis.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "ToscaApis",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ToscaApis_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-OpportunityParser-fa/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_bc_OpportunityParser_fa_name'), '/', parameters('config_web_name_9'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2017",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$bc-OpportunityParser-fa",
                "publishingPassword": null,
                "appSettings": null,
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ]
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_OpportunityParser_fa_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4eff8c1d-85c4-46a8-a56d-db0f5efefeb4/resourceGroups/cloudops-dev/providers/Microsoft.Web/sites/bc-OpportunityParser-fa/hostNameBindings/bc-opportunityparser-fa.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_bc_OpportunityParser_fa_name'), '/', parameters('hostNameBindings_bc_opportunityparser_fa.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "bc-OpportunityParser-fa",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_bc_OpportunityParser_fa_name'))]"
            ]
        }
    ]
}